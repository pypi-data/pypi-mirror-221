"use strict";(self.webpackChunk_shannon_shen_chapyter=self.webpackChunk_shannon_shen_chapyter||[]).push([[568],{568:(e,t,l)=>{l.r(t),l.d(t,{default:()=>r});var n=l(861),o=l(882);const d="jp-chapyter-chat-executing";function a(e){if((0,o.isCodeCellModel)(e.model)){let t=e.model.getMetadata("ChapyterCell")||null;if(t&&"generated"===t.cellType)return!1}return!0}function i(e,t){let l=e.activeCellIndex,o=function(e,t){for(let l=0;l<e.widgets.length;l++)if(e.widgets[l].model.id===t)return l;return-1}(e,t);if(-1!==o&&l!==o)if(l<o)for(let t=l;t<o;t++)e.widgets[t].inputHidden||n.NotebookActions.selectBelow(e);else for(let t=l;t>o;t--)e.widgets[t].inputHidden||n.NotebookActions.selectAbove(e)}function s(e,t=!1){let l=e.model.sharedModel.getSource();return!(!l.startsWith("%chat")&&!l.startsWith("%%chat")||l.startsWith("%%chatonly")&&t)}const r={id:"@shannon-shen/chapyter:plugin",description:"A Natural Language-Based Python Program Interpreter",autoStart:!0,requires:[n.INotebookTracker],activate:(e,t)=>{n.NotebookActions.executed.connect(((e,l)=>{if(l.success){let e=l.cell;if(s(e,!0)&&a(e)){void 0===e.model.getMetadata("ChapyterCell")&&e.model.setMetadata("ChapyterCell",{cellType:"original"});let l=function(e){let t=e.model.sharedModel.getSource().split("\n")[0];return t.includes("-s")||t.includes("--safe")}(e),o=t.currentWidget;if(o){let t=function(e,t){if(t){const l=`# Assistant Code for Cell [${t}]:`;for(let t=0;t<e.widgets.length;t++){let n=e.widgets[t];if("code"===n.model.type&&n.model.sharedModel.getSource().split("\n")[0].startsWith(l))return n}}return null}(o.content,e.model.executionCount);t&&(t.model.setMetadata("ChapyterCell",{cellType:"generated",linkedCellId:e.model.id}),console.log(l),l||(i(o.content,t.model.id),n.NotebookActions.run(o.content,o.sessionContext),t.inputHidden=!0),i(o.content,t.model.id),l||n.NotebookActions.selectBelow(o.content),e.model.setMetadata("ChapyterCell",{cellType:"original",linkedCellId:t.model.id}),e.addClass("jp-chapyter-chat"),e.removeClass(d),t.addClass("jp-chapyter-assistance"))}}}})),n.NotebookActions.executionScheduled.connect(((e,l)=>{var n;let o=l.cell;if(s(o)&&a(o)){o.toggleClass(d);let e=null===(n=o.model.getMetadata("ChapyterCell"))||void 0===n?void 0:n.linkedCellId,l=t.currentWidget;if(l&&e){let t=function(e,t){for(let l=0;l<e.widgets.length;l++){let n=e.widgets[l];if(n.model.id===t)return n}return null}(l.content,e);t&&(function(e,t){const l=e.model.sharedModel,n=[];e.widgets.forEach(((l,o)=>{var d;l===t&&!1!==l.model.getMetadata("deletable")&&(n.push(o),null===(d=e.model)||void 0===d||d.deletedCells.push(l.model.id))})),n.length>0&&(l.transact((()=>{n.reverse().forEach((e=>{l.deleteCell(e)}))})),e.activeCellIndex=n[0]-n.length+1),e.deselectAll()}(l.content,t),i(l.content,o.model.id))}}}))}}}}]);