"use strict";(self.webpackChunkjupyterlab_gitlab=self.webpackChunkjupyterlab_gitlab||[]).push([[232],{232:(e,t,s)=>{s.r(t),s.d(t,{default:()=>P,gitLabIcon:()=>C});var r=s(4),i=s(172),a=s(580),n=s(663),o=s(237),l=s(154),c=s(901),h=s(987),d=s(1),p=s(790);function u(e,t){return p.ServerConnection.makeRequest(e,{},t).then((e=>200!==e.status?e.json().then((t=>{throw new p.ServerConnection.ResponseError(e,t.message)})):e.json()))}var m=s(959);const b="https://gitlab.com";class _{constructor(e){this._baseUrl="",this._validUser=!1,this._defaultBranch="",this._isDisposed=!1,this._fileChanged=new c.Signal(this),this._serverSettings=p.ServerConnection.makeSettings(),this._fileTypeForPath=t=>{const s=e.getFileTypesForPath(t);return 0===s.length?e.getFileType("text"):s[0]},this.baseUrl=b,this._useProxy=new Promise((e=>{u(h.URLExt.join(this._serverSettings.baseUrl,"gitlab",y.b64EncodeUrlSafe("/templates/licenses")),this._serverSettings).then((()=>{e(!0)})).catch((()=>{console.warn("The JupyterLab GitLab server extension appears to be missing. If you do not install it with application credentials, you are likely to be rate limited by GitLab very quickly"),e(!1)}))})),this.rateLimitedState=new d.ObservableValue(!1)}get name(){return"GitLab"}get validUser(){return this._validUser}get serverSettings(){return this._serverSettings}get fileChanged(){return this._fileChanged}get isDisposed(){return this._isDisposed}dispose(){this.isDisposed||(this._isDisposed=!0,c.Signal.clearData(this))}get baseUrl(){return this._baseUrl}set baseUrl(e){this._baseUrl=e}get accessToken(){return this._accessToken}set accessToken(e){this._accessToken=e}get(e,t){const s=g(e);if(""===s.user)return this._validUser=!1,Promise.resolve(y.dummyDirectory);if(s.user&&!s.repository)return this._listRepos(s.user);let r="tree";if(s.path)r=!t||"file"!==t.type&&"notebook"!==t.type?h.URLExt.join("tree","?path="+encodeURIComponent(s.path)):h.URLExt.join("files",encodeURIComponent(s.path))+"?ref="+this._defaultBranch;else{const e=h.URLExt.join("projects",encodeURIComponent(s.user)+"%2F"+encodeURIComponent(s.repository));this._apiRequest(e).then((e=>{this._defaultBranch=e.default_branch}))}const i=h.URLExt.join("projects",encodeURIComponent(s.user)+"%2F"+encodeURIComponent(s.repository),"repository",r);return this._apiRequest(i).then((t=>(this._validUser=!0,!1!==this.rateLimitedState.get()&&this.rateLimitedState.set(!1),y.gitLabContentsToJupyterContents(e,t,this._fileTypeForPath)))).catch((e=>404===e.response.status?(console.warn("GitLab: cannot find group/repo. Perhaps you misspelled something?"),this._validUser=!1,y.dummyDirectory):403===e.response.status&&-1!==e.message.indexOf("rate limit")?(!0!==this.rateLimitedState.get()&&this.rateLimitedState.set(!0),console.error(e.message),Promise.reject(e)):(console.error(e.message),Promise.reject(e))))}getDownloadUrl(e){const t=g(e);if(!t.user)return Promise.reject("GitLab: no active group");if(!t.path)return Promise.reject("GitLab: No file selected");const s=h.URLExt.join(this.baseUrl,"api","v4"),r=h.URLExt.join(s,"projects",encodeURIComponent(t.user)+"%2F"+encodeURIComponent(t.repository),"repository","files",encodeURIComponent(t.path),"raw")+"?ref="+this._defaultBranch;return Promise.resolve(r)}newUntitled(e={}){return Promise.reject("Repository is read only")}delete(e){return Promise.reject("Repository is read only")}rename(e,t){return Promise.reject("Repository is read only")}save(e,t){return Promise.reject("Repository is read only")}copy(e,t){return Promise.reject("Repository is read only")}createCheckpoint(e){return Promise.reject("Repository is read only")}listCheckpoints(e){return Promise.resolve([])}restoreCheckpoint(e,t){return Promise.reject("Repository is read only")}deleteCheckpoint(e,t){return Promise.reject("Read only")}_listRepos(e){const t=h.URLExt.encodeParts(h.URLExt.join("groups",e,"projects"));return this._apiRequest(t).catch((t=>{if(404===t.response.status){const t=h.URLExt.encodeParts(h.URLExt.join("users",e,"projects"));return this._apiRequest(t)}throw t})).then((e=>(this._validUser=!0,!1!==this.rateLimitedState.get()&&this.rateLimitedState.set(!1),y.reposToDirectory(e)))).catch((e=>(403===e.response.status&&-1!==e.message.indexOf("rate limit")?!0!==this.rateLimitedState.get()&&this.rateLimitedState.set(!0):(console.error(e.message),console.warn("GitLab: cannot find user. Perhaps you misspelled something?"),this._validUser=!1),y.dummyDirectory)))}_apiRequest(e){return this._useProxy.then((t=>{const s=e.split("?");let r=s[0];const i=(s[1]||"").split("&"),a={};for(const e of i)if(e){const[t,s]=e.split("=");a[t]=s}let n;return!0===t?(n=h.URLExt.join(this._serverSettings.baseUrl,"gitlab"),this.accessToken&&(a.private_token=this.accessToken)):n=h.URLExt.join(this.baseUrl,"api","v4"),r&&(!0===t&&(r=y.b64EncodeUrlSafe(r)),n=h.URLExt.join(n,r)),n+="?"+Object.keys(a).map((e=>`${e}=${a[e]}`)).join("&"),!0===t?u(n,this._serverSettings):(o=n,window.fetch(o).then((e=>200!==e.status?e.json().then((t=>{throw new p.ServerConnection.ResponseError(e,t.message)})):e.json())));var o}))}}function g(e){const t=e.split("/");return{user:t.length>0?t[0]:"",repository:t.length>1?t[1]:"",path:t.length>2?h.URLExt.join(...t.slice(2)):""}}var y;!function(e){function t(e,t){const s=new Response(t,{status:e,statusText:t});return new p.ServerConnection.ResponseError(s,t)}e.dummyDirectory={type:"directory",path:"",name:"",format:"json",content:[],created:"",writable:!1,last_modified:"",mimetype:""},e.gitLabContentsToJupyterContents=function s(r,i,a){if(Array.isArray(i))return{name:h.PathExt.basename(r),path:r,format:"json",type:"directory",writable:!1,created:"",last_modified:"",mimetype:"",content:i.map((e=>s(h.PathExt.join(r,e.name),e,a)))};if("blob"===i.type||i.hasOwnProperty("file_name")){const t=a(r),s=i.content;let n;switch(t.fileFormat){case"text":n=void 0!==s?e.b64DecodeUTF8(s):null;break;case"base64":n=void 0!==s?s:null;break;case"json":n=void 0!==s?JSON.parse(e.b64DecodeUTF8(s)):null;break;default:throw new Error(`Unexpected file format: ${t.fileFormat}`)}return{name:h.PathExt.basename(r),path:r,format:t.fileFormat,type:"file",created:"",writable:!1,last_modified:"",mimetype:t.mimeTypes[0],content:n}}if("tree"===i.type)return{name:h.PathExt.basename(r),path:r,format:"json",type:"directory",created:"",writable:!1,last_modified:"",mimetype:"",content:null};throw"commit"===i.type?t(400,`Cannot open "${i.name}" because it is a submodule`):t(500,`"${i.name}" has and unexpected type: ${i.type}`)},e.reposToDirectory=function(e){return{name:"",path:"",format:"json",type:"directory",created:"",last_modified:"",writable:!1,mimetype:"",content:e.map((e=>({name:e.name,path:e.path_with_namespace,format:"json",type:"directory",created:"",writable:!1,last_modified:"",mimetype:"",content:null})))}},e.makeError=t;const s=new TextDecoder("utf8");e.b64DecodeUTF8=function(e){const t=m.toByteArray(e.replace(/\n/g,""));return s.decode(t)},e.b64EncodeUrlSafe=function(e){return btoa(e).replace(/\+/g,"-").replace(/\//g,"_")}}(y||(y={}));var f=s(778);class w extends f.Widget{constructor(e,t){super(),this._errorPanel=null,this._changeGuard=!1,this.addClass("jp-GitLabBrowser"),this.layout=new f.PanelLayout,this.layout.addWidget(e),this._browser=e,this._drive=t,this.userName=new v,this.userName.node.title="Click to edit user/group",this._browser.toolbar.addItem("user",this.userName),this.userName.nameChanged.connect(this._onUserChanged,this),this._openGitLabButton=new i.ToolbarButton({onClick:()=>{let e=this._drive.baseUrl;if(!this._drive.validUser)return void window.open(e);const t=g(this._browser.model.manager.services.contents.localPath(this._browser.model.path));e=h.URLExt.join(e,t.user),t.repository&&(e=h.URLExt.join(e,t.repository,"tree","master",t.path)),window.open(e)},iconClass:"jp-GitLab-icon jp-Icon jp-Icon-16",tooltip:"Open this repository on GitLab"}),this._openGitLabButton.addClass("jp-GitLab-toolbar-item"),this._browser.toolbar.addItem("GitLab",this._openGitLabButton);const s=new i.ToolbarButton({icon:a.refreshIcon,onClick:()=>{this._browser.model.refresh()},tooltip:"Refresh File List"});s.addClass("jp-GitLab-toolbar-item"),this._browser.toolbar.addItem("gh-refresher",s),this._browser.model.pathChanged.connect(this._onPathChanged,this),this._onPathChanged(),this._drive.rateLimitedState.changed.connect(this._updateErrorPanel,this)}_onUserChanged(){this._changeGuard||(this._changeGuard=!0,this._browser.model.cd(`/${this.userName.name}`).then((()=>{this._changeGuard=!1,this._updateErrorPanel(),document.activeElement===document.body&&this._browser.layout.widgets[1].node.focus()})))}_onPathChanged(){const e=g(this._browser.model.manager.services.contents.localPath(this._browser.model.path));this._changeGuard||(this._changeGuard=!0,this.userName.name=e.user,this._changeGuard=!1,this._updateErrorPanel())}_updateErrorPanel(){const e=g(this._browser.model.manager.services.contents.localPath(this._browser.model.path)),t=this._drive.rateLimitedState.get(),s=this._drive.validUser;if(this._errorPanel&&(this._browser.layout.widgets[1].node.removeChild(this._errorPanel.node),this._errorPanel.dispose(),this._errorPanel=null),t)this._errorPanel=new L("You have been rate limited by GitLab! You will need to wait about an hour before continuing"),this._browser.layout.widgets[1].node.appendChild(this._errorPanel.node);else if(s);else{const t=e.user?`"${e.user}" appears to be an invalid user name!`:"Please enter a GitLab user name";this._errorPanel=new L(t),this._browser.layout.widgets[1].node.appendChild(this._errorPanel.node)}}}class v extends f.Widget{constructor(){super(),this._name="",this._nameChanged=new c.Signal(this),this.addClass("jp-GitLabUserInput");const e=this.layout=new f.PanelLayout,t=new f.Widget;t.addClass("jp-GitLabUserInput-wrapper"),this._input=document.createElement("input"),this._input.placeholder="GitLab User or Group",this._input.className="jp-GitLabUserInput-input",t.node.appendChild(this._input),e.addWidget(t)}get name(){return this._name}set name(e){if(e===this._name)return;const t=this._name;this._name=e,this._input.value=e,this._nameChanged.emit({oldValue:t,newValue:e})}get nameChanged(){return this._nameChanged}handleEvent(e){switch(e.type){case"keydown":13===e.keyCode&&(e.stopPropagation(),e.preventDefault(),this.name=this._input.value,this._input.blur());break;case"blur":e.stopPropagation(),e.preventDefault(),this.name=this._input.value;break;case"focus":e.stopPropagation(),e.preventDefault(),this._input.select()}}onAfterAttach(e){this._input.addEventListener("keydown",this),this._input.addEventListener("blur",this),this._input.addEventListener("focus",this)}onBeforeDetach(e){this._input.removeEventListener("keydown",this),this._input.removeEventListener("blur",this),this._input.removeEventListener("focus",this)}}class L extends f.Widget{constructor(e){super(),this.addClass("jp-GitLabErrorPanel");const t=document.createElement("div"),s=document.createElement("div");t.className="jp-GitLabErrorImage",s.className="jp-GitLabErrorText",s.textContent=e,this.node.appendChild(t),this.node.appendChild(s)}}const U="gitlab-filebrowser",j="jupyterlab-gitlab:drive",C=new a.LabIcon({name:`${U}:icon`,svgstr:'<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 622 682"><defs><style>.cls-1{fill:#5c5c5c;}.cls-2{fill:#a1a1a1;}.cls-3{fill:#787878;}</style></defs><title>stacked_wm_grayscale</title><path id="path14" class="cls-1" d="M316.89,497.33h-19l0.06,141.74H375V621.55h-58l-0.06-124.22h0Z"/><path id="path26" class="cls-1" d="M448.32,614.19a32.46,32.46,0,0,1-23.59,10c-14.5,0-20.35-7.14-20.35-16.45,0-14.07,9.74-20.77,30.52-20.77A86.46,86.46,0,0,1,448.32,588v26.19h0Zm-19.7-85.91a63.45,63.45,0,0,0-40.5,14.53l6.73,11.66c7.79-4.54,17.32-9.09,31-9.09,15.58,0,22.51,8,22.51,21.42v6.93a81.48,81.48,0,0,0-13.2-1.08c-33.33,0-50.22,11.69-50.22,36.14,0,21.86,13.42,32.89,33.76,32.89,13.71,0,26.84-6.28,31.38-16.45l3.46,13.85h13.42V566.58c0-22.94-10-38.3-38.31-38.3h0Z"/><path id="path30" class="cls-1" d="M528.4,624.8c-7.14,0-13.42-.87-18.18-3V556.2c6.49-5.41,14.5-9.31,24.68-9.31,18.4,0,25.54,13,25.54,34,0,29.86-11.47,43.93-32,43.93m8-96.52a34.88,34.88,0,0,0-26.19,11.58V521.57l-0.06-24.24H491.54l0.06,138.28c9.31,3.9,22.08,6.06,35.93,6.06,35.5,0,52.6-22.72,52.6-61.89,0-30.95-15.8-51.51-43.73-51.51"/><path id="path34" class="cls-1" d="M109.84,512.7c16.88,0,27.7,5.63,34.85,11.25l8.19-14.18c-11.16-9.78-26.16-15-42.17-15-40.47,0-68.83,24.67-68.83,74.44,0,52.15,30.59,72.5,65.58,72.5a111,111,0,0,0,42.21-8.22l-0.4-55.72V560.2H97.32v17.53h33.12l0.4,42.31c-4.33,2.16-11.9,3.9-22.08,3.9-28.14,0-47-17.7-47-55,0-37.87,19.48-56.26,48.05-56.26"/><path id="path38" class="cls-1" d="M243.79,497.33H225.17l0.06,23.8v82.23c0,22.94,10,38.3,38.31,38.3a64.16,64.16,0,0,0,11.47-1V623.93a57,57,0,0,1-8.66.65c-15.58,0-22.51-8-22.51-21.42v-56.7H275V530.88H243.85l-0.06-33.54h0Z"/><path id="path40" class="cls-1" d="M177.94,639.08h18.61V530.88H177.94v108.2h0Z"/><path id="path42" class="cls-1" d="M177.94,515.94h18.61V497.33H177.94v18.61h0Z"/><path id="path46" class="cls-2" d="M525.05,266.61l-24-74L453.36,46a8.19,8.19,0,0,0-15.58,0L390.12,192.62H231.88L184.22,46a8.19,8.19,0,0,0-15.58,0L121,192.62l-24,74a16.38,16.38,0,0,0,6,18.31L311,436.09,519.1,284.92a16.38,16.38,0,0,0,6-18.31"/><path id="path50" class="cls-1" d="M311,436.09h0l79.12-243.47H231.88L311,436.09h0Z"/><path id="path58" class="cls-3" d="M311,436.09L231.88,192.62H121L311,436.09h0Z"/><path id="path66" class="cls-2" d="M121,192.62h0l-24,74a16.37,16.37,0,0,0,6,18.31L311,436.09,121,192.62h0Z"/><path id="path74" class="cls-1" d="M121,192.62H231.88L184.22,46a8.19,8.19,0,0,0-15.58,0L121,192.62h0Z"/><path id="path78" class="cls-3" d="M311,436.09l79.12-243.47H501L311,436.09h0Z"/><path id="path82" class="cls-2" d="M501,192.62h0l24,74a16.37,16.37,0,0,1-6,18.31L311,436.09,501,192.62h0Z"/><path id="path86" class="cls-1" d="M501,192.62H390.12L437.78,46a8.19,8.19,0,0,1,15.58,0L501,192.62h0Z"/></svg>'}),P={id:j,requires:[o.IDocumentManager,l.IFileBrowserFactory,r.ILayoutRestorer,n.ISettingRegistry],activate:function(e,t,s,r,i){const a=new _(e.docRegistry);t.services.contents.addDrive(a);const n=s.createFileBrowser(U,{driveName:a.name,refreshInterval:3e5}),o=new w(n,a);o.title.icon=C,o.title.iconClass="jp-SideBar-tabIcon",o.title.caption="Browse GitLab",o.id="gitlab-file-browser",r.add(o,U),e.shell.add(o,"left",{rank:102});let l=!1;const c=async e=>{const t=e.get("baseUrl").composite,s=e.get("accessToken").composite;if(a.baseUrl=t||b,s){let t=!0;l&&(t=await R.showWarning()),t?a.accessToken=s:e.remove("accessToken")}else a.accessToken=null};Promise.all([i.load(j),e.restored]).then((([e])=>{e.changed.connect(c),c(e),l=!0;const t=e.get("defaultRepo").composite;t&&n.model.restored.then((()=>{n.model.cd(`/${t}`)}))})).catch((e=>{console.error(e.message)}))},autoStart:!0};var R;!function(e){e.showWarning=async function(){return(0,i.showDialog)({title:"Security Alert!",body:"Adding a client side access token can pose a security risk! Please consider using the server extension instead.Do you want to continue?",buttons:[i.Dialog.cancelButton({label:"CANCEL"}),i.Dialog.warnButton({label:"PROCEED"})]}).then((e=>!!e.button.accept))}}(R||(R={}))}}]);