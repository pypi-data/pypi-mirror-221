"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Contains services anotated with `google.api.http` which
then translate nicely into an OpenAPI V3 definition.
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import kerfed.protos.api.v1.part_pb2
import kerfed.protos.common.v1.outcome_pb2
import kerfed.protos.common.v1.scene_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class AssemblyDocument(google.protobuf.message.Message):
    """This is the API representation of an assembly."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSEMBLY_ID_FIELD_NUMBER: builtins.int
    SCENE_FIELD_NUMBER: builtins.int
    OUTCOME_FIELD_NUMBER: builtins.int
    PARTS_FIELD_NUMBER: builtins.int
    assembly_id: builtins.str
    @property
    def scene(self) -> kerfed.protos.common.v1.scene_pb2.Scene:
        """contains a neutral format description of the scene"""
    @property
    def outcome(self) -> kerfed.protos.common.v1.outcome_pb2.Outcome: ...
    @property
    def parts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.api.v1.part_pb2.PartDocument]: ...
    def __init__(
        self,
        *,
        assembly_id: builtins.str = ...,
        scene: kerfed.protos.common.v1.scene_pb2.Scene | None = ...,
        outcome: kerfed.protos.common.v1.outcome_pb2.Outcome | None = ...,
        parts: collections.abc.Iterable[kerfed.protos.api.v1.part_pb2.PartDocument] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["outcome", b"outcome", "scene", b"scene"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assembly_id", b"assembly_id", "outcome", b"outcome", "parts", b"parts", "scene", b"scene"]) -> None: ...

global___AssemblyDocument = AssemblyDocument

@typing_extensions.final
class AssemblyCreateRequest(google.protobuf.message.Message):
    """Request an assembly to be analyzed."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_ID_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    IS_SPLITTABLE_FIELD_NUMBER: builtins.int
    THICKNESS_FIELD_NUMBER: builtins.int
    file_id: builtins.str
    """A file ID returned when a file upload request is made."""
    units: builtins.str
    """If the file is in a format which doesn't contain units
    such as DXF, SVG, STL, or PLY the request may be rejected
    if this field isn't filled in.
    """
    is_splittable: builtins.bool
    """For STL or other mesh files split into
    multiple bodies before analyzing.
    """
    thickness: builtins.float
    """If you are uploading a 2D CAD file specify how thick a
    sheet you wish them to be cut from. Note that this is
    in the same units as passed above.
    """
    def __init__(
        self,
        *,
        file_id: builtins.str = ...,
        units: builtins.str = ...,
        is_splittable: builtins.bool = ...,
        thickness: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_thickness", b"_thickness", "thickness", b"thickness"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_thickness", b"_thickness", "file_id", b"file_id", "is_splittable", b"is_splittable", "thickness", b"thickness", "units", b"units"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_thickness", b"_thickness"]) -> typing_extensions.Literal["thickness"] | None: ...

global___AssemblyCreateRequest = AssemblyCreateRequest

@typing_extensions.final
class AssemblyCreateResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSEMBLY_ID_FIELD_NUMBER: builtins.int
    assembly_id: builtins.str
    """A unique identifier for the new assembly."""
    def __init__(
        self,
        *,
        assembly_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["assembly_id", b"assembly_id"]) -> None: ...

global___AssemblyCreateResponse = AssemblyCreateResponse

@typing_extensions.final
class AssemblyReadRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSEMBLY_ID_FIELD_NUMBER: builtins.int
    assembly_id: builtins.str
    def __init__(
        self,
        *,
        assembly_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["assembly_id", b"assembly_id"]) -> None: ...

global___AssemblyReadRequest = AssemblyReadRequest

@typing_extensions.final
class AssemblyReadResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSEMBLY_FIELD_NUMBER: builtins.int
    @property
    def assembly(self) -> global___AssemblyDocument: ...
    def __init__(
        self,
        *,
        assembly: global___AssemblyDocument | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["assembly", b"assembly"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assembly", b"assembly"]) -> None: ...

global___AssemblyReadResponse = AssemblyReadResponse

@typing_extensions.final
class AssemblyListRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CURSOR_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    cursor: builtins.str
    limit: builtins.int
    def __init__(
        self,
        *,
        cursor: builtins.str = ...,
        limit: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cursor", b"cursor", "limit", b"limit"]) -> None: ...

global___AssemblyListRequest = AssemblyListRequest

@typing_extensions.final
class AssemblyListResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ITEMS_FIELD_NUMBER: builtins.int
    NEXT_CURSOR_FIELD_NUMBER: builtins.int
    PREV_CURSOR_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AssemblyDocument]: ...
    next_cursor: builtins.str
    prev_cursor: builtins.str
    def __init__(
        self,
        *,
        items: collections.abc.Iterable[global___AssemblyDocument] | None = ...,
        next_cursor: builtins.str = ...,
        prev_cursor: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items", b"items", "next_cursor", b"next_cursor", "prev_cursor", b"prev_cursor"]) -> None: ...

global___AssemblyListResponse = AssemblyListResponse
