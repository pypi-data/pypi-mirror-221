updateQgraphPreCmdOpts: "{defaultPreCmdOpts}"
createQuantumGraph: >-
  ${CTRL_MPEXEC_DIR}/bin/pipetask {qgraphPreCmdOpts} qgraph
  --butler-config {butlerConfig}
  {pipetaskInput}
  {pipetaskOutput}
  --output-run {outputRun}
  --pipeline {pipelineYaml}
  --save-qgraph {qgraphFile}
  --qgraph-datastore-records
  {pipetaskDataQuery}
  {extraQgraphOptions}
updateQuantumGraph: >-
  ${CTRL_MPEXEC_DIR}/bin/pipetask {updateQgraphPreCmdOpts} update-graph-run
  {inputQgraphFile}
  {outputRun}
  {qgraphFile}
  {extraUpdateQgraphOptions}
runQuantumCommand: >-
  ${CTRL_MPEXEC_DIR}/bin/pipetask {runPreCmdOpts} run-qbb
  {butlerConfig}
  {fileDistributionEndPoint}{qgraphFile}
  --qgraph-node-id {qgraphNodeId}
  {extraRunQuantumOptions}
pipetask:
  pipetaskInit:
    runQuantumCommand: >-
      ${CTRL_MPEXEC_DIR}/bin/pipetask {initPreCmdOpts} pre-exec-init-qbb
      {butlerConfig}
      {fileDistributionEndPoint}{qgraphFile}
      {extraInitOptions}
# Disable creation of the execution Butler (EB). May be removed once EB
# is retired.
executionButler:
  whenCreate: "NEVER"
finalJob:
  whenSetup: "NEVER"
  whenRun: "ALWAYS"
  # Added for future flexibility, e.g., if prefer workflow instead of shell
  # script.
  implementation: JOB
  concurrencyLimit: db_limit
  finalPreCmdOpts: "{defaultPreCmdOpts}"
  command1: >-
    ${DAF_BUTLER_DIR}/bin/butler {finalPreCmdOpts} transfer-from-graph
    {fileDistributionEndPoint}{qgraphFile}
    {butlerConfig}
    --register-dataset-types
    --update-output-chain
    --transfer-dimensions
