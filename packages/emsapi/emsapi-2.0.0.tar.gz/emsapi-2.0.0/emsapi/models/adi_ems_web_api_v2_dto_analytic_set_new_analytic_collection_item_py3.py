# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AdiEmsWebApiV2DtoAnalyticSetNewAnalyticCollectionItem(Model):
    """A model that encapsulates the data for a single analytic in an analytic
    collection.

    :param analytic_id: The analytic identifier that is represented by this
     analytic collection item
    :type analytic_id: str
    :param custom_name: The custom name the user specified for the item, or
     null if not-specified
    :type custom_name: str
    :param color: The color to use for the line in hexadecimal color
     specification "#RRGGBB", or null if no color specified
    :type color: str
    :param custom_range: Optional override for the vertical scale for an
     analytic
    :type custom_range: ~emsapi.models.AdiEmsWebApiCoreDtoDataRange
    :param custom_digits_after_decimal: Optional override for the number of
     digits to display
    :type custom_digits_after_decimal: int
    :param line_width: Optional value from 1 to 5 for the width of the line
    :type line_width: int
    :param display_sample_marker: Optional value specifying whether the
     parameter should display shapes to indicate the sampled values
    :type display_sample_marker: bool
    :param sample_marker_shape: If set, describes the shape to use for the
     sampled values.
     Possible values: [Square, Circle, Triangle, InvertedTriangle, Cross, Star]
    :type sample_marker_shape: str
    :param line_style: If set, describes the line style to use when drawing.
     Possible values: [Dash, Dot, DashDot, DashDotDot, Solid]
    :type line_style: str
    :param parameter_filtering_mode: Whether parameter filtering mode should
     be enabled for this item or not.
     possible values: [Default, Enabled, Disabled]
    :type parameter_filtering_mode: str
    :param interpolation_mode: The way in which the data should be
     interpolated.
     Possible values: [Default, StairStep, Continuous].
    :type interpolation_mode: str
    """

    _attribute_map = {
        'analytic_id': {'key': 'analyticId', 'type': 'str'},
        'custom_name': {'key': 'customName', 'type': 'str'},
        'color': {'key': 'color', 'type': 'str'},
        'custom_range': {'key': 'customRange', 'type': 'AdiEmsWebApiCoreDtoDataRange'},
        'custom_digits_after_decimal': {'key': 'customDigitsAfterDecimal', 'type': 'int'},
        'line_width': {'key': 'lineWidth', 'type': 'int'},
        'display_sample_marker': {'key': 'displaySampleMarker', 'type': 'bool'},
        'sample_marker_shape': {'key': 'sampleMarkerShape', 'type': 'str'},
        'line_style': {'key': 'lineStyle', 'type': 'str'},
        'parameter_filtering_mode': {'key': 'parameterFilteringMode', 'type': 'str'},
        'interpolation_mode': {'key': 'interpolationMode', 'type': 'str'},
    }

    def __init__(self, *, analytic_id: str=None, custom_name: str=None, color: str=None, custom_range=None, custom_digits_after_decimal: int=None, line_width: int=None, display_sample_marker: bool=None, sample_marker_shape: str=None, line_style: str=None, parameter_filtering_mode: str=None, interpolation_mode: str=None, **kwargs) -> None:
        super(AdiEmsWebApiV2DtoAnalyticSetNewAnalyticCollectionItem, self).__init__(**kwargs)
        self.analytic_id = analytic_id
        self.custom_name = custom_name
        self.color = color
        self.custom_range = custom_range
        self.custom_digits_after_decimal = custom_digits_after_decimal
        self.line_width = line_width
        self.display_sample_marker = display_sample_marker
        self.sample_marker_shape = sample_marker_shape
        self.line_style = line_style
        self.parameter_filtering_mode = parameter_filtering_mode
        self.interpolation_mode = interpolation_mode
