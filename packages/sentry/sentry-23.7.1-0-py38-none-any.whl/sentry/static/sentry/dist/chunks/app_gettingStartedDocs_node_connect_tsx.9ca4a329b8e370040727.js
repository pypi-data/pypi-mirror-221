"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_gettingStartedDocs_node_connect_tsx"],{"./app/components/onboarding/gettingStartedDoc/utils.tsx":(n,e,t)=>{t.d(e,{a:()=>i});var r=t("./app/components/links/externalLink.tsx"),o=t("./app/locale.tsx"),a=t("./app/utils/analytics.tsx"),s=t("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");function i(n){let{guideLink:e,organization:t,platformKey:i,projectId:c,newOrg:d}=n;return{title:(0,o.t)("Upload Source Maps"),description:(0,s.tZ)("p",{children:(0,o._N)("Automatically upload your source maps to enable readable stack traces for Errors. If you prefer to manually set up source maps, please follow [guideLink:this guide].",{guideLink:(0,s.tZ)(r.Z,{href:e})})}),configurations:[{language:"bash",code:"npx @sentry/wizard@latest -i sourcemaps",onCopy:()=>{t&&c&&i&&(0,a.Gi)(d?"onboarding.source_maps_wizard_button_copy_clicked":"project_creation.source_maps_wizard_button_copy_clicked",{project_id:c,platform:i,organization:t})},onSelectAndCopy:()=>{t&&c&&i&&(0,a.Gi)(d?"onboarding.source_maps_wizard_selected_and_copied":"project_creation.source_maps_wizard_selected_and_copied",{project_id:c,platform:i,organization:t})}}]}}},"./app/gettingStartedDocs/node/connect.tsx":(n,e,t)=>{t.r(e),t.d(e,{GettingStartedWithConnect:()=>d,default:()=>p,steps:()=>c});var r=t("./app/components/onboarding/gettingStartedDoc/layout.tsx"),o=t("./app/components/onboarding/gettingStartedDoc/step.tsx"),a=t("./app/components/onboarding/gettingStartedDoc/utils.tsx"),s=t("./app/locale.tsx"),i=t("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");const c=function(){let{sentryInitContent:n,...e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{type:o.WU.INSTALL,description:(0,i.tZ)("p",{children:(0,s._N)("Add [code:@sentry/node] as a dependency:",{code:(0,i.tZ)("code",{})})}),configurations:[{language:"bash",code:"\n# Using yarn\nyarn add @sentry/node\n\n# Using npm\nnpm install --save @sentry/node\n        "}]},{type:o.WU.CONFIGURE,description:(0,s.t)("Configure Sentry as a middleware:"),configurations:[{language:"javascript",code:`\n        import * as Sentry from "@sentry/node";\n        import connect from "connect";\n\n        // or using CommonJS\n        // const connect = require('connect');\n        // const Sentry = require('@sentry/node');\n\n        // Configure Sentry before doing anything else\n        Sentry.init({\n          ${n},\n        });\n\n        function mainHandler(req, res) {\n          throw new Error("My first Sentry error!");\n        }\n\n        function onError(err, req, res, next) {\n          // The error id is attached to \`res.sentry\` to be returned\n          // and optionally displayed to the user for support.\n          res.statusCode = 500;\n          res.end(res.sentry + "\\n");\n        }\n\n        connect(\n          // The request handler be the first item\n          Sentry.Handlers.requestHandler(),\n\n          connect.bodyParser(),\n          connect.cookieParser(),\n          mainHandler,\n\n          // The error handler must be before any other error middleware\n          Sentry.Handlers.errorHandler(),\n\n          // Optional fallthrough error handler\n          onError\n        ).listen(3000);\n        `}]},(0,a.a)({guideLink:"https://docs.sentry.io/platforms/node/guides/connect/sourcemaps/",...e})]};function d(n){let{dsn:e,organization:t,newOrg:o,platformKey:a,projectId:s}=n;const d=[`dsn: "${e}"`];return(0,i.tZ)(r.A,{steps:c({sentryInitContent:d.join("\n"),organization:t,newOrg:o,platformKey:a,projectId:s}),newOrg:o,platformKey:a})}d.displayName="GettingStartedWithConnect";const p=d}}]);
//# sourceMappingURL=../sourcemaps/app_gettingStartedDocs_node_connect_tsx.fc78253dffc6bf95b1de79ee1b2fd855.js.map