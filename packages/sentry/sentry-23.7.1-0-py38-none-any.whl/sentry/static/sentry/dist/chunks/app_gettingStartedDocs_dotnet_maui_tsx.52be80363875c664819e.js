"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_gettingStartedDocs_dotnet_maui_tsx"],{"./app/gettingStartedDocs/dotnet/maui.tsx":(t,e,n)=>{n.r(e),n.d(e,{GettingStartedWithMaui:()=>c,default:()=>d,steps:()=>p});var a=n("../node_modules/react/index.js"),o=n("./app/components/links/externalLink.tsx"),i=n("./app/components/onboarding/gettingStartedDoc/layout.tsx"),r=n("./app/components/onboarding/gettingStartedDoc/step.tsx"),s=n("./app/locale.tsx"),u=n("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");const p=function(){let{dsn:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{type:r.WU.INSTALL,description:(0,u.tZ)("p",{children:(0,s._N)("Install the [strong:NuGet] package:",{strong:(0,u.tZ)("strong",{})})}),configurations:[{language:"shell",code:"dotnet add package Sentry.Maui -v 3.34.0"},{language:"powershell",code:"Install-Package Sentry.Maui -Version 3.34.0"}]},{type:r.WU.CONFIGURE,description:(0,u.tZ)("p",{children:(0,s._N)("Then add Sentry to [mauiProgram:MauiProgram.cs] through the [mauiAppBuilderCode:MauiAppBuilder]:",{mauiAppBuilderCode:(0,u.tZ)("code",{}),mauiProgram:(0,u.tZ)("code",{})})}),configurations:[{language:"csharp",code:`\npublic static MauiApp CreateMauiApp()\n{\n  var builder = MauiApp.CreateBuilder();\n  builder\n    .UseMauiApp<App>()\n\n    // Add this section anywhere on the builder:\n    .UseSentry(options => {\n      // The DSN is the only required setting.\n      options.Dsn = "${t}";\n\n      // Use debug mode if you want to see what the SDK is doing.\n      // Debug messages are written to stdout with Console.Writeline,\n      // and are viewable in your IDE's debug console or with 'adb logcat', etc.\n      // This option is not recommended when deploying your application.\n      options.Debug = true;\n\n      // Set TracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n      // We recommend adjusting this value in production.\n      options.TracesSampleRate = 1.0;\n\n      // Other Sentry options can be set here.\n  })\n\n  // ... the remainder of your MAUI app setup\n\n  return builder.Build();\n}\n        `}]},{type:r.WU.VERIFY,description:(0,s.t)("To verify your set up, you can capture a message with the SDK, anywhere in your code after the application is built, such as in a page constructor or button click event handler:"),configurations:[{language:"csharp",code:'SentrySdk.CaptureMessage("Hello Sentry");'}]},{title:(0,s.t)("Performance Monitoring"),description:(0,u.BX)(a.Fragment,{children:[(0,s.t)("We do not yet have automatic performance instrumentation for .NET MAUI. We will be adding that in a future release. However, if desired you can still manually instrument parts of your application."),(0,u.tZ)("p",{children:(0,s._N)("For some parts of your code, [automaticInstrumentationLink:automatic instrumentation] is available across all of our .NET SDKs, and can be used with MAUI as well:",{automaticInstrumentationLink:(0,u.tZ)(o.Z,{href:"https://docs.sentry.io/platforms/dotnet/guides/maui/performance/instrumentation/automatic-instrumentation/"})})})]}),configurations:[{description:(0,u.tZ)("p",{children:(0,s._N)("If your app uses [code:HttpClient], you can instrument your HTTP calls by passing our HTTP message handler:",{code:(0,u.tZ)("code",{})})}),language:"csharp",code:"\nvar httpHandler = new SentryHttpMessageHandler();\nvar httpClient = new HttpClient(httpHandler);\n        "},{description:(0,u.BX)(a.Fragment,{children:[(0,s.t)("If your app uses Entity Framework Core or SQL Client, we will automatically instrument that for you without any additional code."),(0,u.tZ)("p",{children:(0,s._N)("For other parts of your code, you can use [customInstrumentationLink:custom instrumentation], such as in the following example:",{customInstrumentationLink:(0,u.tZ)(o.Z,{href:"https://docs.sentry.io/platforms/dotnet/guides/maui/performance/instrumentation/custom-instrumentation/"})})})]}),language:"csharp",code:'\n// Transaction can be started by providing, at minimum, the name and the operation\nvar transaction = SentrySdk.StartTransaction(\n  "test-transaction-name",\n  "test-transaction-operation"\n);\n\n// Transactions can have child spans (and those spans can have child spans as well)\nvar span = transaction.StartChild("test-child-operation");\n\n// ...\n// (Perform the operation represented by the span/transaction)\n// ...\n\nspan.Finish(); // Mark the span as finished\ntransaction.Finish(); // Mark the transaction as finished and send it to Sentry\n        '}]},{title:(0,s.t)("Sample Application"),description:(0,u.tZ)("p",{children:(0,s._N)("See the [mauiSampleLink:MAUI Sample in the [code:sentry-dotnet] repository].",{mauiSampleLink:(0,u.tZ)(o.Z,{href:"https://github.com/getsentry/sentry-dotnet/tree/main/samples/Sentry.Samples.Maui"}),code:(0,u.tZ)("code",{})})})}]};function c(t){let{dsn:e,...n}=t;return(0,u.tZ)(i.A,{steps:p({dsn:e}),...n})}c.displayName="GettingStartedWithMaui";const d=c}}]);
//# sourceMappingURL=../sourcemaps/app_gettingStartedDocs_dotnet_maui_tsx.ec55c045d7957ae88f321d447c9cd3f9.js.map