"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_views_settings_organizationSecurityAndPrivacy_index_tsx"],{"./app/data/forms/organizationSecurityAndPrivacyGroups.tsx":(e,t,a)=>{a.r(t),a.d(t,{default:()=>n,route:()=>r});var i=a("./app/locale.tsx"),s=a("./app/utils.tsx"),o=a("./app/utils/crashReports.tsx");const r="/settings/:orgId/security-and-privacy/",n=[{title:(0,i.t)("Security & Privacy"),fields:[{name:"require2FA",type:"boolean",label:(0,i.t)("Require Two-Factor Authentication"),help:(0,i.t)("Require and enforce two-factor authentication for all members"),"aria-label":(0,i.t)("Enable to require and enforce two-factor authentication for all members"),confirm:{true:(0,i.t)("This will remove all members without two-factor authentication from your organization. It will also send them an email to setup 2FA and reinstate their access and settings. Do you want to continue?"),false:(0,i.t)("Are you sure you want to allow users to access your organization without having two-factor authentication enabled?")}},{name:"requireEmailVerification",type:"boolean",label:(0,i.t)("Require Email Verification"),help:(0,i.t)("Require and enforce email address verification for all members"),visible:e=>{let{features:t}=e;return t.has("required-email-verification")},confirm:{true:(0,i.t)("This will remove all members whose email addresses are not verified from your organization. It will also send them an email to verify their address and reinstate their access and settings. Do you want to continue?"),false:(0,i.t)("Are you sure you want to allow users to access your organization without verifying their email address?")}},{name:"allowSharedIssues",type:"boolean",label:(0,i.t)("Allow Shared Issues"),help:(0,i.t)("Enable sharing of limited details on issues to anonymous users"),confirm:{true:(0,i.t)("Are you sure you want to allow sharing issues to anonymous users?")}},{name:"enhancedPrivacy",type:"boolean",label:(0,i.t)("Enhanced Privacy"),help:(0,i.t)("Enable enhanced privacy controls to limit personally identifiable information (PII) as well as source code in things like notifications"),confirm:{false:(0,i.t)("Disabling this can have privacy implications for ALL projects, are you sure you want to continue?")}},{name:"scrapeJavaScript",type:"boolean",confirm:{false:(0,i.t)("Are you sure you want to disable sourcecode fetching for JavaScript events? This will affect Sentry's ability to aggregate issues if you're not already uploading sourcemaps as artifacts.")},label:(0,i.t)("Allow JavaScript Source Fetching"),help:(0,i.t)("Allow Sentry to scrape missing JavaScript source context when possible")},{name:"storeCrashReports",type:"select",label:(0,i.t)("Store Native Crash Reports"),help:(0,i.t)("Store native crash reports such as Minidumps for improved processing and download in issue details"),visible:e=>{let{features:t}=e;return t.has("event-attachments")},placeholder:e=>{let{value:t}=e;return(0,o.IS)(t)},choices:()=>(0,o.uk)(o.RF.ORGANIZATION).map((e=>[e,(0,o.IS)(e)]))},{name:"allowJoinRequests",type:"boolean",label:(0,i.t)("Allow Join Requests"),help:(0,i.t)("Allow users to request to join your organization"),"aria-label":(0,i.t)("Enable to allow users to request to join your organization"),confirm:{true:(0,i.t)("Are you sure you want to allow users to request to join your organization?")},visible:e=>{let{hasSsoEnabled:t}=e;return!t}}]},{title:(0,i.t)("Data Scrubbing"),fields:[{name:"dataScrubber",type:"boolean",label:(0,i.t)("Require Data Scrubber"),help:(0,i.t)("Require server-side data scrubbing be enabled for all projects"),"aria-label":(0,i.t)("Enable server-side data scrubbing"),confirm:{false:(0,i.t)("Disabling this can have privacy implications for ALL projects, are you sure you want to continue?")}},{name:"dataScrubberDefaults",type:"boolean",label:(0,i.t)("Require Using Default Scrubbers"),help:(0,i.t)("Require the default scrubbers be applied to prevent things like passwords and credit cards from being stored for all projects"),"aria-label":(0,i.t)("Enable to apply default scrubbers to prevent things like passwords and credit cards from being stored"),confirm:{false:(0,i.t)("Disabling this can have privacy implications for ALL projects, are you sure you want to continue?")}},{name:"sensitiveFields",type:"string",multiline:!0,autosize:!0,maxRows:10,rows:1,placeholder:"e.g. email",label:(0,i.t)("Global Sensitive Fields"),help:(0,i.t)("Additional field names to match against when scrubbing data for all projects. Separate multiple entries with a newline."),"aria-label":(0,i.t)("Enter additional field names to match against when scrubbing data for all projects. Separate multiple entries with a newline."),extraHelp:(0,i.t)("Note: These fields will be used in addition to project specific fields."),getValue:e=>(0,s.Fl)(e),setValue:e=>(0,s.PU)(e)},{name:"safeFields",type:"string",multiline:!0,autosize:!0,maxRows:10,rows:1,placeholder:(0,i.t)("e.g. business-email"),label:(0,i.t)("Global Safe Fields"),help:(0,i.t)("Field names which data scrubbers should ignore. Separate multiple entries with a newline."),"aria-label":(0,i.t)("Enter field names which data scrubbers should ignore. Separate multiple entries with a newline."),extraHelp:(0,i.t)("Note: These fields will be used in addition to project specific fields"),getValue:e=>(0,s.Fl)(e),setValue:e=>(0,s.PU)(e)},{name:"scrubIPAddresses",type:"boolean",label:(0,i.t)("Prevent Storing of IP Addresses"),help:(0,i.t)("Preventing IP addresses from being stored for new events on all projects"),"aria-label":(0,i.t)("Enable to prevent IP addresses from being stored for new events"),confirm:{false:(0,i.t)("Disabling this can have privacy implications for ALL projects, are you sure you want to continue?")}}]}]},"./app/views/settings/organizationSecurityAndPrivacy/index.tsx":(e,t,a)=>{a.r(t),a.d(t,{default:()=>h});var i=a("../node_modules/react/index.js"),s=a("./app/actionCreators/indicator.tsx"),o=a("./app/actionCreators/organizations.tsx"),r=a("./app/components/forms/form.tsx"),n=a("./app/components/forms/jsonForm.tsx"),l=a("./app/components/sentryDocumentTitle.tsx"),u=a("./app/data/forms/organizationSecurityAndPrivacyGroups.tsx"),c=a("./app/locale.tsx"),d=a("./app/utils/useApi.tsx"),p=a("./app/utils/useOrganization.tsx"),b=a("./app/views/settings/components/settingsPageHeader.tsx"),m=a("./app/views/settings/components/dataScrubbing/index.tsx"),f=a("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");function h(){const e=(0,d.Z)(),t=(0,p.Z)(),[a,h]=(0,i.useState)(null);(0,i.useEffect)((()=>{!async function(){try{const a=await e.requestPromise(`/organizations/${t.slug}/auth-provider/`);h(a)}catch{(0,s.Iw)((0,c.t)("Unable to fetch authentication provider"))}}()}),[t.slug,e]);const g=t,y=`/organizations/${t.slug}/`,w=new Set(t.features),v=t.relayPiiConfig,S=(0,c.t)("Security & Privacy");function x(e){(0,o.FV)(e)}return(0,f.BX)(i.Fragment,{children:[(0,f.tZ)(l.Z,{title:S,orgSlug:t.slug}),(0,f.tZ)(b.Z,{title:S}),(0,f.tZ)(r.Z,{"data-test-id":"organization-settings-security-and-privacy",apiMethod:"PUT",apiEndpoint:y,initialData:g,additionalFieldProps:{hasSsoEnabled:!!a},onSubmitSuccess:x,onSubmitError:()=>(0,s.Iw)((0,c.t)("Unable to save change")),saveOnBlur:!0,allowUndo:!0,children:(0,f.tZ)(n.Z,{features:w,forms:u.default,disabled:!t.access.includes("org:write")})}),(0,f.tZ)(m.y,{additionalContext:(0,c.t)("These rules can be configured for each project."),endpoint:y,relayPiiConfig:v,organization:t,disabled:!t.access.includes("org:write"),onSubmitSuccess:e=>x({...t,...e})})]})}h.displayName="OrganizationSecurityAndPrivacyContent"}}]);
//# sourceMappingURL=../sourcemaps/app_views_settings_organizationSecurityAndPrivacy_index_tsx.0745d8f50c97c2a94c743372e864e9cc.js.map