"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_gettingStartedDocs_react-native_react-native_tsx"],{"./app/gettingStartedDocs/react-native/react-native.tsx":(t,e,n)=>{n.r(e),n.d(e,{GettingStartedWithReactNative:()=>u,default:()=>h,steps:()=>p});var o=n("../node_modules/react/index.js"),a=n("./app/components/links/externalLink.tsx"),r=n("./app/components/list/index.tsx"),i=n("./app/components/list/listItem.tsx"),s=n("./app/components/onboarding/gettingStartedDoc/layout.tsx"),c=n("./app/components/onboarding/gettingStartedDoc/step.tsx"),d=n("./app/locale.tsx"),l=n("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");const p=function(){let{dsn:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{type:c.WU.INSTALL,description:(0,l.tZ)("p",{children:(0,d._N)("Sentry captures data by using an SDK within your applicationâ€™s runtime. If you are using Expo, see [expoLink:How to Add Sentry to Your Expo Project]. This SDK works for both managed and bare projects.",{expoLink:(0,l.tZ)(a.Z,{href:"https://docs.expo.dev/guides/using-sentry/"})})}),configurations:[{language:"bash",description:(0,l.tZ)("div",{children:(0,d._N)("Run [code:@sentry/wizard]:",{code:(0,l.tZ)("code",{})})}),code:"npx @sentry/wizard -s -i reactNative",additionalInfo:(0,l.BX)(o.Fragment,{children:[(0,l.tZ)("p",{children:(0,d._N)("[wizardLink:Sentry Wizard] will patch your project accordingly, though you can [setupManuallyLink:setup manually] if you prefer.",{wizardLink:(0,l.tZ)(a.Z,{href:"https://github.com/getsentry/sentry-wizard"}),setupManuallyLink:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/manual-setup/manual-setup/"})})}),(0,l.BX)(r.Z,{symbol:"bullet",children:[(0,l.tZ)(i.Z,{children:(0,d.t)("iOS Specifics: When you use Xcode, you can hook directly into the build process to upload debug symbols and source maps.")}),(0,l.tZ)(i.Z,{children:(0,d._N)("Android Specifics: We hook into Gradle for the source map build process. When you run [gradLewCode:./gradlew] assembleRelease, source maps are automatically built and uploaded to Sentry. If you have enabled Gradle's [orgGradleCode:org.gradle.configureondemand] feature, you'll need a clean build, or you'll need to disable this feature to upload the source map on every build by setting [orgGradleCodeConfigureCode:org.gradle.configureondemand=false] or remove it.",{gradLewCode:(0,l.tZ)("code",{}),orgGradleCode:(0,l.tZ)("code",{}),orgGradleCodeConfigureCode:(0,l.tZ)("code",{})})})]})]})}]},{type:c.WU.CONFIGURE,configurations:[{language:"javascript",code:`\n        import * as Sentry from "@sentry/react-native";\n\n        Sentry.init({\n          dsn: "${t}",\n          // Set tracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n          // We recommend adjusting this value in production.\n          tracesSampleRate: 1.0,\n        });\n        `,additionalInfo:(0,l.tZ)("p",{children:(0,d._N)('The "sentry-wizard" will try to add it to your [code:App.tsx]',{code:(0,l.tZ)("code",{})})})},{language:"javascript",description:(0,l.tZ)("p",{children:(0,d._N)("Wrap your app with Sentry to automatically instrument it with [touchEventTrakingLink:touch event tracking] and [automaticPerformanceMonitoringLink:automatic performance monitoring]:",{touchEventTrakingLink:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/touchevents/"}),automaticPerformanceMonitoringLink:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/performance/instrumentation/automatic-instrumentation/"})})}),code:"export default Sentry.wrap(App);",additionalInfo:(0,d.t)('You do not need to do this for Sentry to work or if your app does not have a single parent "App" component.')}]},{type:c.WU.VERIFY,description:(0,d.t)("Then create an intentional error, so you can test that everything is working:"),configurations:[{language:"javascript",code:"throw new Error('My first Sentry error!');"},{language:"javascript",description:(0,d.t)("Or, try a native crash with:"),code:"Sentry.nativeCrash();",additionalInfo:(0,l.BX)(o.Fragment,{children:[(0,d.t)("If you're new to Sentry, use the email alert to access your account and complete a product tour."),(0,d.t)("If you're an existing user and have disabled alerts, you won't receive this email.")]})}]},{title:(0,d.t)("Performance"),description:(0,l.BX)(o.Fragment,{children:[(0,d.t)("Sentry can measure the performance of your app automatically when instrumented with the following routers:"),(0,l.BX)(r.Z,{symbol:"bullet",children:[(0,l.tZ)(i.Z,{children:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/performance/instrumentation/automatic-instrumentation/#react-navigation",children:(0,d.t)("React Navigation")})}),(0,l.tZ)(i.Z,{children:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/performance/instrumentation/automatic-instrumentation/#react-navigation-v4",children:(0,d.t)("React Navigation V4 and prior")})}),(0,l.tZ)(i.Z,{children:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/performance/instrumentation/automatic-instrumentation/#react-native-navigation",children:(0,d.t)("React Native Navigation")})})]}),(0,d.t)("Additionally, you can create transactions and spans programatically:")]}),configurations:[{description:(0,d.t)("For example:"),language:"javascript",code:"\n        // Let's say this function is invoked when a user clicks on the checkout button of your shop\n        shopCheckout() {\n          // This will create a new Transaction for you\n          const transaction = Sentry.startTransaction({ name: \"shopCheckout\" });\n          // Set transaction on scope to associate with errors and get included span instrumentation\n          // If there's currently an unfinished transaction, it may be dropped\n          Sentry.getCurrentHub().configureScope(scope => scope.setSpan(transaction));\n\n          // Assume this function makes an xhr/fetch call\n          const result = validateShoppingCartOnServer();\n\n          const span = transaction.startChild({\n            data: {\n              result\n            },\n            op: 'task',\n            description: \"processing shopping cart result\",\n          });\n          try {\n            processAndValidateShoppingCart(result);\n            span.setStatus(SpanStatus.Ok);\n          } catch (err) {\n            span.setStatus(SpanStatus.UnknownError);\n            throw err;\n          } finally {\n            span.finish();\n            transaction.finish();\n          }\n        }\n        ",additionalInfo:(0,l.tZ)("p",{children:(0,d._N)("For more information, please refer to the [docLink: Sentry React Native documentation].",{docLink:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/performance/instrumentation/"})})})}]},{title:(0,d.t)("Debug Symbols"),description:(0,l.BX)(o.Fragment,{children:[(0,d.t)("We offer a range of methods to provide Sentry with debug symbols so that you can see symbolicated stack traces and triage issues faster."),(0,l.tZ)("p",{children:(0,d._N)("Complete stack traces will be shown for React Native Javascript errors by default using Sentry's [automaticSourceMapsUploadLink:automatic source maps upload]. To set up manual source maps upload follow [guideLink:this guide].",{automaticSourceMapsUploadLink:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/sourcemaps/"}),guideLink:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/sourcemaps/"})})}),(0,l.tZ)("p",{children:(0,d._N)("You'll also need to upload [debugSymbolsLink:Debug Symbols] generated by the native iOS and Android tooling for native crashes.",{debugSymbolsLink:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/upload-debug/"})})})]})},{title:(0,d.t)("Source Context"),description:(0,l.BX)(o.Fragment,{children:[(0,l.tZ)("p",{children:(0,d._N)("If Sentry has access to your application's source code, it can show snippets of code [italic:(source context)] around the location of stack frames, which helps to quickly pinpoint problematic code.",{italic:(0,l.tZ)("i",{})})}),(0,l.tZ)("p",{children:(0,d._N)("Source Context will be shown for React Native Javascript error by default if source maps are uploaded. To set up source maps upload, follow the [sourceMapsGuideLink:Source Maps guide].",{sourceMapsGuideLink:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/sourcemaps/"})})}),(0,l.tZ)("p",{children:(0,d._N)("To enable source context for native errors, you'll need to upload native debug symbols to Sentry by following the instructions at [uploadWithGradleLink:Uploading Source Code Context With Sentry Gradle Plugin] and Uploading Source Context With Xcode.",{uploadWithGradleLink:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/upload-debug/#uploading-source-context-with-sentry-gradle-plugin"}),uploadWithXCodeLink:(0,l.tZ)(a.Z,{href:"https://docs.sentry.io/platforms/react-native/upload-debug/#uploading-source-context-with-xcode"})})})]})}]};function u(t){let{dsn:e,...n}=t;return(0,l.tZ)(s.A,{steps:p({dsn:e}),...n})}u.displayName="GettingStartedWithReactNative";const h=u}}]);
//# sourceMappingURL=../sourcemaps/app_gettingStartedDocs_react-native_react-native_tsx.3a91b9bc0fa27b1b905ca8e0cce78d8e.js.map