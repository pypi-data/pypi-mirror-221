"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["U2fSign"],{"./app/components/u2f/u2fsign.tsx":(e,t,s)=>{s.r(t),s.d(t,{default:()=>y});var n=s("./app/locale.tsx"),r=s("../node_modules/@babel/runtime/helpers/esm/defineProperty.js"),i=(s("../node_modules/core-js/modules/es.error.cause.js"),s("../node_modules/react/index.js")),o=s("../node_modules/@sentry/browser/node_modules/@sentry/core/esm/exports.js"),a=s("../node_modules/cbor-web/dist/cbor.js");function l(e){const t="==".slice(0,(4-e.length%4)%4),s=e.replace(/-/g,"+").replace(/_/g,"/")+t,n=atob(s),r=new ArrayBuffer(n.length),i=new Uint8Array(r);for(let e=0;e<n.length;e++)i[e]=n.charCodeAt(e);return r}function d(e){const t=new Uint8Array(e);let s="";for(const e of t)s+=String.fromCharCode(e);return btoa(s).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}s("../node_modules/core-js/modules/web.dom-exception.stack.js"),s("../node_modules/core-js/modules/es.typed-array.at.js"),s("../node_modules/core-js/modules/es.typed-array.fill.js"),s("../node_modules/core-js/modules/es.typed-array.find-last.js"),s("../node_modules/core-js/modules/es.typed-array.find-last-index.js"),s("../node_modules/core-js/modules/es.typed-array.set.js"),s("../node_modules/core-js/modules/es.typed-array.sort.js");var p=s("./app/stores/configStore.tsx"),c=s("./app/utils/withOrganization.tsx"),h=s("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");class u extends i.Component{constructor(){super(...arguments),(0,r.Z)(this,"state",{isSupported:null,formElement:null,challengeElement:null,hasBeenTapped:!1,deviceFailure:null,responseElement:null,isSafari:!1,failCount:0}),(0,r.Z)(this,"onTryAgain",(()=>{this.setState({hasBeenTapped:!1,deviceFailure:null},(()=>{this.invokeU2fFlow()}))})),(0,r.Z)(this,"bindChallengeElement",(e=>{this.setState({challengeElement:e,formElement:e&&e.form}),e&&(e.value=JSON.stringify(this.props.challengeData))})),(0,r.Z)(this,"bindResponseElement",(e=>this.setState({responseElement:e}))),(0,r.Z)(this,"renderSafariWebAuthn",(()=>(0,h.tZ)("a",{onClick:this.onTryAgain,className:"btn btn-primary",children:"enroll"===this.props.flowMode?(0,n.t)("Enroll with WebAuthn"):(0,n.t)("Sign in with WebAuthn")}))),(0,r.Z)(this,"renderFailure",(()=>{const{deviceFailure:e}=this.state,t=p.Z.get("supportEmail"),s=t?(0,h.tZ)("a",{href:"mailto:"+t,children:t}):(0,h.tZ)("span",{children:(0,n.t)("Support")});return this.state.isSafari&&0===this.state.failCount?this.renderSafariWebAuthn():(0,h.BX)("div",{className:"failure-message",children:[(0,h.BX)("div",{children:[(0,h.tZ)("strong",{children:(0,n.t)("Error: ")})," ",{UNKNOWN_ERROR:(0,n.t)("There was an unknown problem, please try again"),DEVICE_ERROR:(0,n.t)("Your U2F device reported an error."),DUPLICATE_DEVICE:(0,n.t)("This device is already registered with Sentry."),UNKNOWN_DEVICE:(0,n.t)("The device you used for sign-in is unknown."),BAD_APPID:(0,n._N)("[p1:The Sentry server administrator modified the device\n                 registrations.] [p2:You need to remove and re-add the device to continue using\n                 your U2F device. Use a different sign-in method or contact [support] for\n                 assistance.]",{p1:(0,h.tZ)("p",{}),p2:(0,h.tZ)("p",{}),support:s})}[e||""]]}),this.canTryAgain&&(0,h.tZ)("div",{style:{marginTop:18},children:(0,h.tZ)("a",{onClick:this.onTryAgain,className:"btn btn-primary",children:(0,n.t)("Try Again")})})]})}))}componentDidMount(){const e=!!window.PublicKeyCredential;this.setState({isSupported:e});const t=navigator.userAgent.includes("Safari")&&!navigator.userAgent.includes("Chrome");t&&this.setState({deviceFailure:"safari: requires interaction",isSafari:t,hasBeenTapped:!1}),e&&!t&&this.invokeU2fFlow()}getU2FResponse(e){if(!e.response)return JSON.stringify(e);if("sign"===this.props.flowMode){const t={keyHandle:e.id,clientData:d(e.response.clientDataJSON),signatureData:d(e.response.signature),authenticatorData:d(e.response.authenticatorData)};return JSON.stringify(t)}if("enroll"===this.props.flowMode){const t={id:e.id,rawId:d(e.rawId),response:{attestationObject:d(e.response.attestationObject),clientDataJSON:d(e.response.clientDataJSON)},type:d(e.type)};return JSON.stringify(t)}throw new Error(`Unsupported flow mode '${this.props.flowMode}'`)}submitU2fResponse(e){e.then((e=>{this.setState({hasBeenTapped:!0},(()=>{const t=this.getU2FResponse(e),s=JSON.stringify(this.props.challengeData);this.state.responseElement&&(this.state.responseElement.value=t),this.props.onTap?this.props.onTap({response:t,challenge:s}).catch((()=>{this.setState({deviceFailure:"UNKNOWN_ERROR",hasBeenTapped:!1})})):this.state.formElement?.submit()}))})).catch((e=>{let t="DEVICE_ERROR";e.metaData&&("DEVICE_INELIGIBLE"===e.metaData.type?t="enroll"===this.props.flowMode?"DUPLICATE_DEVICE":"UNKNOWN_DEVICE":"BAD_REQUEST"===e.metaData.type&&(t="BAD_APPID")),o.Tb(e),this.setState({deviceFailure:t,hasBeenTapped:!1,failCount:this.state.failCount+1})}))}webAuthnSignIn(e){const t=navigator.credentials.get({publicKey:e});this.submitU2fResponse(t)}webAuthnRegister(e){const t=navigator.credentials.create({publicKey:e});this.submitU2fResponse(t)}invokeU2fFlow(){if("sign"===this.props.flowMode){const e=l(this.props.challengeData.webAuthnAuthenticationData);a.decodeFirst(e).then((e=>{this.webAuthnSignIn(e)})).catch((e=>{o.Tb(e),this.setState({deviceFailure:"DEVICE_ERROR",hasBeenTapped:!1})}))}else{if("enroll"!==this.props.flowMode)throw new Error(`Unsupported flow mode '${this.props.flowMode}'`);{const e=l(this.props.challengeData.webAuthnRegisterData);a.decodeFirst(e).then((e=>{this.webAuthnRegister(e.publicKey)})).catch((e=>{o.Tb(e),this.setState({deviceFailure:"DEVICE_ERROR",hasBeenTapped:!1})}))}}}renderUnsupported(){return this.props.silentIfUnsupported?null:(0,h.tZ)("div",{className:"u2f-box",children:(0,h.tZ)("div",{className:"inner",children:(0,h.tZ)("p",{className:"error",children:(0,n.t)("\n             Unfortunately your browser does not support U2F. You need to use\n             a different two-factor method or switch to a browser that supports\n             it (Google Chrome or Microsoft Edge).")})})})}get canTryAgain(){return"BAD_APPID"!==this.state.deviceFailure}renderBody(){return this.state.deviceFailure?this.renderFailure():this.props.children}renderPrompt(){const{style:e}=this.props;return(0,h.BX)("div",{style:e,className:"u2f-box"+(this.state.hasBeenTapped?" tapped":"")+(this.state.deviceFailure?0===this.state.failCount&&this.state.isSafari?" loading-dots":" device-failure":""),children:[(0,h.BX)("div",{className:"device-animation-frame",children:[(0,h.tZ)("div",{className:"device-failed"}),(0,h.tZ)("div",{className:"device-animation"}),(0,h.BX)("div",{className:"loading-dots",children:[(0,h.tZ)("span",{className:"dot"}),(0,h.tZ)("span",{className:"dot"}),(0,h.tZ)("span",{className:"dot"})]})]}),(0,h.tZ)("input",{type:"hidden",name:"challenge",ref:this.bindChallengeElement}),(0,h.tZ)("input",{type:"hidden",name:"response",ref:this.bindResponseElement}),(0,h.tZ)("div",{className:"inner",children:this.renderBody()})]})}render(){const{isSupported:e}=this.state;return null===e?null:e?this.renderPrompt():this.renderUnsupported()}}u.displayName="U2fInterface";const m=(0,c.Z)(u),f={signin:(0,n.t)("Insert your U2F device or tap the button on it to confirm the sign-in request."),sudo:(0,n.t)("Alternatively you can use your U2F device to confirm the action."),enroll:(0,n.t)("To enroll your U2F device insert it now or tap the button on it to activate it.")};function g(e){let{displayMode:t="signin",...s}=e;const n="enroll"===t?"enroll":"sign";return(0,h.tZ)(m,{...s,silentIfUnsupported:"sudo"===t,flowMode:n,children:(0,h.tZ)("p",{children:f[t]??null})})}g.displayName="U2fSign";const y=g}}]);
//# sourceMappingURL=../sourcemaps/U2fSign.46b5f58151c368816c5109b228c08157.js.map