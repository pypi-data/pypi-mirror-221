"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_gettingStartedDocs_java_java_tsx"],{"./app/gettingStartedDocs/java/java.tsx":(n,e,t)=>{t.r(e),t.d(e,{GettingStartedWithJava:()=>l,default:()=>p,steps:()=>u});var o=t("../node_modules/react/index.js"),r=t("./app/components/links/externalLink.tsx"),i=t("./app/components/onboarding/gettingStartedDoc/layout.tsx"),a=t("./app/components/onboarding/gettingStartedDoc/step.tsx"),s=t("./app/locale.tsx"),c=t("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");const d=(0,s._N)("Sentry for Java is a collection of modules provided by Sentry; it supports Java 1.8 and above. At its core, Sentry for Java provides a raw client for sending events to Sentry. If you use [strong:Spring Boot, Spring, Logback, or Log4j2], we recommend visiting our Sentry Java documentation for installation instructions.",{strong:(0,c.tZ)("strong",{}),link:(0,c.tZ)(r.Z,{href:"https://docs.sentry.io/platforms/java/"})}),u=function(){let{dsn:n}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{type:a.WU.INSTALL,description:(0,s.t)("Install the SDK via Gradle, Maven, or SBT:"),configurations:[{description:(0,c.tZ)("h5",{children:(0,s.t)("Gradle")}),configurations:[{language:"groovy",description:(0,c.tZ)("p",{children:(0,s._N)("For Gradle, add to your [code:build.gradle] file:",{code:(0,c.tZ)("code",{})})}),code:"\n// Make sure mavenCentral is there.\nrepositories {\n    mavenCentral()\n}\n\n// Add Sentry's SDK as a dependency.\ndependencies {\n    implementation 'io.sentry:sentry:6.25.2'\n}\n          "},{language:"groovy",description:(0,s.t)("To upload your source code to Sentry so it can be shown in stack traces, use our Gradle plugin."),code:'\nbuildscript {\n  repositories {\n    mavenCentral()\n  }\n}\n\nplugins {\n  id "io.sentry.jvm.gradle" version "3.11.1"\n}\n\nsentry {\n  // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.\n  // This enables source context, allowing you to see your source\n  // code as part of your stack traces in Sentry.\n  includeSourceContext = true\n\n  org = "___ORG_SLUG___"\n  projectName = "___PROJECT_SLUG___"\n  authToken = "your-sentry-auth-token"\n}\n        '}]},{description:(0,c.tZ)("h5",{children:(0,s.t)("Maven")}),configurations:[{language:"xml",description:(0,c.tZ)("p",{children:(0,s._N)("For Maven, add to your [code:pom.xml] file:",{code:(0,c.tZ)("code",{})})}),code:"\n<dependency>\n  <groupId>io.sentry</groupId>\n  <artifactId>sentry</artifactId>\n  <version>6.25.2</version>\n</dependency>\n            "},{language:"xml",description:(0,s.t)("To upload your source code to Sentry so it can be shown in stack traces, use our Maven plugin."),code:"\n<build>\n  <plugins>\n    <plugin>\n      <groupId>io.sentry</groupId>\n      <artifactId>sentry-maven-plugin</artifactId>\n      <version>0.0.2</version>\n      <configuration>\n      \x3c!-- for showing output of sentry-cli --\x3e\n      <debugSentryCli>true</debugSentryCli>\n\n      \x3c!-- download the latest sentry-cli and provide path to it here --\x3e\n      \x3c!-- download it here: https://github.com/getsentry/sentry-cli/releases --\x3e\n      \x3c!-- minimum required version is 2.17.3 --\x3e\n      <sentryCliExecutablePath>/path/to/sentry-cli</sentryCliExecutablePath>\n\n      <org>___ORG_SLUG___</org>\n\n      <project>___PROJECT_SLUG___</project>\n\n      \x3c!-- in case you're self hosting, provide the URL here --\x3e\n      \x3c!--<url>http://localhost:8000/</url>--\x3e\n\n      \x3c!-- provide your auth token via SENTRY_AUTH_TOKEN environment variable --\x3e\n      \x3c!-- you can find it in Sentry UI: Settings > Account > API > Auth Tokens --\x3e\n      <authToken>env.SENTRY_AUTH_TOKEN</authToken>\n      </configuration>\n      <executions>\n        <execution>\n            <phase>generate-resources</phase>\n            <goals>\n                <goal>uploadSourceBundle</goal>\n            </goals>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n...\n</build>\n            "}]},{description:(0,c.tZ)("h5",{children:(0,s.t)("SBT")}),configurations:[{description:(0,c.tZ)("p",{children:(0,s._N)("For [strong:SBT]:",{strong:(0,c.tZ)("strong",{})})}),language:"scala",code:'libraryDependencies += "io.sentry" % "sentry" % "6.25.2"'}]}],additionalInfo:(0,c.tZ)("p",{children:(0,s._N)("To upload your source code to Sentry so it can be shown in stack traces, please refer to [link:Manually Uploading Source Context].",{link:(0,c.tZ)(r.Z,{href:"https://docs.sentry.io/platforms/java/source-context/"})})})},{type:a.WU.CONFIGURE,description:(0,s.t)("Configure Sentry as soon as possible in your application's lifecycle:"),configurations:[{language:"java",code:`\nimport io.sentry.Sentry;\n\nSentry.init(options -> {\n  options.setDsn("${n}");\n  // Set tracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n  // We recommend adjusting this value in production.\n  options.setTracesSampleRate(1.0);\n  // When first trying Sentry it's good to see what the SDK is doing:\n  options.setDebug(true);\n});\n      `}]},{type:a.WU.VERIFY,description:(0,c.tZ)("p",{children:(0,s._N)("Trigger your first event from your development environment by intentionally creating an error with the [code:Sentry#captureException] method, to test that everything is working:",{code:(0,c.tZ)("code",{})})}),configurations:[{language:"java",code:'\nimport java.lang.Exception;\nimport io.sentry.Sentry;\n\ntry {\n  throw new Exception("This is a test.");\n} catch (Exception e) {\n  Sentry.captureException(e);\n}\n      '}],additionalInfo:(0,c.BX)(o.Fragment,{children:[(0,c.tZ)("p",{children:(0,s.t)("If you're new to Sentry, use the email alert to access your account and complete a product tour.")}),(0,c.tZ)("p",{children:(0,s.t)("If you're an existing user and have disabled alerts, you won't receive this email.")})]})},{title:(0,s.t)("Measure Performance"),description:(0,s.t)("You can capture transactions using the SDK. For example:"),configurations:[{language:"java",code:'\nimport io.sentry.ITransaction;\nimport io.sentry.Sentry;\nimport io.sentry.SpanStatus;\n\n// A good name for the transaction is key, to help identify what this is about\nITransaction transaction = Sentry.startTransaction("processOrderBatch()", "task");\ntry {\nprocessOrderBatch();\n} catch (Exception e) {\ntransaction.setThrowable(e);\ntransaction.setStatus(SpanStatus.INTERNAL_ERROR);\nthrow e;\n} finally {\ntransaction.finish();\n}\n        '}],additionalInfo:(0,c.tZ)("p",{children:(0,s._N)("For more information about the API and automatic instrumentations included in the SDK, [link:visit the docs].",{link:(0,c.tZ)(r.Z,{href:"https://docs.sentry.io/platforms/java/performance/"})})})}]};function l(n){let{dsn:e,...t}=n;return(0,c.tZ)(i.A,{steps:u({dsn:e}),introduction:d,...t})}l.displayName="GettingStartedWithJava";const p=l}}]);
//# sourceMappingURL=../sourcemaps/app_gettingStartedDocs_java_java_tsx.ab5f1409c74a464ccef95db664cdc026.js.map