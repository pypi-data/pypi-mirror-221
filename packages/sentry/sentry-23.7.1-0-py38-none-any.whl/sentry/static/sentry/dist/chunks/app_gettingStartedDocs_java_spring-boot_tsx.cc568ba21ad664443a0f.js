"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_gettingStartedDocs_java_spring-boot_tsx"],{"./app/gettingStartedDocs/java/spring-boot.tsx":(n,e,t)=>{t.r(e),t.d(e,{GettingStartedWithSpringBoot:()=>g,default:()=>l,steps:()=>d});var o=t("../node_modules/react/index.js"),r=t("./app/components/links/externalLink.tsx"),i=t("./app/components/onboarding/gettingStartedDoc/layout.tsx"),a=t("./app/components/onboarding/gettingStartedDoc/step.tsx"),s=t("./app/locale.tsx"),c=t("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");const p=(0,s._N)("There are two variants of Sentry available for Spring Boot. If you're using Spring Boot 2, use [springBootStarterLink:sentry-spring-boot-starter]. If you're using Spring Boot 3, use [springBootStarterJakartaLink:sentry-spring-boot-starter-jakarta] instead. Sentry's integration with [springBootLink:Spring Boot] supports Spring Boot 2.1.0 and above to report unhandled exceptions as well as release and registration of beans. If you're on an older version, use [legacyIntegrationLink:our legacy integration].",{springBootStarterLink:(0,c.tZ)(r.Z,{href:"https://github.com/getsentry/sentry-java/tree/master/sentry-spring-boot-starter"}),springBootStarterJakartaLink:(0,c.tZ)(r.Z,{href:"https://github.com/getsentry/sentry-java/tree/master/sentry-spring-boot-starter-jakarta"}),springBootLink:(0,c.tZ)(r.Z,{href:"https://spring.io/projects/spring-boot"}),legacyIntegrationLink:(0,c.tZ)(r.Z,{href:"https://docs.sentry.io/platforms/java/legacy/spring/"})}),d=function(){let{dsn:n}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{type:a.WU.INSTALL,description:(0,s.t)("Install using either Maven or Gradle:"),configurations:[{description:(0,c.tZ)("h5",{children:(0,s.t)("Maven")}),configurations:[{language:"xml",description:(0,c.tZ)("strong",{children:(0,s.t)("Spring Boot 2")}),code:"\n<dependency>\n    <groupId>io.sentry</groupId>\n    <artifactId>sentry-spring-boot-starter</artifactId>\n    <version>{{@inject packages.version('sentry.java.spring-boot', '4.0.0') }}</version>\n</dependency>\n          "},{language:"xml",description:(0,c.tZ)("strong",{children:(0,s.t)("Spring Boot 3")}),code:"\n<dependency>\n    <groupId>io.sentry</groupId>\n    <artifactId>sentry-spring-boot-starter-jakarta</artifactId>\n    <version>{{@inject packages.version('sentry.java.spring-boot.jakarta', '6.7.0') }}</version>\n</dependency>\n        "}]},{description:(0,c.tZ)("h5",{children:(0,s.t)("Graddle")}),configurations:[{language:"properties",description:(0,c.tZ)("strong",{children:(0,s.t)("Spring Boot 2")}),code:"implementation 'io.sentry:sentry-spring-boot-starter:{{@inject packages.version('sentry.java.spring-boot', '4.0.0') }}'"},{language:"properties",description:(0,c.tZ)("strong",{children:(0,s.t)("Spring Boot 3")}),code:"implementation 'io.sentry:sentry-spring-boot-starter-jakarta:{{@inject packages.version('sentry.java.spring-boot.jakarta', '6.7.0') }}'"}]}]},{type:a.WU.CONFIGURE,description:(0,c.tZ)("p",{children:(0,s._N)("Open up [applicationPropertiesCode:src/main/application.properties] (or [applicationYmlCode:src/main/application.yml]) and configure the DSN, and any other settings you need:",{applicationPropertiesCode:(0,c.tZ)("code",{}),applicationYmlCode:(0,c.tZ)("code",{})})}),configurations:[{language:"properties",description:(0,c.tZ)("p",{children:(0,s._N)("Modify [code:src/main/application.properties]:",{code:(0,c.tZ)("code",{})})}),code:`\nsentry.dsn=${n}\n# Set traces-sample-rate to 1.0 to capture 100% of transactions for performance monitoring.\n# We recommend adjusting this value in production.\nsentry.traces-sample-rate=1.0\n        `},{language:"properties",description:(0,c.tZ)("p",{children:(0,s._N)("Or, modify [code:src/main/application.yml]:",{code:(0,c.tZ)("code",{})})}),code:`\nsentry:\n  dsn:${n}\n  # Set traces-sample-rate to 1.0 to capture 100% of transactions for performance monitoring.\n  # We recommend adjusting this value in production.\n  traces-sample-rate: 1.0\n        `,additionalInfo:(0,c.tZ)("p",{children:(0,s._N)("If you use Logback for logging you may also want to send error logs to Sentry. Add a dependency to the [sentryLogbackCode:sentry-logback] module using either Maven or Gradle. Sentry Spring Boot Starter will auto-configure [sentryAppenderCode:SentryAppender].",{sentryAppenderCode:(0,c.tZ)("code",{}),sentryLogbackCode:(0,c.tZ)("code",{})})})},{description:(0,c.tZ)("h5",{children:(0,s.t)("Maven")}),configurations:[{language:"xml",code:"\n<dependency>\n    <groupId>io.sentry</groupId>\n    <artifactId>sentry-logback</artifactId>\n    <version>{{@inject packages.version('sentry.java.logback', '4.0.0') }}</version>\n</dependency>\n          "},{language:"xml",description:(0,s.t)("To upload your source code to Sentry so it can be shown in stack traces, use our Maven plugin."),code:"\n<build>\n  <plugins>\n    <plugin>\n      <groupId>io.sentry</groupId>\n      <artifactId>sentry-maven-plugin</artifactId>\n      <version>{{@inject packages.version('sentry.java.mavenplugin', '0.0.2') }}</version>\n      <configuration>\n        \x3c!-- for showing output of sentry-cli --\x3e\n        <debugSentryCli>true</debugSentryCli>\n\n        \x3c!-- download the latest sentry-cli and provide path to it here --\x3e\n        \x3c!-- download it here: https://github.com/getsentry/sentry-cli/releases --\x3e\n        \x3c!-- minimum required version is 2.17.3 --\x3e\n        <sentryCliExecutablePath>/path/to/sentry-cli</sentryCliExecutablePath>\n\n        <org>___ORG_SLUG___</org>\n\n        <project>___PROJECT_SLUG___</project>\n\n        \x3c!-- in case you're self hosting, provide the URL here --\x3e\n        \x3c!--<url>http://localhost:8000/</url>--\x3e\n\n        \x3c!-- provide your auth token via SENTRY_AUTH_TOKEN environment variable --\x3e\n        \x3c!-- you can find it in Sentry UI: Settings > Account > API > Auth Tokens --\x3e\n        <authToken>env.SENTRY_AUTH_TOKEN}</authToken>\n      </configuration>\n      <executions>\n        <execution>\n          <phase>generate-resources</phase>\n          <goals>\n            <goal>uploadSourceBundle</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n...\n</build>\n        "}]},{description:(0,c.tZ)("h5",{children:(0,s.t)("Gradle")}),configurations:[{language:"properties",code:"implementation 'io.sentry:sentry-logback:{{@inject packages.version('sentry.java.logback', '4.0.0') }}'"},{language:"javascript",description:(0,s.t)("To upload your source code to Sentry so it can be shown in stack traces, use our Gradle plugin."),code:'\nbuildscript {\n  repositories {\n    mavenCentral()\n  }\n}\n\nplugins {\n  id "io.sentry.jvm.gradle" version "{{@inject packages.version(\'sentry.java.android.gradle-plugin\', \'3.9.0\') }}"\n}\n\nsentry {\n  // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.\n  // This enables source context, allowing you to see your source\n  // code as part of your stack traces in Sentry.\n  includeSourceContext = true\n\n  org = "___ORG_SLUG___"\n  projectName = "___PROJECT_SLUG___"\n  authToken = "your-sentry-auth-token"\n}\n        '}]}]},{type:a.WU.VERIFY,description:(0,s.t)("Then create an intentional error, so you can test that everything is working using either Java or Kotlin:"),configurations:[{description:(0,c.tZ)("h5",{children:"Java"}),language:"javascript",code:'\n        import java.lang.Exception;\n        import io.sentry.Sentry;\n\n        try {\n          throw new Exception("This is a test.");\n        } catch (Exception e) {\n          Sentry.captureException(e);\n        }\n        '},{description:(0,c.tZ)("h5",{children:"Kotlin"}),language:"javascript",code:'\n        import java.lang.Exception\n        import io.sentry.Sentry\n\n        try {\n          throw Exception("This is a test.")\n        } catch (e: Exception) {\n          Sentry.captureException(e)\n        }\n        '}],additionalInfo:(0,c.BX)(o.Fragment,{children:[(0,c.tZ)("p",{children:(0,s.t)("If you're new to Sentry, use the email alert to access your account and complete a product tour.")}),(0,c.tZ)("p",{children:(0,s.t)("If you're an existing user and have disabled alerts, you won't receive this email.")})]})},{title:(0,s.t)("Measure Performance"),description:(0,c.tZ)("p",{children:(0,s._N)("Each incoming Spring MVC HTTP request is automatically turned into a transaction. To create spans around bean method executions, annotate bean method with [code:@SentrySpan] annotation:",{code:(0,c.tZ)("code",{})})}),configurations:[{description:(0,c.tZ)("h5",{children:"Java"}),configurations:[{language:"javascript",description:(0,c.tZ)("strong",{children:(0,s.t)("Spring Boot 2")}),code:"\nimport org.springframework.stereotype.Component;\nimport io.sentry.spring.tracing.SentrySpan;\n\n@Component\nclass PersonService {\n\n  @SentrySpan\n  Person findById(Long id) {\n    ...\n  }\n}\n            "},{language:"javascript",description:(0,c.tZ)("strong",{children:(0,s.t)("Spring Boot 3")}),code:"\n            import org.springframework.stereotype.Component;\n            import io.sentry.spring.jakarta.tracing.SentrySpan;\n\n            @Component\n            class PersonService {\n\n              @SentrySpan\n              Person findById(Long id) {\n                ...\n              }\n            }\n            "}]},{description:(0,c.tZ)("h5",{children:"Kotlin"}),configurations:[{language:"javascript",description:(0,c.tZ)("strong",{children:(0,s.t)("Spring Boot 2")}),code:'\nimport org.springframework.stereotype.Component\nimport io.sentry.spring.tracing.SentrySpan\n\n@Component\nclass PersonService {\n\n  @SentrySpan(operation = "task")\n  fun findById(id: Long): Person {\n    ...\n  }\n}\n            '},{language:"javascript",description:(0,c.tZ)("strong",{children:(0,s.t)("Spring Boot 3")}),code:'\nimport org.springframework.stereotype.Component\nimport io.sentry.spring.jakarta.tracing.SentrySpan\n\n@Component\nclass PersonService {\n\n  @SentrySpan(operation = "task")\n  fun findById(id: Long): Person {\n    ...\n  }\n}\n            '}]}],additionalInfo:(0,c.tZ)("p",{children:(0,s._N)("Check out [docLink:the documentation] to learn more about the API and integrated instrumentations.",{docLink:(0,c.tZ)(r.Z,{href:"https://docs.sentry.io/platforms/java/guides/spring-boot/performance/instrumentation/"})})})}]};function g(n){let{dsn:e,...t}=n;return(0,c.tZ)(i.A,{steps:d({dsn:e}),introduction:p,...t})}g.displayName="GettingStartedWithSpringBoot";const l=g}}]);
//# sourceMappingURL=../sourcemaps/app_gettingStartedDocs_java_spring-boot_tsx.ff480a6dae6e9dc3d6d2e057119c886d.js.map