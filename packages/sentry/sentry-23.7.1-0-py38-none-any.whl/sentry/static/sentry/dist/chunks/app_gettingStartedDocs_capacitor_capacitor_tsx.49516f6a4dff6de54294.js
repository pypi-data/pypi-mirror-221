"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_gettingStartedDocs_capacitor_capacitor_tsx"],{"./app/gettingStartedDocs/capacitor/capacitor.tsx":(n,t,e)=>{e.r(t),e.d(t,{GettingStartedWithCapacitor:()=>d,default:()=>p,steps:()=>c});var r=e("../node_modules/react/index.js"),a=e("./app/components/onboarding/gettingStartedDoc/layout.tsx"),i=e("./app/components/onboarding/gettingStartedDoc/step.tsx"),o=e("./app/locale.tsx"),s=e("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");const c=function(){let{dsn:n}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{type:i.WU.INSTALL,description:(0,o.t)("Install the Sentry Capacitor SDK alongside the sibling Sentry Angular SDK:"),configurations:[{language:"bash",code:"\n# npm\nnpm install --save @sentry/capacitor @sentry/angular-ivy\n\n# yarn\nyarn add @sentry/capacitor @sentry/angular @sentry/tracing --exact\n        "},{language:"bash",description:(0,o.t)("Or install the standalone Sentry Capacitor SDK if you don't use Ionic/Angular:"),code:"\n# npm\nnpm install --save @sentry/capacitor @sentry/tracing\n\n# yarn\nyarn add @sentry/capacitor\n        "},{description:(0,s.BX)(r.Fragment,{children:[(0,s.tZ)("h5",{children:(0,o.t)("Capacitor 2 - Android")}),(0,o.t)("This step is not needed if you are using Capacitor 3"),(0,s.tZ)("p",{children:(0,o._N)("Then, add the [sentryCapacitorCode:SentryCapacitor] plugin class inside the [onCreateCode:onCreate] method of your [mainActivityCode:MainActivity] file.",{sentryCapacitorCode:(0,s.tZ)("code",{}),onCreateCode:(0,s.tZ)("code",{}),mainActivityCode:(0,s.tZ)("code",{})})})]}),configurations:[{description:(0,s.tZ)("strong",{children:"Java"}),language:"java",code:"\nimport android.os.Bundle;\nimport com.getcapacitor.BridgeActivity;\nimport com.getcapacitor.Plugin;\nimport io.sentry.capacitor.SentryCapacitor;\nimport java.util.ArrayList;\n\npublic class MainActivity extends BridgeActivity {\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    // Initializes the Bridge\n    this.init(savedInstanceState, new ArrayList<Class<? extends Plugin>>() {{\n      add(SentryCapacitor.class);\n    }});\n  }\n}\n            "},{description:(0,s.tZ)("strong",{children:"Kotlin"}),language:"kotlin",code:"\nimport android.os.Bundle\nimport com.getcapacitor.BridgeActivity\nimport com.getcapacitor.Plugin\nimport io.sentry.capacitor.SentryCapacitor\n\nclass MainActivity : BridgeActivity() {\n  override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    // Initializes the Bridge\n    this.init(\n      savedInstanceState,\n      listOf<Class<out Plugin>>(SentryCapacitor::class.java)\n    )\n  }\n}\n            "}]}],additionalInfo:(0,s.tZ)("p",{children:(0,o._N)("The version of the sibling SDK must match with the version referred by Sentry Capacitor. To check which version of the sibling SDK is installed, use the following command: [code:npm info @sentry/capacitor peerDependencies]",{code:(0,s.tZ)("code",{})})})},{type:i.WU.CONFIGURE,description:(0,o.t)("You must initialize the Sentry SDK as early as you can:"),configurations:[{description:(0,o.t)("With Ionic/Angular:"),language:"typescript",code:`\n  // app.module.ts\n  import * as Sentry from '@sentry/capacitor';\n  // Use "@sentry/angular-ivy" for Angular 12+ or "@sentry/angular" for Angular 10 or 11\n  import * as SentryAngular from '@sentry/angular-ivy';\n\n\n  Sentry.init(\n    {\n      dsn: '${n}',\n      // To set your release and dist versions\n      release: 'my-project-name@' + process.env.npm_package_version,\n      dist: '1',\n      // Set tracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n      // We recommend adjusting this value in production.\n      tracesSampleRate: 1.0,\n      integrations: [\n        new SentryAngular.BrowserTracing({\n          // Set "tracePropagationTargets" to control for which URLs distributed tracing should be enabled\n          tracePropagationTargets: ["localhost", /^https://yourserver.io/api/],\n          routingInstrumentation: SentryAngular.routingInstrumentation,\n        }),\n      ]\n    },\n    // Forward the init method from @sentry/angular\n    SentryAngular.init\n  );\n\n  @NgModule({\n    providers: [\n      {\n        provide: ErrorHandler,\n        // Attach the Sentry ErrorHandler\n        useValue: SentryAngular.createErrorHandler(),\n      },\n      {\n        provide: SentryAngular.TraceService,\n        deps: [Router],\n      },\n      {\n        provide: APP_INITIALIZER,\n        useFactory: () => () => {},\n        deps: [SentryAngular.TraceService],\n        multi: true,\n      },\n    ],\n  })\n  `},{description:(0,o.t)("Standalone:"),language:"javascript",code:`\n// App.js\nimport * as Sentry from "@sentry/capacitor";\n\nSentry.init({\n  dsn: "${n}",\n\n  // Set your release version, such as 'getsentry@1.0.0'\n  release: "my-project-name@<release-name>",\n  // Set your dist version, such as "1"\n  dist: "<dist>",\n});\n        `}]},{type:i.WU.VERIFY,description:(0,o.t)("This snippet includes an intentional error, so you can test that everything is working as soon as you set it up:"),configurations:[{language:"javascript",code:'\nimport * as Sentry from "@sentry/capacitor";\n\nSentry.captureException("Test Captured Exception");\n        '},{language:"javascript",description:(0,o.t)("You can also throw an error anywhere in your application:"),code:'\n// Must be thrown after Sentry.init is called to be captured.\nthrow new Error("Test Thrown Error");\n        '},{language:"javascript",description:(0,o.t)("Or trigger a native crash:"),code:'\nimport * as Sentry from "@sentry/capacitor";\n\nSentry.nativeCrash();\n        '}]}]};function d(n){let{dsn:t,...e}=n;return(0,s.tZ)(a.A,{steps:c({dsn:t}),...e})}d.displayName="GettingStartedWithCapacitor";const p=d}}]);
//# sourceMappingURL=../sourcemaps/app_gettingStartedDocs_capacitor_capacitor_tsx.276fcd3d4a2046c5cffc44baa16330c7.js.map