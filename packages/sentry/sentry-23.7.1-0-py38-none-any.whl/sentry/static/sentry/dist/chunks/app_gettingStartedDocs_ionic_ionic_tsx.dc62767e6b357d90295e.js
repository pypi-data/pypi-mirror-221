"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_gettingStartedDocs_ionic_ionic_tsx"],{"./app/gettingStartedDocs/ionic/ionic.tsx":(n,e,t)=>{t.r(e),t.d(e,{GettingStartedWithIonic:()=>d,default:()=>l,steps:()=>c});var r=t("../node_modules/react/index.js"),i=t("./app/components/onboarding/gettingStartedDoc/layout.tsx"),a=t("./app/components/onboarding/gettingStartedDoc/step.tsx"),o=t("./app/locale.tsx"),s=t("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");const c=function(){let{dsn:n}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{type:a.WU.INSTALL,description:(0,s.tZ)("p",{children:(0,o._N)("To use Sentry in your Ionic app, install the Sentry Capacitor SDK alongside the sibling Sentry SDK related to the Web framework you're using with Ionic. The supported siblings are: Angular [sentryAngularIvyCode:@sentry/angular-ivy], React [sentryReactCode:@sentry/react] and Vue [sentryVueCode:@sentry/vue].",{sentryAngularIvyCode:(0,s.tZ)("code",{}),sentryReactCode:(0,s.tZ)("code",{}),sentryVueCode:(0,s.tZ)("code",{})})}),configurations:[{language:"bash",description:(0,o.t)("Heres an example of installing Sentry Capacitor along with Sentry Angular:"),code:"npm install --save @sentry/capacitor @sentry/angular"},{language:"bash",description:(0,o.t)("or"),code:"yarn add @sentry/capacitor @sentry/angular"},{description:(0,s.BX)(r.Fragment,{children:[(0,s.tZ)("h5",{children:(0,o.t)("Capacitor 2 - Android")}),(0,o.t)("This step is not needed if you are using Capacitor 3"),(0,s.tZ)("p",{children:(0,o._N)("Then, add the [sentryCapacitorCode:SentryCapacitor] plugin class inside the [onCreateCode:onCreate] method of your [mainActivityCode:MainActivity] file.",{sentryCapacitorCode:(0,s.tZ)("code",{}),onCreateCode:(0,s.tZ)("code",{}),mainActivityCode:(0,s.tZ)("code",{})})})]}),configurations:[{description:(0,s.tZ)("strong",{children:"Java"}),language:"java",code:"\nimport android.os.Bundle;\nimport com.getcapacitor.BridgeActivity;\nimport com.getcapacitor.Plugin;\nimport io.sentry.capacitor.SentryCapacitor;\nimport java.util.ArrayList;\n\npublic class MainActivity extends BridgeActivity {\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    // Initializes the Bridge\n    this.init(savedInstanceState, new ArrayList<Class<? extends Plugin>>() {{\n      add(SentryCapacitor.class);\n    }});\n  }\n}\n            "},{description:(0,s.tZ)("strong",{children:"Kotlin"}),language:"kotlin",code:"\nimport android.os.Bundle\nimport com.getcapacitor.BridgeActivity\nimport com.getcapacitor.Plugin\nimport io.sentry.capacitor.SentryCapacitor\n\nclass MainActivity : BridgeActivity() {\n  override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    // Initializes the Bridge\n    this.init(\n      savedInstanceState,\n      listOf<Class<out Plugin>>(SentryCapacitor::class.java)\n    )\n  }\n}\n            "}]}],additionalInfo:(0,s.tZ)("p",{children:(0,o._N)("The same installation process applies to the other siblings, all you need to do is to replace [code:@sentry/angular-ivy] by the desired sibling.",{code:(0,s.tZ)("code",{})})})},{type:a.WU.CONFIGURE,description:(0,s.tZ)("p",{children:(0,o._N)("You must initialize the Sentry SDK as early as you can:",{code:(0,s.tZ)("code",{})})}),configurations:[{language:"javascript",code:`\nimport * as Sentry from "@sentry/capacitor";\n// The example is using Angular 12+. Import '@sentry/angular' for Angular 10 and 11. Import '@sentry/vue' or '@sentry/react' when using a Sibling different than Angular.\nimport * as SentrySibling from "@sentry/angular-ivy";\n\nSentry.init(\n  {\n    dsn: "${n}",\n    // To set your release and dist versions\n    release: "my-project-name@" + process.env.npm_package_version,\n    dist: "1",\n    // Set tracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n    // We recommend adjusting this value in production.\n    tracesSampleRate: 1.0,\n    integrations: [\n      new SentrySibling.BrowserTracing({\n        // Set "tracePropagationTargets" to control for which URLs distributed tracing should be enabled\n        tracePropagationTargets: [\n          "localhost",\n          /^https://yourserver.io/api/,\n        ],\n        routingInstrumentation: SentrySibling.routingInstrumentation,\n      }),\n    ],\n  },\n  // Forward the init method to the sibling Framework.\n  SentrySibling.init\n);\n        `},{language:"javascript",description:(0,s.tZ)("p",{children:(0,o._N)("Additionally for Angular, you will also need to configure your root [code:app.module.ts] (same code doesn't apply to other siblings):",{code:(0,s.tZ)("code",{})})}),code:"\n@NgModule({\n  providers: [\n    {\n      provide: ErrorHandler,\n      // Attach the Sentry ErrorHandler\n      useValue: SentrySibling.createErrorHandler(),\n    },\n    {\n      provide: SentrySibling.TraceService,\n      deps: [Router],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => () => {},\n      deps: [SentrySibling.TraceService],\n      multi: true,\n    },\n  ],\n})\n        "}]},{type:a.WU.VERIFY,description:(0,o.t)("This snippet includes an intentional error, so you can test that everything is working as soon as you set it up:"),configurations:[{language:"javascript",code:'\nimport * as Sentry from "@sentry/capacitor";\n\nSentry.captureException("Test Captured Exception");\n        '},{language:"javascript",description:(0,o.t)("You can also throw an error anywhere in your application:"),code:'\n// Must be thrown after Sentry.init is called to be captured.\nthrow new Error("Test Thrown Error");\n        '},{language:"javascript",description:(0,o.t)("Or trigger a native crash:"),code:'\nimport * as Sentry from "@sentry/capacitor";\n\nSentry.nativeCrash();\n        '}]}]};function d(n){let{dsn:e,...t}=n;return(0,s.tZ)(i.A,{steps:c({dsn:e}),...t})}d.displayName="GettingStartedWithIonic";const l=d}}]);
//# sourceMappingURL=../sourcemaps/app_gettingStartedDocs_ionic_ionic_tsx.792c3e28e2d75b16929084e073f0e897.js.map