"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_gettingStartedDocs_java_log4j2_tsx"],{"./app/gettingStartedDocs/java/log4j2.tsx":(e,n,t)=>{t.r(n),t.d(n,{GettingStartedWithLog4j2:()=>u,default:()=>g,steps:()=>d});var o=t("../node_modules/react/index.js"),r=t("./app/components/links/externalLink.tsx"),i=t("./app/components/onboarding/gettingStartedDoc/layout.tsx"),a=t("./app/components/onboarding/gettingStartedDoc/step.tsx"),s=t("./app/locale.tsx"),l=t("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");const c=(0,s._N)("The [code:sentry-log4j2] library provides [log4jLink:Log4j 2.x] support for Sentry via an [appenderLink:Appender] that sends logged exceptions to Sentry.",{log4jLink:(0,l.tZ)(r.Z,{href:"https://logging.apache.org/log4j/2.x//"}),appenderLink:(0,l.tZ)(r.Z,{href:"https://logging.apache.org/log4j/2.x/manual/appenders.html"}),code:(0,l.tZ)("code",{})}),d=function(){let{dsn:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{type:a.WU.INSTALL,description:(0,s.t)("Install Sentry's integration with Log4j 2.x using either Maven or Gradle:"),configurations:[{description:(0,l.tZ)("h5",{children:(0,s.t)("Maven")}),configurations:[{language:"xml",code:"\n<dependency>\n  <groupId>io.sentry</groupId>\n  <artifactId>sentry-log4j2</artifactId>\n  <version>6.25.2</version>\n</dependency>\n          "},{language:"xml",description:(0,s.t)("To upload your source code to Sentry so it can be shown in stack traces, use our Maven plugin."),code:"\n<build>\n  <plugins>\n    <plugin>\n      <groupId>io.sentry</groupId>\n      <artifactId>sentry-maven-plugin</artifactId>\n      <version>0.0.2</version>\n      <configuration>\n      \x3c!-- for showing output of sentry-cli --\x3e\n      <debugSentryCli>true</debugSentryCli>\n\n      \x3c!-- download the latest sentry-cli and provide path to it here --\x3e\n      \x3c!-- download it here: https://github.com/getsentry/sentry-cli/releases --\x3e\n      \x3c!-- minimum required version is 2.17.3 --\x3e\n      <sentryCliExecutablePath>/path/to/sentry-cli</sentryCliExecutablePath>\n\n      <org>___ORG_SLUG___</org>\n\n      <project>___PROJECT_SLUG___</project>\n\n      \x3c!-- in case you're self hosting, provide the URL here --\x3e\n      \x3c!--<url>http://localhost:8000/</url>--\x3e\n\n      \x3c!-- provide your auth token via SENTRY_AUTH_TOKEN environment variable --\x3e\n      \x3c!-- you can find it in Sentry UI: Settings > Account > API > Auth Tokens --\x3e\n      <authToken>env.SENTRY_AUTH_TOKEN</authToken>\n      </configuration>\n      <executions>\n        <execution>\n          <phase>generate-resources</phase>\n          <goals>\n          <goal>uploadSourceBundle</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n  ...\n</build>\n        "}]},{description:(0,l.tZ)("h5",{children:(0,s.t)("Graddle")}),configurations:[{language:"groovy",code:"implementation 'io.sentry:sentry-log4j2:6.25.2'"},{description:(0,s.t)("To upload your source code to Sentry so it can be shown in stack traces, use our Gradle plugin."),language:"groovy",code:'\nbuildscript {\n  repositories {\n    mavenCentral()\n  }\n}\n\nplugins {\n  id "io.sentry.jvm.gradle" version "3.11.1"\n}\n\nsentry {\n  // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.\n  // This enables source context, allowing you to see your source\n  // code as part of your stack traces in Sentry.\n  includeSourceContext = true\n\n  org = "___ORG_SLUG___"\n  projectName = "___PROJECT_SLUG___"\n  authToken = "your-sentry-auth-token"\n}\n            '}]}]},{type:a.WU.CONFIGURE,description:(0,s.t)("Configure Sentry as soon as possible in your application's lifecycle:"),configurations:[{language:"xml",description:(0,l.tZ)("p",{children:(0,s._N)("The following example using the [log4j2Code:log4j2.xml] format to configure a [sentryConsoleAppenderCode:ConsoleAppender] that logs to standard out at the INFO level, and a [sentryAppenderCode:SentryAppender] that logs to the Sentry server at the ERROR level.",{log4j2Code:(0,l.tZ)("code",{}),sentryConsoleAppenderCode:(0,l.tZ)("code",{}),sentryAppenderCode:(0,l.tZ)("code",{})})}),code:`\n<?xml version="1.0" encoding="UTF-8"?>\n<Configuration status="warn" packages="org.apache.logging.log4j.core,io.sentry.log4j2">\n    <Appenders>\n        <Console name="Console" target="SYSTEM_OUT">\n            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>\n        </Console>\n        <Sentry name="Sentry"\n                dsn=${e}>\n    </Appenders>\n    <Loggers>\n        <Root level="info">\n            <AppenderRef ref="Sentry"/>\n            <AppenderRef ref="Console"/>\n        </Root>\n    </Loggers>\n</Configuration>\n        `,additionalInfo:(0,l.tZ)("p",{children:(0,s._N)("You'll also need to configure your DSN (client key) if it's not already in the [code:log4j2.xml] configuration. Learn more in [link:our documentation for DSN configuration].",{code:(0,l.tZ)("code",{}),link:(0,l.tZ)(r.Z,{href:"https://docs.sentry.io/platforms/java/guides/log4j2/#dsn-configuration"})})})},{description:(0,l.tZ)("p",{children:(0,s._N)("Next, you'll need to set your log levels, as illustrated here. You can learn more about [link:configuring log levels] in our documentation.",{link:(0,l.tZ)(r.Z,{href:"https://docs.sentry.io/platforms/java/guides/log4j2/#configure"})})}),configurations:[{language:"xml",code:`\n\x3c!-- Setting minimumBreadcrumbLevel modifies the default minimum level to add breadcrumbs from INFO to DEBUG  --\x3e\n\x3c!-- Setting minimumEventLevel the default minimum level to capture an event from ERROR to WARN  --\x3e\n<Sentry name="Sentry"\n        dsn="${e}"\n        minimumBreadcrumbLevel="DEBUG"\n        minimumEventLevel="WARN"\n/>\n          `}]}]},{type:a.WU.VERIFY,description:(0,s.t)("Last, create an intentional error, so you can test that everything is working:"),configurations:[{description:(0,l.tZ)("h5",{children:"Java"}),language:"java",code:'\nimport java.lang.Exception;\nimport io.sentry.Sentry;\n\ntry {\n  throw new Exception("This is a test.");\n} catch (Exception e) {\n  Sentry.captureException(e);\n}\n        '},{description:(0,l.tZ)("h5",{children:"Kotlin"}),language:"java",code:'\nimport java.lang.Exception\nimport io.sentry.Sentry\n\ntry {\n  throw Exception("This is a test.")\n} catch (e: Exception) {\n  Sentry.captureException(e)\n}\n        '}],additionalInfo:(0,l.BX)(o.Fragment,{children:[(0,l.tZ)("p",{children:(0,s.t)("If you're new to Sentry, use the email alert to access your account and complete a product tour.")}),(0,l.tZ)("p",{children:(0,s.t)("If you're an existing user and have disabled alerts, you won't receive this email.")})]})}]};function u(e){let{dsn:n,...t}=e;return(0,l.tZ)(i.A,{steps:d({dsn:n}),introduction:c,...t})}u.displayName="GettingStartedWithLog4j2";const g=u}}]);
//# sourceMappingURL=../sourcemaps/app_gettingStartedDocs_java_log4j2_tsx.244cb2d6bd54f30f5d181b7d953b45d9.js.map