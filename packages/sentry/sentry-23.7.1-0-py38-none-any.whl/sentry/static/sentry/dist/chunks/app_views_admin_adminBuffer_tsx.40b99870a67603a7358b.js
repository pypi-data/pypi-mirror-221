"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_views_admin_adminBuffer_tsx"],{"./app/components/internalStatChart.tsx":(e,t,s)=>{s.d(t,{Z:()=>h});var a=s("../node_modules/@babel/runtime/helpers/esm/defineProperty.js"),r=s("../node_modules/react/index.js"),n=s("./app/components/charts/miniBarChart.tsx"),i=s("./app/components/loadingError.tsx"),o=s("./app/components/loadingIndicator.tsx"),d=s("./app/utils/withApi.tsx"),l=s("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");class c extends r.Component{constructor(){super(...arguments),(0,a.Z)(this,"state",{error:!1,loading:!0,data:null}),(0,a.Z)(this,"fetchData",(()=>{this.setState({loading:!0}),this.props.api.request("/internal/stats/",{method:"GET",data:{since:this.props.since,resolution:this.props.resolution,key:this.props.stat},success:e=>this.setState({data:e,loading:!1,error:!1}),error:()=>this.setState({error:!0,loading:!1})})}))}componentDidMount(){this.fetchData()}shouldComponentUpdate(e,t){return this.state.loading!==t.loading}componentDidUpdate(e){e.since===this.props.since&&e.stat===this.props.stat&&e.resolution===this.props.resolution||this.fetchData()}render(){const{loading:e,error:t,data:s}=this.state,{label:a,height:r}=this.props;if(e)return(0,l.tZ)(o.Z,{});if(t)return(0,l.tZ)(i.Z,{onRetry:this.fetchData});const d={seriesName:a,data:s?.map((e=>{let[t,s]=e;return{name:1e3*t,value:s}}))??[]};return(0,l.tZ)(n.Z,{height:r??150,series:[d],isGroupedByDate:!0,showTimeInTooltip:!0,labelYAxisExtents:!0})}}c.displayName="InternalStatChart";const h=(0,d.Z)(c)},"./app/views/admin/adminBuffer.tsx":(e,t,s)=>{s.r(t),s.d(t,{default:()=>i});var a=s("./app/components/internalStatChart.tsx"),r=s("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");function n(){const e=(new Date).getTime()/1e3-604800;return(0,r.BX)("div",{children:[(0,r.tZ)("h3",{children:"Buffers"}),(0,r.BX)("div",{className:"box",children:[(0,r.tZ)("div",{className:"box-header",children:(0,r.tZ)("h4",{children:"About"})}),(0,r.tZ)("div",{className:"box-content with-padding",children:(0,r.BX)("p",{children:["Sentry buffers are responsible for making changes to cardinality counters — such as an issues event count — as well as updating attributes like"," ",(0,r.tZ)("em",{children:"last seen"}),". These are flushed on a regularly interval, and are directly affected by the queue backlog."]})})]}),(0,r.BX)("div",{className:"box",children:[(0,r.tZ)("div",{className:"box-header",children:(0,r.tZ)("h4",{children:"Updates Processed"})}),(0,r.tZ)(a.Z,{since:e,resolution:"1h",stat:"jobs.finished.sentry.tasks.process_buffer.process_incr",label:"Jobs"})]}),(0,r.BX)("div",{className:"box",children:[(0,r.tZ)("div",{className:"box-header",children:(0,r.tZ)("h4",{children:"Revoked Updates"})}),(0,r.tZ)(a.Z,{since:e,resolution:"1h",stat:"buffer.revoked",label:"Jobs"})]})]})}n.displayName="AdminBuffer";const i=n}}]);
//# sourceMappingURL=../sourcemaps/app_views_admin_adminBuffer_tsx.93a8a30eb60022792c4e5d2c0c78cf37.js.map