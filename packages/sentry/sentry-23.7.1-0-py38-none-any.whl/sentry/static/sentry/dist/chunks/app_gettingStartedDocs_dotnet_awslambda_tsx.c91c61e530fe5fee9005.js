"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_gettingStartedDocs_dotnet_awslambda_tsx"],{"./app/gettingStartedDocs/dotnet/awslambda.tsx":(e,t,n)=>{n.r(t),n.d(t,{GettingStartedAwsLambda:()=>u,default:()=>p,steps:()=>c});var o=n("../node_modules/react/index.js"),r=n("./app/components/links/externalLink.tsx"),a=n("./app/components/onboarding/gettingStartedDoc/layout.tsx"),s=n("./app/components/onboarding/gettingStartedDoc/step.tsx"),i=n("./app/locale.tsx"),d=n("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");const l=(0,d.tZ)("p",{children:(0,i._N)("Sentry provides an integration with AWS Lambda ASP.NET Core Server through the Sentry.AspNetCore NuGet package.",{link:(0,d.tZ)(r.Z,{href:"https://www.nuget.org/packages/Sentry.AspNetCore"})})}),c=function(){let{dsn:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{type:s.WU.INSTALL,description:(0,i.t)("Add the Sentry dependency:"),configurations:[{language:"powershell",code:"Install-Package Sentry.AspNetCore -Version 3.34.0"},{language:"shell",code:"dotnet add package Sentry.AspNetCore -v 3.34.0"}],additionalInfo:(0,d.tZ)("p",{children:(0,i._N)("You can combine this integration with a logging library like [strong:log4net, NLog, or Serilog] to include both request data as well as your logs as breadcrumbs. The logging ingrations also capture events when an error is logged.",{strong:(0,d.tZ)("strong",{})})})},{type:s.WU.CONFIGURE,description:(0,d.BX)(o.Fragment,{children:[(0,d.tZ)("p",{children:(0,i._N)("All [code:ASP.NET Core] configurations are valid here. But one configuration in particular is relevant.",{code:(0,d.tZ)("code",{})})}),(0,d.tZ)("p",{children:(0,i._N)("[code:FlushOnCompletedRequest] ensures all events are flushed out. This is because the general ASP.NET Core hooks for when the process is exiting are not guaranteed to run in a serverless environment. This setting ensures that no event is lost if AWS recycles the process.",{code:(0,d.tZ)("code",{})})})]}),configurations:[{language:"csharp",code:`\npublic class LambdaEntryPoint : Amazon.Lambda.AspNetCoreServer.APIGatewayProxyFunction\n{\n    protected override void Init(IWebHostBuilder builder)\n    {\n        builder\n            // Add Sentry\n            .UseSentry(o =>\n            {\n              o.Dsn = "${e}";\n              // When configuring for the first time, to see what the SDK is doing:\n              o.Debug = true;\n              // Required in Serverless environments\n              o.FlushOnCompletedRequest = true;\n              // Set TracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n                // We recommend adjusting this value in production.\n              o.TracesSampleRate = 1.0;\n            })\n            .UseStartup<Startup>();\n    }\n}\n        `}]},{type:s.WU.VERIFY,description:(0,i.t)("You can verify your setup by throwing an exception from a function:"),configurations:[{language:"csharp",code:'\n[Route("api/[controller]")]\npublic class BadController\n{\n  [HttpGet]\n  public string Get() => throw null;\n}\n        '},{language:"shell",description:(0,i.t)("And make a request to that lambda:"),code:"curl -X GET -I https://url.of.server.aws/api/bad"}],additionalInfo:(0,d.tZ)("p",{children:(0,i._N)("Check out the [link:Sentry ASP.NET Core] documentation for the complete set of options.",{link:(0,d.tZ)(r.Z,{href:"https://docs.sentry.io/platforms/dotnet/guides/aspnetcore/"})})})}]};function u(e){let{dsn:t,...n}=e;return(0,d.tZ)(a.A,{steps:c({dsn:t}),introduction:l,...n})}u.displayName="GettingStartedAwsLambda";const p=u}}]);
//# sourceMappingURL=../sourcemaps/app_gettingStartedDocs_dotnet_awslambda_tsx.1ef2367138e7ebd6b5cb9be18374a862.js.map