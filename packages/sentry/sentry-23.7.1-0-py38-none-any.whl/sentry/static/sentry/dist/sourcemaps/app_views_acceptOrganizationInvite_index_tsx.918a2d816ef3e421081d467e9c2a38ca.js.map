{"version":3,"file":"chunks/app_views_acceptOrganizationInvite_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/narrowLayout.tsx","webpack:///./app/views/acceptOrganizationInvite/index.tsx","webpack:///./app/views/deprecatedAsyncView.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  children: React.ReactNode;\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nfunction NarrowLayout({maxWidth, showLogout, children}: Props) {\n  const api = useApi();\n\n  useEffect(() => {\n    document.body.classList.add('narrow');\n\n    return () => document.body.classList.remove('narrow');\n  }, []);\n\n  async function handleLogout() {\n    await logout(api);\n    window.location.assign('/auth/login');\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"pattern-bg\" />\n      <div className=\"container\" style={{maxWidth}}>\n        <div className=\"box box-modal\">\n          <div className=\"box-header\">\n            <a href=\"/\">\n              <IconSentry size=\"lg\" />\n            </a>\n            {showLogout && (\n              <a className=\"logout pull-right\" onClick={handleLogout}>\n                <Logout>{t('Sign out')}</Logout>\n              </a>\n            )}\n          </div>\n          <div className=\"box-content with-padding\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Logout = styled('span')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nexport default NarrowLayout;\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {urlEncode} from '@sentry/utils';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {space} from 'sentry/styles/space';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\ntype InviteDetails = {\n  existingMember: boolean;\n  hasAuthProvider: boolean;\n  needs2fa: boolean;\n  needsAuthentication: boolean;\n  needsEmailVerification: boolean;\n  orgSlug: string;\n  requireSso: boolean;\n  ssoProvider?: string;\n};\n\ntype Props = RouteComponentProps<{memberId: string; token: string; orgId?: string}, {}>;\n\ntype State = DeprecatedAsyncView['state'] & {\n  acceptError: boolean | undefined;\n  accepting: boolean | undefined;\n  inviteDetails: InviteDetails;\n};\n\nclass AcceptOrganizationInvite extends DeprecatedAsyncView<Props, State> {\n  disableErrorReport = false;\n\n  get orgSlug(): string | null {\n    const {params} = this.props;\n    if (params.orgId) {\n      return params.orgId;\n    }\n    const {customerDomain} = window.__initialData;\n    if (customerDomain?.subdomain) {\n      return customerDomain.subdomain;\n    }\n    return null;\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    const {memberId, token} = this.props.params;\n    if (this.orgSlug) {\n      return [['inviteDetails', `/accept-invite/${this.orgSlug}/${memberId}/${token}/`]];\n    }\n    return [['inviteDetails', `/accept-invite/${memberId}/${token}/`]];\n  }\n\n  getTitle() {\n    return t('Accept Organization Invite');\n  }\n\n  makeNextUrl(path: string) {\n    return `${path}?${urlEncode({next: window.location.pathname})}`;\n  }\n\n  handleLogout = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    await logout(this.api);\n    window.location.replace(this.makeNextUrl('/auth/login/'));\n  };\n\n  handleAcceptInvite = async () => {\n    const {memberId, token} = this.props.params;\n\n    this.setState({accepting: true});\n    try {\n      if (this.orgSlug) {\n        await this.api.requestPromise(\n          `/accept-invite/${this.orgSlug}/${memberId}/${token}/`,\n          {\n            method: 'POST',\n          }\n        );\n      } else {\n        await this.api.requestPromise(`/accept-invite/${memberId}/${token}/`, {\n          method: 'POST',\n        });\n      }\n      browserHistory.replace(`/${this.state.inviteDetails.orgSlug}/`);\n    } catch {\n      this.setState({acceptError: true});\n    }\n    this.setState({accepting: false});\n  };\n\n  get existingMemberAlert() {\n    const user = ConfigStore.get('user');\n\n    return (\n      <Alert type=\"warning\" data-test-id=\"existing-member\">\n        {tct(\n          'Your account ([email]) is already a member of this organization. [switchLink:Switch accounts]?',\n          {\n            email: user.email,\n            switchLink: (\n              <Link\n                to=\"\"\n                data-test-id=\"existing-member-link\"\n                onClick={this.handleLogout}\n              />\n            ),\n          }\n        )}\n      </Alert>\n    );\n  }\n\n  get authenticationActions() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        {!inviteDetails.requireSso && (\n          <p data-test-id=\"action-info-general\">\n            {t(\n              `To continue, you must either create a new account, or login to an\n              existing Sentry account.`\n            )}\n          </p>\n        )}\n\n        {inviteDetails.hasAuthProvider && (\n          <p data-test-id=\"action-info-sso\">\n            {inviteDetails.requireSso\n              ? tct(\n                  `Note that [orgSlug] has required Single Sign-On (SSO) using\n               [authProvider]. You may create an account by authenticating with\n               the organization's SSO provider.`,\n                  {\n                    orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                    authProvider: inviteDetails.ssoProvider,\n                  }\n                )\n              : tct(\n                  `Note that [orgSlug] has enabled Single Sign-On (SSO) using\n               [authProvider]. You may create an account by authenticating with\n               the organization's SSO provider.`,\n                  {\n                    orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                    authProvider: inviteDetails.ssoProvider,\n                  }\n                )}\n          </p>\n        )}\n\n        <Actions>\n          <ActionsLeft>\n            {inviteDetails.hasAuthProvider && (\n              <Button\n                data-test-id=\"sso-login\"\n                priority=\"primary\"\n                href={this.makeNextUrl(`/auth/login/${inviteDetails.orgSlug}/`)}\n              >\n                {t('Join with %s', inviteDetails.ssoProvider)}\n              </Button>\n            )}\n            {!inviteDetails.requireSso && (\n              <Button\n                data-test-id=\"create-account\"\n                priority=\"primary\"\n                href={this.makeNextUrl('/auth/register/')}\n              >\n                {t('Create a new account')}\n              </Button>\n            )}\n          </ActionsLeft>\n          {!inviteDetails.requireSso && (\n            <ExternalLink\n              href={this.makeNextUrl('/auth/login/')}\n              openInNewTab={false}\n              data-test-id=\"link-with-existing\"\n            >\n              {t('Login using an existing account')}\n            </ExternalLink>\n          )}\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get warning2fa() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        <p data-test-id=\"2fa-warning\">\n          {tct(\n            'To continue, [orgSlug] requires all members to configure two-factor authentication.',\n            {orgSlug: inviteDetails.orgSlug}\n          )}\n        </p>\n        <Actions>\n          <Button priority=\"primary\" to=\"/settings/account/security/\">\n            {t('Configure Two-Factor Auth')}\n          </Button>\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get warningEmailVerification() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        <p data-test-id=\"email-verification-warning\">\n          {tct(\n            'To continue, [orgSlug] requires all members to verify their email address.',\n            {orgSlug: inviteDetails.orgSlug}\n          )}\n        </p>\n        <Actions>\n          <Button priority=\"primary\" to=\"/settings/account/emails/\">\n            {t('Verify Email Address')}\n          </Button>\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get acceptActions() {\n    const {inviteDetails, accepting} = this.state;\n\n    return (\n      <Fragment>\n        {inviteDetails.hasAuthProvider && !inviteDetails.requireSso && (\n          <p data-test-id=\"action-info-sso\">\n            {tct(\n              `Note that [orgSlug] has enabled Single Sign-On (SSO) using\n               [authProvider]. You may join the organization by authenticating with\n               the organization's SSO provider or via your standard account authentication.`,\n              {\n                orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                authProvider: inviteDetails.ssoProvider,\n              }\n            )}\n          </p>\n        )}\n        <Actions>\n          <ActionsLeft>\n            {inviteDetails.hasAuthProvider && !inviteDetails.requireSso && (\n              <Button\n                data-test-id=\"sso-login\"\n                priority=\"primary\"\n                href={this.makeNextUrl(`/auth/login/${inviteDetails.orgSlug}/`)}\n              >\n                {t('Join with %s', inviteDetails.ssoProvider)}\n              </Button>\n            )}\n\n            <Button\n              data-test-id=\"join-organization\"\n              priority=\"primary\"\n              disabled={accepting}\n              onClick={this.handleAcceptInvite}\n            >\n              {t('Join the %s organization', inviteDetails.orgSlug)}\n            </Button>\n          </ActionsLeft>\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  renderError() {\n    return (\n      <NarrowLayout>\n        <Alert type=\"warning\">\n          {t('This organization invite link is no longer valid.')}\n        </Alert>\n      </NarrowLayout>\n    );\n  }\n\n  renderBody() {\n    const {inviteDetails, acceptError} = this.state;\n\n    return (\n      <NarrowLayout>\n        <SettingsPageHeader title={t('Accept organization invite')} />\n        {acceptError && (\n          <Alert type=\"error\">\n            {t('Failed to join this organization. Please try again')}\n          </Alert>\n        )}\n        <InviteDescription data-test-id=\"accept-invite\">\n          {tct('[orgSlug] is using Sentry to track and debug errors.', {\n            orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n          })}\n        </InviteDescription>\n        {inviteDetails.needsAuthentication\n          ? this.authenticationActions\n          : inviteDetails.existingMember\n          ? this.existingMemberAlert\n          : inviteDetails.needs2fa\n          ? this.warning2fa\n          : inviteDetails.needsEmailVerification\n          ? this.warningEmailVerification\n          : inviteDetails.requireSso\n          ? this.authenticationActions\n          : this.acceptActions}\n      </NarrowLayout>\n    );\n  }\n}\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(3)};\n`;\nconst ActionsLeft = styled('span')`\n  > a {\n    margin-right: ${space(1)};\n  }\n`;\n\nconst InviteDescription = styled('p')`\n  font-size: 1.2em;\n`;\nexport default AcceptOrganizationInvite;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["NarrowLayout","_ref","maxWidth","showLogout","children","api","useApi","useEffect","document","body","classList","add","remove","_jsxs","className","_jsx","style","href","IconSentry","size","onClick","async","logout","window","location","assign","Logout","t","displayName","_styled","target","p","theme","fontSizeLarge","AcceptOrganizationInvite","DeprecatedAsyncView","constructor","arguments","_defineProperty","e","preventDefault","this","replace","makeNextUrl","memberId","token","props","params","setState","accepting","orgSlug","requestPromise","method","browserHistory","state","inviteDetails","acceptError","orgId","customerDomain","__initialData","subdomain","getEndpoints","getTitle","path","urlEncode","next","pathname","existingMemberAlert","user","ConfigStore","get","Alert","type","tct","email","switchLink","Link","to","handleLogout","authenticationActions","Fragment","requireSso","hasAuthProvider","authProvider","ssoProvider","Actions","ActionsLeft","Button","priority","ExternalLink","openInNewTab","warning2fa","warningEmailVerification","acceptActions","disabled","handleAcceptInvite","renderError","renderBody","SettingsPageHeader","title","InviteDescription","needsAuthentication","existingMember","needs2fa","needsEmailVerification","space","name","styles","DeprecatedAsyncComponent","render","SentryDocumentTitle","renderComponent"],"sourceRoot":""}