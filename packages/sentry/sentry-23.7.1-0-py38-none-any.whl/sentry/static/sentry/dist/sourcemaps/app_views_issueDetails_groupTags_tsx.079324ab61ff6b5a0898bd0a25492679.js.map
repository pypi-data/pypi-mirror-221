{"version":3,"file":"chunks/app_views_issueDetails_groupTags_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/constants/ios-device-list.tsx","webpack:///./app/components/deviceName.tsx","webpack:///./app/views/issueDetails/groupTags.tsx"],"sourcesContent":["// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n// generated using scripts/extract-ios-device-names.ts as part of build step.\n// the purpose of the script is to extract only the iOS information that Sentry cares about\n// and discard the rest of the JSON so we do not end up bloating bundle size.\n\nconst iOSDeviceMapping: Record<string, string> = {\n  'iPod1,1': 'iPod touch',\n  'iPod2,1': 'iPod touch (2nd generation)',\n  'iPod3,1': 'iPod touch (3rd generation)',\n  'iPod4,1': 'iPod touch (4th generation)',\n  'iPod5,1': 'iPod touch (5th generation)',\n  'iPod7,1': 'iPod touch (6th generation)',\n  'iPod9,1': 'iPod touch (7th generation)',\n  'iPhone1,1': 'iPhone',\n  'iPhone1,2': 'iPhone 3G',\n  'iPhone2,1': 'iPhone 3GS',\n  'iPhone3,1': 'iPhone 4',\n  'iPhone3,2': 'iPhone 4',\n  'iPhone3,3': 'iPhone 4',\n  'iPhone4,1': 'iPhone 4S',\n  'iPhone5,1': 'iPhone 5',\n  'iPhone5,2': 'iPhone 5',\n  'iPhone5,3': 'iPhone 5c',\n  'iPhone5,4': 'iPhone 5c',\n  'iPhone6,1': 'iPhone 5s',\n  'iPhone6,2': 'iPhone 5s',\n  'iPhone8,4': 'iPhone SE (1st generation)',\n  'iPhone7,2': 'iPhone 6',\n  'iPhone7,1': 'iPhone 6 Plus',\n  'iPhone8,1': 'iPhone 6s',\n  'iPhone8,2': 'iPhone 6s Plus',\n  'iPhone9,1': 'iPhone 7',\n  'iPhone9,3': 'iPhone 7',\n  'iPhone9,2': 'iPhone 7 Plus',\n  'iPhone9,4': 'iPhone 7 Plus',\n  'iPhone10,1': 'iPhone 8',\n  'iPhone10,4': 'iPhone 8',\n  'iPhone10,2': 'iPhone 8 Plus',\n  'iPhone10,5': 'iPhone 8 Plus',\n  'iPhone10,3': 'iPhone X',\n  'iPhone10,6': 'iPhone X',\n  'iPhone11,8': 'iPhone XR',\n  'iPhone11,2': 'iPhone XS',\n  'iPhone11,6': 'iPhone XS Max',\n  'iPhone11,4': 'iPhone XS Max',\n  'iPhone12,1': 'iPhone 11',\n  'iPhone12,3': 'iPhone 11 Pro',\n  'iPhone12,5': 'iPhone 11 Pro Max',\n  'iPhone12,8': 'iPhone SE (2nd generation)',\n  'iPhone13,1': 'iPhone 12 mini',\n  'iPhone13,2': 'iPhone 12',\n  'iPhone13,3': 'iPhone 12 Pro',\n  'iPhone13,4': 'iPhone 12 Pro Max',\n  'iPhone14,4': 'iPhone 13 mini',\n  'iPhone14,5': 'iPhone 13',\n  'iPhone14,2': 'iPhone 13 Pro',\n  'iPhone14,3': 'iPhone 13 Pro Max',\n  'iPhone14,6': 'iPhone SE (3rd generation)',\n  'iPhone14,7': 'iPhone 14',\n  'iPhone14,8': 'iPhone 14 Plus',\n  'iPhone15,2': 'iPhone 14 Pro',\n  'iPhone15,3': 'iPhone 14 Pro Max',\n  'iPad6,7': 'iPad Pro (12.9-inch)',\n  'iPad6,8': 'iPad Pro (12.9-inch)',\n  'iPad6,3': 'iPad Pro (9.7-inch)',\n  'iPad6,4': 'iPad Pro (9.7-inch)',\n  'iPad7,1': 'iPad Pro (12.9-inch, 2nd generation)',\n  'iPad7,2': 'iPad Pro (12.9-inch, 2nd generation)',\n  'iPad7,3': 'iPad Pro (10.5-inch)',\n  'iPad7,4': 'iPad Pro (10.5-inch)',\n  'iPad8,1': 'iPad Pro (11-inch)',\n  'iPad8,2': 'iPad Pro (11-inch)',\n  'iPad8,3': 'iPad Pro (11-inch)',\n  'iPad8,4': 'iPad Pro (11-inch)',\n  'iPad8,5': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,6': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,7': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,8': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,9': 'iPad Pro (11-inch) (2nd generation)',\n  'iPad8,10': 'iPad Pro (11-inch) (2nd generation)',\n  'iPad8,11': 'iPad Pro (12.9-inch) (4th generation)',\n  'iPad8,12': 'iPad Pro (12.9-inch) (4th generation)',\n  'iPad13,4': 'iPad Pro (11-inch) (3rd generation)',\n  'iPad13,5': 'iPad Pro (11-inch) (3rd generation)',\n  'iPad13,6': 'iPad Pro (11-inch) (3rd generation)',\n  'iPad13,7': 'iPad Pro (11-inch) (3rd generation)',\n  'iPad13,8': 'iPad Pro (12.9-inch) (5th generation)',\n  'iPad13,9': 'iPad Pro (12.9-inch) (5th generation)',\n  'iPad13,10': 'iPad Pro (12.9-inch) (5th generation)',\n  'iPad13,11': 'iPad Pro (12.9-inch) (5th generation)',\n  'iPad2,5': 'iPad mini',\n  'iPad2,6': 'iPad mini',\n  'iPad2,7': 'iPad mini',\n  'iPad4,4': 'iPad mini 2',\n  'iPad4,5': 'iPad mini 2',\n  'iPad4,6': 'iPad mini 2',\n  'iPad4,7': 'iPad mini 3',\n  'iPad4,8': 'iPad mini 3',\n  'iPad4,9': 'iPad mini 3',\n  'iPad5,1': 'iPad mini 4',\n  'iPad5,2': 'iPad mini 4',\n  'iPad11,1': 'iPad mini (5th generation)',\n  'iPad11,2': 'iPad mini (5th generation)',\n  'iPad14,1': 'iPad mini (6th generation)',\n  'iPad14,2': 'iPad mini (6th generation)',\n  'iPad4,1': 'iPad Air',\n  'iPad4,2': 'iPad Air',\n  'iPad4,3': 'iPad Air',\n  'iPad5,3': 'iPad Air 2',\n  'iPad5,4': 'iPad Air 2',\n  'iPad11,3': 'iPad Air (3rd generation)',\n  'iPad11,4': 'iPad Air (3rd generation)',\n  'iPad13,1': 'iPad Air (4th generation)',\n  'iPad13,2': 'iPad Air (4th generation)',\n  'iPad13,16': 'iPad Air (5th generation)',\n  'iPad13,17': 'iPad Air (5th generation)',\n  'iPad1,1': 'iPad',\n  'iPad2,1': 'iPad 2',\n  'iPad2,2': 'iPad 2',\n  'iPad2,3': 'iPad 2',\n  'iPad2,4': 'iPad 2',\n  'iPad3,1': 'iPad (3rd generation)',\n  'iPad3,2': 'iPad (3rd generation)',\n  'iPad3,3': 'iPad (3rd generation)',\n  'iPad3,4': 'iPad (4th generation)',\n  'iPad3,5': 'iPad (4th generation)',\n  'iPad3,6': 'iPad (4th generation)',\n  'iPad6,11': 'iPad (5th generation)',\n  'iPad6,12': 'iPad (5th generation)',\n  'iPad7,5': 'iPad (6th generation)',\n  'iPad7,6': 'iPad (6th generation)',\n  'iPad7,11': 'iPad (7th generation)',\n  'iPad7,12': 'iPad (7th generation)',\n  'iPad11,6': 'iPad (8th generation)',\n  'iPad11,7': 'iPad (8th generation)',\n  'iPad12,1': 'iPad (9th generation)',\n  'iPad12,2': 'iPad (9th generation)',\n  'AudioAccessory1,1': 'HomePod',\n  'AudioAccessory1,2': 'HomePod',\n  'AudioAccessory5,1': 'HomePod mini',\n  'Watch1,1': 'Apple Watch (1st generation)',\n  'Watch1,2': 'Apple Watch (1st generation)',\n  'Watch2,6': 'Apple Watch Series 1',\n  'Watch2,7': 'Apple Watch Series 1',\n  'Watch2,3': 'Apple Watch Series 2',\n  'Watch2,4': 'Apple Watch Series 2',\n  'Watch3,1': 'Apple Watch Series 3',\n  'Watch3,2': 'Apple Watch Series 3',\n  'Watch3,3': 'Apple Watch Series 3',\n  'Watch3,4': 'Apple Watch Series 3',\n  'Watch4,1': 'Apple Watch Series 4',\n  'Watch4,2': 'Apple Watch Series 4',\n  'Watch4,3': 'Apple Watch Series 4',\n  'Watch4,4': 'Apple Watch Series 4',\n  'Watch5,1': 'Apple Watch Series 5',\n  'Watch5,2': 'Apple Watch Series 5',\n  'Watch5,3': 'Apple Watch Series 5',\n  'Watch5,4': 'Apple Watch Series 5',\n  'Watch5,9': 'Apple Watch SE',\n  'Watch5,10': 'Apple Watch SE',\n  'Watch5,11': 'Apple Watch SE',\n  'Watch5,12': 'Apple Watch SE',\n  'Watch6,1': 'Apple Watch Series 6',\n  'Watch6,2': 'Apple Watch Series 6',\n  'Watch6,3': 'Apple Watch Series 6',\n  'Watch6,4': 'Apple Watch Series 6',\n  'Watch6,6': 'Apple Watch Series 7',\n  'Watch6,7': 'Apple Watch Series 7',\n  'Watch6,8': 'Apple Watch Series 7',\n  'Watch6,9': 'Apple Watch Series 7',\n  'Watch6,10': 'Apple Watch SE (2nd generation)',\n  'Watch6,11': 'Apple Watch SE (2nd generation)',\n  'Watch6,12': 'Apple Watch SE (2nd generation)',\n  'Watch6,13': 'Apple Watch SE (2nd generation)',\n  'Watch6,14': 'Apple Watch Series 8',\n  'Watch6,15': 'Apple Watch Series 8',\n  'Watch6,16': 'Apple Watch Series 8',\n  'Watch6,17': 'Apple Watch Series 8',\n  'Watch6,18': 'Apple Watch Ultra',\n  'AppleTV1,1': 'Apple TV (1st generation)',\n  'AppleTV2,1': 'Apple TV (2nd generation)',\n  'AppleTV3,1': 'Apple TV (3rd generation)',\n  'AppleTV3,2': 'Apple TV (3rd generation)',\n  'AppleTV5,3': 'Apple TV (4th generation)',\n  'AppleTV6,2': 'Apple TV 4K',\n  'AppleTV11,1': 'Apple TV 4K (2nd generation)',\n  'AirTag1,1': 'AirTag',\n  'AirPods1,1': 'AirPods (1st generation)',\n  'AirPods2,1,AirPods2,1': 'AirPods (2nd generation)',\n  'AirPods1,3,Audio2,1': 'AirPods (3rd generation)',\n  'AirPods2,2,AirPodsPro1,1,iProd8,1': 'AirPods Pro',\n  'AirPodsPro1,2': 'AirPods Pro (2nd generation)',\n  'AirPodsMax1,1,iProd8,6': 'AirPods Max',\n};\n\nexport {iOSDeviceMapping};\n","import {useMemo} from 'react';\n\nimport {iOSDeviceMapping} from 'sentry/constants/ios-device-list';\n\nexport function deviceNameMapper(model: string | undefined): string | null {\n  // If we have no model, render nothing\n  if (typeof model !== 'string') {\n    return null;\n  }\n\n  // If module has not loaded yet, render the unparsed model\n  if (module === null) {\n    return model;\n  }\n\n  const [identifier, ...rest] = model.split(' ');\n\n  const modelName = iOSDeviceMapping[identifier];\n  return modelName === undefined ? model : `${modelName} ${rest.join(' ')}`;\n}\n\ninterface DeviceNameProps {\n  value: string;\n  children?: (name: string) => React.ReactNode;\n}\n\n/**\n * This is used to map iOS Device Names to model name.\n * This asynchronously loads the ios-device-list library because of its size\n */\nfunction DeviceName({value, children}: DeviceNameProps): React.ReactElement | null {\n  const deviceName = useMemo(() => deviceNameMapper(value), [value]);\n\n  return deviceName ? (\n    <span data-test-id=\"loaded-device-name\">\n      {children ? children(deviceName) : deviceName}\n    </span>\n  ) : null;\n}\n\nexport {DeviceName};\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport {Alert} from 'sentry/components/alert';\nimport Count from 'sentry/components/count';\nimport DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport {DeviceName} from 'sentry/components/deviceName';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport {extractSelectionParameters} from 'sentry/components/organizations/pageFilters/utils';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport Version from 'sentry/components/version';\nimport {tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Group, Organization, TagWithTopValues} from 'sentry/types';\nimport {percent} from 'sentry/utils';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = DeprecatedAsyncComponent['props'] & {\n  baseUrl: string;\n  environments: string[];\n  group: Group;\n  organization: Organization;\n} & RouteComponentProps<{}, {}>;\n\ntype State = DeprecatedAsyncComponent['state'] & {\n  tagList: null | TagWithTopValues[];\n};\n\nclass GroupTags extends DeprecatedAsyncComponent<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      tagList: null,\n    };\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncComponent['getEndpoints']> {\n    const {group, environments} = this.props;\n    return [\n      [\n        'tagList',\n        `/issues/${group.id}/tags/`,\n        {\n          query: {environment: environments},\n        },\n      ],\n    ];\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!isEqual(prevProps.environments, this.props.environments)) {\n      this.remountComponent();\n    }\n  }\n\n  renderTags() {\n    const {baseUrl, location} = this.props;\n    const {tagList} = this.state;\n\n    const alphabeticalTags = (tagList ?? []).sort((a, b) => a.key.localeCompare(b.key));\n\n    return (\n      <Container>\n        {alphabeticalTags.map((tag, tagIdx) => (\n          <TagItem key={tagIdx}>\n            <StyledPanel>\n              <PanelBody withPadding>\n                <TagHeading>\n                  <Link\n                    to={{\n                      pathname: `${baseUrl}tags/${tag.key}/`,\n                      query: extractSelectionParameters(location.query),\n                    }}\n                  >\n                    <span data-test-id=\"tag-title\">{tag.key}</span>\n                  </Link>\n                </TagHeading>\n                <UnstyledUnorderedList>\n                  {tag.topValues.map((tagValue, tagValueIdx) => (\n                    <li key={tagValueIdx} data-test-id={tag.key}>\n                      <TagBarGlobalSelectionLink\n                        to={{\n                          pathname: `${baseUrl}events/`,\n                          query: {\n                            query: tagValue.query || `${tag.key}:\"${tagValue.value}\"`,\n                          },\n                        }}\n                      >\n                        <TagBarBackground\n                          widthPercent={percent(tagValue.count, tag.totalValues) + '%'}\n                        />\n                        <TagBarLabel>\n                          {tag.key === 'release' ? (\n                            <Version version={tagValue.name} anchor={false} />\n                          ) : (\n                            <DeviceName value={tagValue.name} />\n                          )}\n                        </TagBarLabel>\n                        <TagBarCount>\n                          <Count value={tagValue.count} />\n                        </TagBarCount>\n                      </TagBarGlobalSelectionLink>\n                    </li>\n                  ))}\n                </UnstyledUnorderedList>\n              </PanelBody>\n            </StyledPanel>\n          </TagItem>\n        ))}\n      </Container>\n    );\n  }\n\n  renderBody() {\n    return (\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          <FilterSection>\n            <EnvironmentPageFilter />\n          </FilterSection>\n          <Alert type=\"info\">\n            {tct(\n              'Tags are automatically indexed for searching and breakdown charts. Learn how to [link: add custom tags to issues]',\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/enriching-events/tags\" />\n                ),\n              }\n            )}\n          </Alert>\n          {this.renderTags()}\n        </Layout.Main>\n      </Layout.Body>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n`;\n\nconst FilterSection = styled('div')`\n  width: max-content;\n  max-width: 100%;\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledPanel = styled(Panel)`\n  height: 100%;\n`;\n\nconst TagHeading = styled('h5')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  margin-bottom: 0;\n  color: ${p => p.theme.linkColor};\n`;\n\nconst UnstyledUnorderedList = styled('ul')`\n  list-style: none;\n  padding-left: 0;\n  margin-bottom: 0;\n`;\n\nconst TagItem = styled('div')`\n  padding: 0;\n`;\n\nconst TagBarBackground = styled('div')<{widthPercent: string}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  background: ${p => p.theme.tagBar};\n  border-radius: ${p => p.theme.borderRadius};\n  width: ${p => p.widthPercent};\n`;\n\nconst TagBarGlobalSelectionLink = styled(GlobalSelectionLink)`\n  position: relative;\n  display: flex;\n  line-height: 2.2;\n  color: ${p => p.theme.textColor};\n  margin-bottom: ${space(0.5)};\n  padding: 0 ${space(1)};\n  background: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  overflow: hidden;\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n    text-decoration: underline;\n    ${TagBarBackground} {\n      background: ${p => p.theme.tagBarHover};\n    }\n  }\n`;\n\nconst TagBarLabel = styled('div')`\n  display: flex;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n  position: relative;\n  flex-grow: 1;\n  ${p => p.theme.overflowEllipsis}\n`;\n\nconst TagBarCount = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  position: relative;\n  padding-left: ${space(2)};\n  padding-right: ${space(1)};\n  font-variant-numeric: tabular-nums;\n`;\n\nexport default withOrganization(GroupTags);\n"],"names":["iOSDeviceMapping","DeviceName","_ref","value","children","deviceName","useMemo","model","module","identifier","rest","split","modelName","undefined","join","deviceNameMapper","_jsx","GroupTags","DeprecatedAsyncComponent","getDefaultState","super","tagList","getEndpoints","group","environments","this","props","id","query","environment","componentDidUpdate","prevProps","isEqual","remountComponent","renderTags","baseUrl","location","state","alphabeticalTags","sort","a","b","key","localeCompare","Container","map","tag","tagIdx","TagItem","StyledPanel","_jsxs","PanelBody","withPadding","TagHeading","Link","to","pathname","extractSelectionParameters","UnstyledUnorderedList","topValues","tagValue","tagValueIdx","TagBarGlobalSelectionLink","TagBarBackground","widthPercent","percent","count","totalValues","TagBarLabel","Version","version","name","anchor","TagBarCount","Count","renderBody","Layout","fullWidth","FilterSection","EnvironmentPageFilter","Alert","type","tct","link","ExternalLink","href","_styled","target","space","Panel","styles","p","theme","fontSizeLarge","linkColor","tagBar","borderRadius","GlobalSelectionLink","textColor","backgroundSecondary","tagBarHover","fontSizeMedium","overflowEllipsis","withOrganization"],"sourceRoot":""}