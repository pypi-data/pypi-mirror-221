{"version":3,"file":"chunks/app_views_organizationCreate_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/forms/apiForm.tsx","webpack:///./app/components/narrowLayout.tsx","webpack:///./app/components/forms/fields/checkboxField.tsx","webpack:///./app/views/organizationCreate/index.tsx"],"sourcesContent":["import {useCallback} from 'react';\n\nimport {addLoadingMessage, clearIndicators} from 'sentry/actionCreators/indicator';\nimport Form, {FormProps} from 'sentry/components/forms/form';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = FormProps & {\n  apiEndpoint: string;\n  apiMethod: string;\n  onSubmit?: (data: Record<string, any>) => any | void;\n};\n\nfunction ApiForm({onSubmit, apiMethod, apiEndpoint, ...otherProps}: Props) {\n  const api = useApi();\n\n  const handleSubmit = useCallback(\n    (\n      data: Record<string, any>,\n      onSuccess: (response: Record<string, any>) => void,\n      onError: (error: any) => void\n    ) => {\n      const transformed = onSubmit?.(data);\n      addLoadingMessage(t('Saving changes\\u2026'));\n      api.request(apiEndpoint, {\n        method: apiMethod,\n        data: transformed ?? data,\n        success: response => {\n          clearIndicators();\n          onSuccess(response);\n        },\n        error: error => {\n          clearIndicators();\n          onError(error);\n        },\n      });\n    },\n    [api, onSubmit, apiMethod, apiEndpoint]\n  );\n\n  return <Form onSubmit={handleSubmit} {...otherProps} />;\n}\n\nexport default ApiForm;\n","import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  children: React.ReactNode;\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nfunction NarrowLayout({maxWidth, showLogout, children}: Props) {\n  const api = useApi();\n\n  useEffect(() => {\n    document.body.classList.add('narrow');\n\n    return () => document.body.classList.remove('narrow');\n  }, []);\n\n  async function handleLogout() {\n    await logout(api);\n    window.location.assign('/auth/login');\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"pattern-bg\" />\n      <div className=\"container\" style={{maxWidth}}>\n        <div className=\"box box-modal\">\n          <div className=\"box-header\">\n            <a href=\"/\">\n              <IconSentry size=\"lg\" />\n            </a>\n            {showLogout && (\n              <a className=\"logout pull-right\" onClick={handleLogout}>\n                <Logout>{t('Sign out')}</Logout>\n              </a>\n            )}\n          </div>\n          <div className=\"box-content with-padding\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Logout = styled('span')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nexport default NarrowLayout;\n","import styled from '@emotion/styled';\n\nimport Checkbox from 'sentry/components/checkbox';\nimport {space} from 'sentry/styles/space';\n\nimport FieldDescription from '../fieldGroup/fieldDescription';\nimport FieldHelp from '../fieldGroup/fieldHelp';\nimport FieldLabel from '../fieldGroup/fieldLabel';\nimport FieldRequiredBadge from '../fieldGroup/fieldRequiredBadge';\nimport FormField from '../formField';\n\ntype FormFieldProps = Omit<\n  React.ComponentProps<typeof FormField>,\n  'children' | 'help' | 'disabled' | 'required'\n>;\n\ntype Props = {\n  /**\n   * The input name\n   */\n  name: string;\n  /**\n   * Is the field disabled?\n   */\n  disabled?: boolean;\n  /**\n   * Help or description of the field\n   */\n  help?: React.ReactNode | React.ReactElement | ((props: Props) => React.ReactNode);\n  /**\n   * User visible field label\n   */\n  label?: React.ReactNode;\n  /**\n   * Is the field required?\n   */\n  required?: boolean;\n} & FormFieldProps;\n\nfunction CheckboxField(props: Props) {\n  const {name, disabled, stacked, required, label, help} = props;\n\n  const helpElement = typeof help === 'function' ? help(props) : help;\n  const ariaLabel = typeof label === 'string' ? label : undefined;\n\n  return (\n    <FormField name={name} inline={false} stacked={stacked}>\n      {({onChange, value, id}) => {\n        function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n          const newValue = e.target.checked;\n          onChange?.(newValue, e);\n        }\n\n        return (\n          <FieldLayout>\n            <ControlWrapper>\n              <Checkbox\n                id={id}\n                name={name}\n                disabled={disabled}\n                checked={value === true}\n                onChange={handleChange}\n              />\n            </ControlWrapper>\n            <FieldDescription htmlFor={id} aria-label={ariaLabel}>\n              {label && (\n                <FieldLabel disabled={disabled}>\n                  <span>\n                    {label}\n                    {required && <FieldRequiredBadge />}\n                  </span>\n                </FieldLabel>\n              )}\n              {helpElement && (\n                <FieldHelp stacked={stacked} inline>\n                  {helpElement}\n                </FieldHelp>\n              )}\n            </FieldDescription>\n          </FieldLayout>\n        );\n      }}\n    </FormField>\n  );\n}\n\nconst ControlWrapper = styled('span')`\n  align-self: flex-start;\n  display: flex;\n  margin-right: ${space(1)};\n`;\n\nconst FieldLayout = styled('div')`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport default CheckboxField;\n","import {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport ApiForm from 'sentry/components/forms/apiForm';\nimport CheckboxField from 'sentry/components/forms/fields/checkboxField';\nimport TextField from 'sentry/components/forms/fields/textField';\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {OrganizationSummary} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\nfunction OrganizationCreate() {\n  const termsUrl = ConfigStore.get('termsUrl');\n  const privacyUrl = ConfigStore.get('privacyUrl');\n\n  return (\n    <SentryDocumentTitle title={t('Create Organization')}>\n      <NarrowLayout showLogout>\n        <h3>{t('Create a New Organization')}</h3>\n\n        <p>\n          {t(\n            \"Organizations represent the top level in your hierarchy. You'll be able to bundle a collection of teams within an organization as well as give organization-wide permissions to users.\"\n          )}\n        </p>\n\n        <ApiForm\n          initialData={{defaultTeam: true}}\n          submitLabel={t('Create Organization')}\n          apiEndpoint=\"/organizations/\"\n          apiMethod=\"POST\"\n          onSubmitSuccess={(createdOrg: OrganizationSummary) => {\n            const hasCustomerDomain = createdOrg?.features.includes('customer-domains');\n            let nextUrl = normalizeUrl(\n              `/organizations/${createdOrg.slug}/projects/new/`,\n              {forceCustomerDomain: hasCustomerDomain}\n            );\n            if (hasCustomerDomain) {\n              nextUrl = `${createdOrg.links.organizationUrl}${nextUrl}`;\n            }\n            // redirect to project creation *(BYPASS REACT ROUTER AND FORCE PAGE REFRESH TO GRAB CSRF TOKEN)*\n            // browserHistory.pushState(null, `/organizations/${data.slug}/projects/new/`);\n            window.location.assign(nextUrl);\n          }}\n          onSubmitError={error => {\n            addErrorMessage(\n              error.responseJSON?.detail ?? t('Unable to create organization.')\n            );\n          }}\n          requireChanges\n        >\n          <TextField\n            id=\"organization-name\"\n            name=\"name\"\n            label={t('Organization Name')}\n            placeholder={t('e.g. My Company')}\n            inline={false}\n            flexibleControlStateSize\n            stacked\n            required\n          />\n\n          {termsUrl && privacyUrl && (\n            <CheckboxField\n              name=\"agreeTerms\"\n              label={tct(\n                'I agree to the [termsLink:Terms of Service] and the [privacyLink:Privacy Policy]',\n                {\n                  termsLink: <a href={termsUrl} />,\n                  privacyLink: <a href={privacyUrl} />,\n                }\n              )}\n              inline={false}\n              stacked\n              required\n            />\n          )}\n        </ApiForm>\n      </NarrowLayout>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default OrganizationCreate;\n"],"names":["ApiForm","_ref","onSubmit","apiMethod","apiEndpoint","otherProps","api","useApi","handleSubmit","useCallback","data","onSuccess","onError","transformed","addLoadingMessage","t","request","method","success","response","clearIndicators","error","_jsx","Form","displayName","NarrowLayout","maxWidth","showLogout","children","useEffect","document","body","classList","add","remove","_jsxs","className","style","href","IconSentry","size","onClick","async","logout","window","location","assign","Logout","_styled","target","p","theme","fontSizeLarge","CheckboxField","props","name","disabled","stacked","required","label","help","helpElement","ariaLabel","undefined","FormField","inline","onChange","value","id","FieldLayout","ControlWrapper","Checkbox","checked","e","newValue","FieldDescription","htmlFor","FieldLabel","FieldRequiredBadge","FieldHelp","space","styles","OrganizationCreate","termsUrl","ConfigStore","get","privacyUrl","SentryDocumentTitle","title","initialData","defaultTeam","submitLabel","onSubmitSuccess","createdOrg","hasCustomerDomain","features","includes","nextUrl","normalizeUrl","slug","forceCustomerDomain","links","organizationUrl","onSubmitError","addErrorMessage","responseJSON","detail","requireChanges","TextField","placeholder","flexibleControlStateSize","tct","termsLink","privacyLink"],"sourceRoot":""}