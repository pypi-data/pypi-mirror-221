{"version":3,"file":"chunks/app_components_panels_panelHeader_tsx-app_views_deprecatedAsyncView_tsx-app_views_settings_co-31d64d.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/components/teamSelect/utils.tsx","webpack:///./app/views/settings/organizationTeams/utils.tsx"],"sourcesContent":["import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {openCreateTeamModal} from 'sentry/actionCreators/modal';\nimport {hasEveryAccess} from 'sentry/components/acl/access';\nimport DropdownAutoComplete from 'sentry/components/dropdownAutoComplete';\nimport {Item} from 'sentry/components/dropdownAutoComplete/types';\nimport DropdownButton from 'sentry/components/dropdownButton';\nimport {TeamBadge} from 'sentry/components/idBadge/teamBadge';\nimport Link from 'sentry/components/links/link';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project, Team} from 'sentry/types';\nimport {getButtonHelpText} from 'sentry/views/settings/organizationTeams/utils';\n\nexport type TeamSelectProps = {\n  /**\n   * Should button be disabled\n   */\n  disabled: boolean;\n  /**\n   * callback when teams are added\n   */\n  onAddTeam: (teamSlug: string) => void;\n  /**\n   * Callback when teams are removed\n   */\n  onRemoveTeam: (teamSlug: string) => void;\n  organization: Organization;\n  /**\n   * Used to determine whether we should show a loading state while waiting for teams\n   */\n  loadingTeams?: boolean;\n  /**\n   * Callback when teams are created\n   */\n  onCreateTeam?: (team: Team) => void;\n};\n\nexport function DropdownAddTeam({\n  disabled,\n  isLoadingTeams,\n  isAddingTeamToMember = false,\n  isAddingTeamToProject = false,\n  onSearch,\n  onSelect,\n  onCreateTeam,\n  organization,\n  selectedTeams,\n  teams,\n  project,\n}: {\n  disabled: boolean;\n  isLoadingTeams: boolean;\n  onSearch: (teamSlug: string) => void;\n  onSelect: (teamSlug: string) => void;\n  organization: Organization;\n  selectedTeams: string[];\n  teams: Team[];\n  canCreateTeam?: boolean;\n  isAddingTeamToMember?: boolean;\n  isAddingTeamToProject?: boolean;\n  onCreateTeam?: (team: Team) => void;\n  project?: Project;\n}) {\n  const dropdownItems = teams\n    .filter(team => !selectedTeams.some(slug => slug === team.slug))\n    .map((team, index) =>\n      renderDropdownOption({\n        isAddingTeamToMember,\n        isAddingTeamToProject,\n        organization,\n        team,\n        index,\n        disabled,\n      })\n    );\n\n  const onDropdownChange = debounce<(e: React.ChangeEvent<HTMLInputElement>) => void>(\n    e => onSearch(e.target.value),\n    DEFAULT_DEBOUNCE_DURATION\n  );\n\n  return (\n    <DropdownAutoComplete\n      items={dropdownItems}\n      busyItemsStillVisible={isLoadingTeams}\n      onChange={onDropdownChange}\n      onSelect={(option: Item) => onSelect(option.value)}\n      emptyMessage={t('No teams')}\n      menuHeader={renderDropdownHeader({\n        organization,\n        project,\n        onCreateTeam,\n      })}\n      disabled={disabled}\n      alignMenu=\"right\"\n    >\n      {({isOpen}) => (\n        <DropdownButton\n          aria-label={t('Add Team')}\n          isOpen={isOpen}\n          size=\"xs\"\n          disabled={disabled}\n        >\n          {t('Add Team')}\n        </DropdownButton>\n      )}\n    </DropdownAutoComplete>\n  );\n}\n\nfunction renderDropdownOption({\n  disabled,\n  index,\n  isAddingTeamToMember,\n  organization,\n  team,\n}: {\n  disabled: boolean;\n  index: number;\n  isAddingTeamToMember: boolean;\n  isAddingTeamToProject: boolean;\n  organization: Organization;\n  team: Team;\n}) {\n  const hasOrgAdmin = organization.access.includes('org:admin');\n  const isIdpProvisioned = isAddingTeamToMember && team.flags['idp:provisioned'];\n  const isPermissionGroup = isAddingTeamToMember && team.orgRole !== null && !hasOrgAdmin;\n  const buttonHelpText = getButtonHelpText(isIdpProvisioned, isPermissionGroup);\n\n  return {\n    index,\n    value: team.slug,\n    searchKey: team.slug,\n    label: () => {\n      if (isIdpProvisioned || isPermissionGroup) {\n        return (\n          <Tooltip title={buttonHelpText}>\n            <DropdownTeamBadgeDisabled avatarSize={18} team={team} />\n          </Tooltip>\n        );\n      }\n\n      return <DropdownTeamBadge avatarSize={18} team={team} />;\n    },\n    disabled: disabled || isIdpProvisioned || isPermissionGroup,\n  };\n}\n\nfunction renderDropdownHeader({\n  organization,\n  project,\n  onCreateTeam,\n}: {\n  organization: Organization;\n  onCreateTeam?: (team) => void;\n  project?: Project;\n}) {\n  const canCreateTeam = hasEveryAccess(['org:write'], {organization, project});\n\n  return (\n    <StyledTeamsLabel>\n      <span>{t('Teams')}</span>\n\n      <Tooltip\n        disabled={canCreateTeam}\n        title={t('You must be a Org Owner/Manager to create teams')}\n        position=\"top\"\n      >\n        <StyledCreateTeamLink\n          to=\"#create-team\"\n          disabled={!canCreateTeam}\n          onClick={(e: React.MouseEvent) => {\n            e.stopPropagation();\n            e.preventDefault();\n\n            openCreateTeamModal({\n              organization,\n              project,\n              onClose: onCreateTeam,\n            });\n          }}\n        >\n          {t('Create Team')}\n        </StyledCreateTeamLink>\n      </Tooltip>\n    </StyledTeamsLabel>\n  );\n}\n\nconst DropdownTeamBadge = styled(TeamBadge)`\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-transform: none;\n`;\n\nconst DropdownTeamBadgeDisabled = styled(TeamBadge)`\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-transform: none;\n  filter: grayscale(1);\n`;\n\nconst StyledTeamsLabel = styled('div')`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-size: 0.875em;\n  padding: ${space(0.5)} 0px;\n  text-transform: uppercase;\n`;\n\nconst StyledCreateTeamLink = styled(Link)`\n  float: right;\n  text-transform: none;\n  ${p =>\n    p.disabled &&\n    css`\n      cursor: not-allowed;\n      color: ${p.theme.gray300};\n      opacity: 0.6;\n    `};\n`;\n","import {t} from 'sentry/locale';\n\nexport function getButtonHelpText(\n  isIdpProvisioned: boolean = false,\n  isPermissionGroup: boolean = false\n) {\n  if (isIdpProvisioned) {\n    return t(\n      \"Membership to this team is managed through your organization's identity provider.\"\n    );\n  }\n\n  if (isPermissionGroup) {\n    return t('Membership to a team with an organization role is managed by org owners.');\n  }\n\n  return undefined;\n}\n"],"names":["getPadding","_ref","disablePadding","hasButtons","css","space","_styled","target","p","lightText","theme","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","DropdownAddTeam","disabled","isLoadingTeams","isAddingTeamToMember","isAddingTeamToProject","onSearch","onSelect","onCreateTeam","organization","selectedTeams","teams","project","dropdownItems","filter","team","some","slug","map","index","_ref3","hasOrgAdmin","access","includes","isIdpProvisioned","flags","isPermissionGroup","orgRole","buttonHelpText","getButtonHelpText","value","searchKey","label","Tooltip","DropdownTeamBadgeDisabled","avatarSize","DropdownTeamBadge","renderDropdownOption","onDropdownChange","debounce","e","DEFAULT_DEBOUNCE_DURATION","DropdownAutoComplete","items","busyItemsStillVisible","onChange","option","emptyMessage","t","menuHeader","renderDropdownHeader","alignMenu","_ref2","isOpen","DropdownButton","size","_ref4","canCreateTeam","hasEveryAccess","_jsxs","StyledTeamsLabel","position","StyledCreateTeamLink","to","onClick","stopPropagation","preventDefault","openCreateTeamModal","onClose","TeamBadge","fontSizeMedium","Link","arguments","length","undefined"],"sourceRoot":""}