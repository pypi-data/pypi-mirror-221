{"version":3,"file":"chunks/app_components_panels_panelHeader_tsx-app_components_repositoryRow_tsx-app_views_deprecatedAs-f94885.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/integrations.tsx","webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/components/repositoryEditForm.tsx","webpack:///./app/components/repositoryRow.tsx","webpack:///./app/views/deprecatedAsyncView.tsx"],"sourcesContent":["import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {t, tct} from 'sentry/locale';\nimport {Integration, Repository} from 'sentry/types';\n\nconst api = new Client();\n\n/**\n * Removes an integration from a project.\n *\n * @param {String} orgId Organization Slug\n * @param {String} projectId Project Slug\n * @param {Object} integration The organization integration to remove\n */\nexport function removeIntegrationFromProject(\n  orgId: string,\n  projectId: string,\n  integration: Integration\n) {\n  const endpoint = `/projects/${orgId}/${projectId}/integrations/${integration.id}/`;\n  addLoadingMessage();\n\n  return api.requestPromise(endpoint, {method: 'DELETE'}).then(\n    () => {\n      addSuccessMessage(t('Disabled %s for %s', integration.name, projectId));\n    },\n    () => {\n      addErrorMessage(t('Failed to disable %s for %s', integration.name, projectId));\n    }\n  );\n}\n\n/**\n * Add an integration to a project\n *\n * @param {String} orgId Organization Slug\n * @param {String} projectId Project Slug\n * @param {Object} integration The organization integration to add\n */\nexport function addIntegrationToProject(\n  orgId: string,\n  projectId: string,\n  integration: Integration\n) {\n  const endpoint = `/projects/${orgId}/${projectId}/integrations/${integration.id}/`;\n  addLoadingMessage();\n\n  return api.requestPromise(endpoint, {method: 'PUT'}).then(\n    () => {\n      addSuccessMessage(t('Enabled %s for %s', integration.name, projectId));\n    },\n    () => {\n      addErrorMessage(t('Failed to enabled %s for %s', integration.name, projectId));\n    }\n  );\n}\n\n/**\n * Delete a respository\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} repositoryId Repository ID\n */\nexport function deleteRepository(client: Client, orgId: string, repositoryId: string) {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/repos/${repositoryId}/`,\n    {\n      method: 'DELETE',\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t('Unable to delete repository.'))\n  );\n  return promise;\n}\n\n/**\n * Cancel the deletion of a respository\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} repositoryId Repository ID\n */\nexport function cancelDeleteRepository(\n  client: Client,\n  orgId: string,\n  repositoryId: string\n) {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/repos/${repositoryId}/`,\n    {\n      method: 'PUT',\n      data: {status: 'visible'},\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t('Unable to cancel deletion.'))\n  );\n  return promise;\n}\n\n/**\n * Delete a repository by setting its status to hidden.\n *\n * @param client ApiClient\n * @param orgId Organization Slug\n * @param repositoryId Repository ID\n */\nexport function hideRepository(client: Client, orgId: string, repositoryId: string) {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/repos/${repositoryId}/`,\n    {\n      method: 'PUT',\n      data: {status: 'hidden'},\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t('Unable to delete repository.'))\n  );\n  return promise;\n}\n\nfunction applyRepositoryAddComplete(promise: Promise<Repository>) {\n  promise.then(\n    (repo: Repository) => {\n      const message = tct('[repo] has been successfully added.', {\n        repo: repo.name,\n      });\n      addSuccessMessage(message);\n    },\n    errorData => {\n      const text = errorData.responseJSON.errors\n        ? errorData.responseJSON.errors.__all__\n        : t('Unable to add repository.');\n      addErrorMessage(text);\n    }\n  );\n  return promise;\n}\n\n/**\n * Migrate a repository to a new integration.\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} repositoryId Repository ID\n * @param {Object} integration Integration provider data.\n */\nexport function migrateRepository(\n  client: Client,\n  orgId: string,\n  repositoryId: string,\n  integration: Integration\n) {\n  const data = {integrationId: integration.id};\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/repos/${repositoryId}/`,\n    {\n      data,\n      method: 'PUT',\n    }\n  );\n  return applyRepositoryAddComplete(promise);\n}\n\n/**\n * Add a repository\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} name Repository identifier/name to add\n * @param {Object} integration Integration provider data.\n */\nexport function addRepository(\n  client: Client,\n  orgId: string,\n  name: string,\n  integration: Integration\n) {\n  const data = {\n    installation: integration.id,\n    identifier: name,\n    provider: `integrations:${integration.provider.key}`,\n  };\n  addLoadingMessage();\n  const promise = client.requestPromise(`/organizations/${orgId}/repos/`, {\n    method: 'POST',\n    data,\n  });\n  return applyRepositoryAddComplete(promise);\n}\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","import {Alert} from 'sentry/components/alert';\nimport FieldFromConfig from 'sentry/components/forms/fieldFromConfig';\nimport Form, {FormProps} from 'sentry/components/forms/form';\nimport {Field} from 'sentry/components/forms/types';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\nimport {Repository} from 'sentry/types';\n\ntype Props = Pick<FormProps, 'onSubmitSuccess' | 'onCancel'> & {\n  closeModal: () => void;\n  onSubmitSuccess: (data: any) => void;\n  orgSlug: string;\n  repository: Repository;\n};\n\nconst formFields: Field[] = [\n  {\n    name: 'name',\n    type: 'string',\n    required: true,\n    label: t('Name of your repository.'),\n  },\n  {\n    name: 'url',\n    type: 'string',\n    required: false,\n    label: t('Full URL to your repository.'),\n    placeholder: t('https://github.com/my-org/my-repo/'),\n  },\n];\n\nfunction RepositoryEditForm({\n  repository,\n  onCancel,\n  orgSlug,\n  onSubmitSuccess,\n  closeModal,\n}: Props) {\n  const initialData = {\n    name: repository.name,\n    url: repository.url || '',\n  };\n\n  return (\n    <Form\n      initialData={initialData}\n      onSubmitSuccess={data => {\n        onSubmitSuccess(data);\n        closeModal();\n      }}\n      apiEndpoint={`/organizations/${orgSlug}/repos/${repository.id}/`}\n      apiMethod=\"PUT\"\n      onCancel={onCancel}\n    >\n      <Alert type=\"warning\" showIcon>\n        {tct(\n          'Changing the [name:repo name] may have consequences if it no longer matches the repo name used when [link:sending commits with releases].',\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/product/cli/releases/#sentry-cli-commit-integration\" />\n            ),\n            name: <strong>repo name</strong>,\n          }\n        )}\n      </Alert>\n      {formFields.map(field => (\n        <FieldFromConfig\n          key={field.name}\n          field={field}\n          inline={false}\n          stacked\n          flexibleControlStateSize\n        />\n      ))}\n    </Form>\n  );\n}\n\nexport default RepositoryEditForm;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {cancelDeleteRepository, hideRepository} from 'sentry/actionCreators/integrations';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Access from 'sentry/components/acl/access';\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport PanelItem from 'sentry/components/panels/panelItem';\nimport RepositoryEditForm from 'sentry/components/repositoryEditForm';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconDelete, IconEdit} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Repository, RepositoryStatus} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  api: Client;\n  orgId: string;\n  organization: Organization;\n  repository: Repository;\n  onRepositoryChange?: (data: {id: string; status: RepositoryStatus}) => void;\n  showProvider?: boolean;\n};\n\nfunction getStatusLabel(repo: Repository) {\n  switch (repo.status) {\n    case RepositoryStatus.PENDING_DELETION:\n      return 'Deletion Queued';\n    case RepositoryStatus.DELETION_IN_PROGRESS:\n      return 'Deletion in Progress';\n    case RepositoryStatus.DISABLED:\n      return 'Disabled';\n    case RepositoryStatus.HIDDEN:\n      return 'Disabled';\n    default:\n      return null;\n  }\n}\n\nfunction RepositoryRow({\n  api,\n  repository,\n  onRepositoryChange,\n  organization,\n  orgId,\n  showProvider = false,\n}: Props) {\n  const isCustomRepo =\n    organization.features.includes('integrations-custom-scm') &&\n    repository.provider.id === 'integrations:custom_scm';\n\n  const isActive = repository.status === RepositoryStatus.ACTIVE;\n\n  const cancelDelete = () =>\n    cancelDeleteRepository(api, orgId, repository.id).then(\n      data => {\n        if (onRepositoryChange) {\n          onRepositoryChange(data);\n        }\n      },\n      () => {}\n    );\n\n  const deleteRepo = () =>\n    hideRepository(api, orgId, repository.id).then(\n      data => {\n        if (onRepositoryChange) {\n          onRepositoryChange(data);\n        }\n      },\n      () => {}\n    );\n\n  const handleEditRepo = (data: Repository) => {\n    onRepositoryChange?.(data);\n  };\n\n  const renderDeleteButton = (hasAccess: boolean) => (\n    <Tooltip\n      title={t(\n        'You must be an organization owner, manager or admin to remove a repository.'\n      )}\n      disabled={hasAccess}\n    >\n      <Confirm\n        disabled={\n          !hasAccess || (!isActive && repository.status !== RepositoryStatus.DISABLED)\n        }\n        onConfirm={deleteRepo}\n        message={t(\n          'Are you sure you want to remove this repository? All associated commit data will be removed in addition to the repository.'\n        )}\n      >\n        <StyledButton\n          size=\"xs\"\n          icon={<IconDelete size=\"xs\" />}\n          aria-label={t('delete')}\n          disabled={!hasAccess}\n        />\n      </Confirm>\n    </Tooltip>\n  );\n\n  const triggerModal = () =>\n    openModal(({Body, Header, closeModal}) => (\n      <Fragment>\n        <Header closeButton>{t('Edit Repository')}</Header>\n        <Body>\n          <RepositoryEditForm\n            orgSlug={orgId}\n            repository={repository}\n            onSubmitSuccess={handleEditRepo}\n            closeModal={closeModal}\n            onCancel={closeModal}\n          />\n        </Body>\n      </Fragment>\n    ));\n\n  return (\n    <Access access={['org:integrations']}>\n      {({hasAccess}) => (\n        <StyledPanelItem status={repository.status}>\n          <RepositoryTitleAndUrl>\n            <RepositoryTitle>\n              <strong>{repository.name}</strong>\n              {!isActive && <small> &mdash; {getStatusLabel(repository)}</small>}\n              {repository.status === RepositoryStatus.PENDING_DELETION && (\n                <StyledButton\n                  size=\"xs\"\n                  onClick={cancelDelete}\n                  disabled={!hasAccess}\n                  data-test-id=\"repo-cancel\"\n                >\n                  {t('Cancel')}\n                </StyledButton>\n              )}\n            </RepositoryTitle>\n            <div>\n              {showProvider && <small>{repository.provider.name}</small>}\n              {showProvider && repository.url && <span>&nbsp;&mdash;&nbsp;</span>}\n              {repository.url && (\n                <small>\n                  <ExternalLink href={repository.url}>\n                    {repository.url.replace('https://', '')}\n                  </ExternalLink>\n                </small>\n              )}\n            </div>\n          </RepositoryTitleAndUrl>\n          {isCustomRepo ? (\n            <EditAndDelete>\n              <StyledButton\n                size=\"xs\"\n                icon={<IconEdit size=\"xs\" />}\n                aria-label={t('edit')}\n                disabled={\n                  !hasAccess ||\n                  (!isActive && repository.status !== RepositoryStatus.DISABLED)\n                }\n                onClick={triggerModal}\n              />\n              {renderDeleteButton(hasAccess)}\n            </EditAndDelete>\n          ) : (\n            renderDeleteButton(hasAccess)\n          )}\n        </StyledPanelItem>\n      )}\n    </Access>\n  );\n}\n\nconst StyledPanelItem = styled(PanelItem)<{status: RepositoryStatus}>`\n  /* shorter top padding because of title lineheight */\n  padding: ${space(1)} ${space(2)} ${space(2)};\n  justify-content: space-between;\n  align-items: center;\n  flex: 1;\n\n  ${p =>\n    p.status === RepositoryStatus.DISABLED &&\n    `\n    filter: grayscale(1);\n    opacity: 0.4;\n  `};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n\nconst RepositoryTitleAndUrl = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst EditAndDelete = styled('div')`\n  display: flex;\n  margin-left: ${space(1)};\n`;\n\nconst RepositoryTitle = styled('div')`\n  /* accommodate cancel button height */\n  line-height: 26px;\n`;\n\nexport default withOrganization(RepositoryRow);\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["cancelDeleteRepository","client","orgId","repositoryId","addLoadingMessage","promise","requestPromise","method","data","status","then","clearIndicators","addErrorMessage","t","hideRepository","applyRepositoryAddComplete","repo","message","tct","name","addSuccessMessage","errorData","text","responseJSON","errors","__all__","migrateRepository","integration","integrationId","id","addRepository","installation","identifier","provider","key","Client","getPadding","_ref","disablePadding","hasButtons","css","space","_styled","target","p","lightText","theme","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary","formFields","type","required","label","placeholder","RepositoryEditForm","repository","onCancel","orgSlug","onSubmitSuccess","closeModal","initialData","url","_jsxs","Form","apiEndpoint","apiMethod","children","_jsx","Alert","showIcon","link","ExternalLink","href","map","field","FieldFromConfig","inline","stacked","flexibleControlStateSize","displayName","getStatusLabel","RepositoryStatus","PENDING_DELETION","DELETION_IN_PROGRESS","DISABLED","HIDDEN","RepositoryRow","api","onRepositoryChange","organization","showProvider","isCustomRepo","features","includes","isActive","ACTIVE","cancelDelete","deleteRepo","handleEditRepo","renderDeleteButton","hasAccess","Tooltip","title","disabled","Confirm","onConfirm","StyledButton","size","icon","IconDelete","triggerModal","openModal","_ref2","Body","Header","Fragment","closeButton","Access","access","_ref3","StyledPanelItem","RepositoryTitleAndUrl","RepositoryTitle","onClick","replace","EditAndDelete","IconEdit","PanelItem","Button","styles","withOrganization","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","SentryDocumentTitle","this","renderComponent"],"sourceRoot":""}