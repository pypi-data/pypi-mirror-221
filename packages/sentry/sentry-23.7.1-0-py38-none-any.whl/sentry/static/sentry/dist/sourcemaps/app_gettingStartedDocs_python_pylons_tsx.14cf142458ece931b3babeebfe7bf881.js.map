{"version":3,"file":"chunks/app_gettingStartedDocs_python_pylons_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"ifAMO,MAAMA,EAAQ,eAAC,IACpBC,GAGDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAA2B,CAC/B,CACEG,KAAMC,EAAAA,GAASC,QACfC,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,0FACA,CAACC,MAAMH,EAAAA,EAAAA,IAAA,eAIbI,eAAgB,CACd,CACEC,SAAU,OACVF,KAAM,iCAIZ,CACEG,OAAOC,EAAAA,EAAAA,GAAE,mBACTH,eAAgB,CACd,CACEC,SAAU,SACVN,aAAaQ,EAAAA,EAAAA,GACX,mFAEFJ,KAAO,kGAMT,CACEE,SAAU,MACVN,aAAaQ,EAAAA,EAAAA,GAAE,sDACfJ,KAAO,mBAETX,0FAOJ,CACEc,OAAOC,EAAAA,EAAAA,GAAE,gBACTH,eAAgB,CACd,CACEC,SAAU,SACVN,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,6GACA,CACEM,UAAUR,EAAAA,EAAAA,IAAA,WACVS,mBAAmBT,EAAAA,EAAAA,IAAA,eAK3BG,KAAO,wmBAsCXO,gBAAgBH,EAAAA,EAAAA,GAAE,kDAErB,EAGM,SAASI,EAAwBC,GAA+B,IAA9B,IAACpB,KAAQqB,GAAmBD,EACnE,OAAOZ,EAAAA,EAAAA,IAACc,EAAAA,EAAM,CAACvB,MAAOA,EAAM,CAACC,WAAWqB,GAC1C,CAFgBF,EAAwBI,YAAA,2BAIxC,S","sources":["webpack:///./app/gettingStartedDocs/python/pylons.tsx"],"sourcesContent":["import {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: (\n      <p>\n        {tct(\n          'If you haven’t already, start by downloading Raven. The easiest way is with [code:pip]:',\n          {code: <code />}\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'bash',\n        code: 'pip install raven --upgrade',\n      },\n    ],\n  },\n  {\n    title: t('WSGI Middleware'),\n    configurations: [\n      {\n        language: 'python',\n        description: t(\n          'A Pylons-specific middleware exists to enable easy configuration from settings:'\n        ),\n        code: `\nfrom raven.contrib.pylons import Sentry\n\napplication = Sentry(application, config)\n      `,\n      },\n      {\n        language: 'ini',\n        description: t('Configuration is handled via the sentry namespace:'),\n        code: `\n[sentry]\ndsn=${dsn}\ninclude_paths=my.package,my.other.package,\nexclude_paths=my.package.crud\n      `,\n      },\n    ],\n  },\n  {\n    title: t('Logger setup'),\n    configurations: [\n      {\n        language: 'python',\n        description: (\n          <p>\n            {tct(\n              'Add the following lines to your project’s [initCode:.ini] file to setup [sentryHandlerCode:SentryHandler]:',\n              {\n                initCode: <code />,\n                sentryHandlerCode: <code />,\n              }\n            )}\n          </p>\n        ),\n        code: `\n[loggers]\nkeys = root, sentry\n\n[handlers]\nkeys = console, sentry\n\n[formatters]\nkeys = generic\n\n[logger_root]\nlevel = INFO\nhandlers = console, sentry\n\n[logger_sentry]\nlevel = WARN\nhandlers = console\nqualname = sentry.errors\npropagate = 0\n\n[handler_console]\nclass = StreamHandler\nargs = (sys.stderr,)\nlevel = NOTSET\nformatter = generic\n\n[handler_sentry]\nclass = raven.handlers.logging.SentryHandler\nargs = ('SENTRY_DSN',)\nlevel = NOTSET\nformatter = generic\n\n[formatter_generic]\nformat = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s\ndatefmt = %H:%M:%S\n      `,\n      },\n    ],\n    additionalInfo: t('You may want to set up other loggers as well.'),\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithPylons({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} {...props} />;\n}\n\nexport default GettingStartedWithPylons;\n"],"names":["steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","_jsx","children","tct","code","configurations","language","title","t","initCode","sentryHandlerCode","additionalInfo","GettingStartedWithPylons","_ref","props","Layout","displayName"],"sourceRoot":""}