{"version":3,"file":"chunks/app_components_forms_fields_rangeField_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/slider/thumb.tsx","webpack:///./app/components/slider/index.tsx","webpack:///./app/components/forms/fields/rangeField.tsx"],"sourcesContent":["import {forwardRef, useRef} from 'react';\nimport styled from '@emotion/styled';\nimport {AriaSliderThumbOptions, useSliderThumb} from '@react-aria/slider';\nimport {VisuallyHidden} from '@react-aria/visually-hidden';\nimport {SliderState} from '@react-stately/slider';\n\nimport {space} from 'sentry/styles/space';\nimport mergeRefs from 'sentry/utils/mergeRefs';\n\nexport interface SliderThumbProps extends Omit<AriaSliderThumbOptions, 'inputRef'> {\n  getFormattedValue: (value: number) => React.ReactNode;\n  state: SliderState;\n  error?: boolean;\n  showLabel?: boolean;\n}\n\nfunction BaseSliderThumb(\n  {\n    index,\n    state,\n    trackRef,\n    error = false,\n    getFormattedValue,\n    showLabel,\n    ...props\n  }: SliderThumbProps,\n  forwardedRef: React.ForwardedRef<HTMLInputElement>\n) {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const {thumbProps, inputProps, isDisabled, isFocused} = useSliderThumb(\n    {...props, index, trackRef, inputRef, validationState: error ? 'invalid' : 'valid'},\n    state\n  );\n\n  return (\n    <SliderThumbWrap\n      {...thumbProps}\n      isDisabled={isDisabled}\n      isFocused={isFocused}\n      error={error}\n    >\n      {showLabel && (\n        <SliderThumbLabel\n          aria-hidden\n          style={{\n            // Align thumb label with the track's edges. At 0% (min value) the label's\n            // leading edge should align with the track's leading edge. At 100% (max value)\n            // the label's trailing edge should align with the track's trailing edge.\n            left: `${state.getThumbPercent(index ?? 0) * 100}%`,\n            transform: `translateX(${-state.getThumbPercent(index ?? 0) * 100}%)`,\n          }}\n        >\n          {getFormattedValue(state.values[index ?? 0])}\n        </SliderThumbLabel>\n      )}\n      <VisuallyHidden>\n        <input ref={mergeRefs([inputRef, forwardedRef])} {...inputProps} />\n      </VisuallyHidden>\n    </SliderThumbWrap>\n  );\n}\n\nconst SliderThumb = forwardRef(BaseSliderThumb);\n\nexport {SliderThumb};\n\nconst SliderThumbWrap = styled('div')<{\n  error: boolean;\n  isDisabled: boolean;\n  isFocused: boolean;\n}>`\n  top: 50%;\n  width: 1rem;\n  height: 1rem;\n  border-radius: 50%;\n  background: ${p => p.theme.active};\n  color: ${p => p.theme.activeText};\n  border: solid 2px ${p => p.theme.background};\n  cursor: pointer;\n  transition: box-shadow 0.1s, background 0.1s;\n\n  &:hover {\n    background: ${p => p.theme.activeHover};\n  }\n\n  ${p =>\n    p.error &&\n    `\n    background: ${p.theme.error};\n    color: ${p.theme.errorText};\n\n    &:hover {\n      background: ${p.theme.error};\n    }\n  `}\n\n  ${p =>\n    p.isFocused &&\n    `\n      box-shadow: 0 0 0 2px ${p.error ? p.theme.errorFocus : p.theme.focus};\n      z-index:1;\n    `}\n\n    ${p =>\n    p.isDisabled &&\n    `\n        cursor: initial;\n        background: ${p.theme.subText};\n        color: ${p.theme.subText};\n\n        &:hover {\n          background: ${p.theme.subText};\n        }\n      `};\n\n  /* Extend click area */\n  &::before {\n    content: '' / '';\n    width: calc(100% + 0.5rem);\n    height: calc(100% + 0.5rem);\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst SliderThumbLabel = styled('span')`\n  position: absolute;\n  bottom: calc(100% + ${space(0.25)});\n\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  font-variant-numeric: tabular-nums;\n`;\n","import {forwardRef, useCallback, useImperativeHandle, useMemo, useRef} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\nimport {useNumberFormatter} from '@react-aria/i18n';\nimport {AriaSliderProps, AriaSliderThumbOptions, useSlider} from '@react-aria/slider';\nimport {useSliderState} from '@react-stately/slider';\n\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {space} from 'sentry/styles/space';\n\nimport {SliderThumb} from './thumb';\n\nexport interface SliderProps\n  extends Omit<AriaSliderProps, 'minValue' | 'maxValue' | 'isDisabled'>,\n    Pick<AriaSliderThumbOptions, 'autoFocus' | 'onFocus' | 'onBlur' | 'onFocusChange'> {\n  /**\n   * (This prop is now deprecated - slider ranges need to have consistent, evenly\n   * spaced values. Use `min`/`max`/`step` instead.)\n   *\n   * Custom array of selectable values on the track. If specified, the `min`/`max`/`step`\n   * props will be ignored. Make sure the array is sorted.\n   * @deprecated\n   */\n  allowedValues?: number[];\n  className?: string;\n  disabled?: boolean;\n  disabledReason?: React.ReactNode;\n  error?: boolean;\n  /**\n   * Apply custom formatting to output/tick labels. If only units are needed, use the\n   * `formatOptions` prop instead.\n   */\n  formatLabel?: (value: number | '') => React.ReactNode;\n  formatOptions?: Intl.NumberFormatOptions;\n  max?: AriaSliderProps['maxValue'];\n  min?: AriaSliderProps['minValue'];\n  required?: boolean;\n  /**\n   * Whether to show value labels above the slider's thumbs. Note: if `label` is defined,\n   * then thumb labels will be hidden in favor of the trailing output label.\n   */\n  showThumbLabels?: boolean;\n  /**\n   * Whether to show labels below track ticks.\n   */\n  showTickLabels?: boolean;\n  /**\n   * The values to display tick marks at, e.g. [2, 4] means there will be ticks at 2 & 4.\n   *\n   * See also: ticks, ticksInterval. The order of precedence is: ticks — ticksInterval —\n   * tickValues. E.g. if tickValues is defined, both ticks & ticksEvery will be ignored.\n   */\n  tickValues?: number[];\n  /**\n   * Number of tick marks (including the outer min/max ticks) to display on the track.\n   *\n   * See also: ticksInterval, tickValues. The order of precedence is: ticks —\n   * ticksInterval — tickValues. E.g. if tickValues is defined, both ticks & ticksEvery\n   * will be ignored.\n   */\n  ticks?: number;\n  /**\n   * Interval between tick marks. This number should evenly divide the slider's range.\n   *\n   * See also: ticks, tickValues. The order of precedence is: ticks — ticksInterval —\n   * tickValues. E.g. if tickValues is defined, both ticks & ticksEvery will be ignored.\n   */\n  ticksInterval?: number;\n}\n\nfunction BaseSlider(\n  {\n    // Slider/track props\n    min = 0,\n    max = 100,\n    step = 1,\n    disabled = false,\n    disabledReason,\n    error = false,\n    required = false,\n    ticks,\n    ticksInterval,\n    tickValues,\n    showTickLabels = false,\n    showThumbLabels = false,\n    formatLabel,\n    formatOptions,\n    allowedValues,\n    className,\n\n    // Thumb props\n    autoFocus,\n    onFocus,\n    onBlur,\n    onFocusChange,\n\n    ...props\n  }: SliderProps,\n  forwardedRef: React.ForwardedRef<HTMLInputElement | HTMLInputElement[]>\n) {\n  const {label, value, defaultValue, onChange, onChangeEnd} = props;\n  const ariaProps: AriaSliderProps = {\n    ...props,\n    step,\n    minValue: min,\n    maxValue: max,\n    isDisabled: disabled,\n    // Backward compatibility support for `allowedValues` prop. Since range sliders only\n    // accept evenly spaced values (specified with `min`/`max`/`step`), we need to create\n    // a custom set of internal values that act as indices for the `allowedValues` array.\n    // For example, if `allowedValues` is [1, 2, 4, 8], then the corresponding internal\n    // values are [0, 1, 2, 3]. If the first value (index 0) is selected, then onChange()\n    // will be called with `onChange(allowedValues[0])`, i.e. `onChange(1)`.\n    ...(allowedValues && {\n      minValue: 0,\n      maxValue: allowedValues.length - 1,\n      step: 1,\n      value: Array.isArray(value)\n        ? value.map(allowedValues.indexOf)\n        : allowedValues.indexOf(value ?? 0),\n      defaultValue: Array.isArray(defaultValue)\n        ? defaultValue.map(allowedValues.indexOf)\n        : allowedValues.indexOf(defaultValue ?? 0),\n      onChange: indexValue =>\n        onChange?.(\n          Array.isArray(indexValue)\n            ? indexValue.map(i => allowedValues[i])\n            : allowedValues[indexValue]\n        ),\n      onChangeEnd: indexValue =>\n        onChangeEnd?.(\n          Array.isArray(indexValue)\n            ? indexValue.map(i => allowedValues[i])\n            : allowedValues[indexValue]\n        ),\n    }),\n  };\n\n  const trackRef = useRef<HTMLDivElement>(null);\n  const numberFormatter = useNumberFormatter(formatOptions);\n  const state = useSliderState({...ariaProps, numberFormatter});\n\n  const {groupProps, trackProps, labelProps, outputProps} = useSlider(\n    ariaProps,\n    state,\n    trackRef\n  );\n\n  const allTickValues = useMemo(() => {\n    if (tickValues) {\n      return tickValues;\n    }\n\n    if (ticksInterval) {\n      const result: number[] = [];\n      let current = min;\n      while (current <= max) {\n        result.push(current);\n        current += ticksInterval;\n      }\n      return result.concat([max]);\n    }\n\n    if (ticks) {\n      const range = max - min;\n      return [...new Array(ticks)].map((_, i) => min + i * (range / (ticks - 1)));\n    }\n\n    return [];\n  }, [ticks, ticksInterval, tickValues, min, max]);\n\n  const nThumbs = state.values.length;\n  const refs = useRef<Array<HTMLInputElement>>([]);\n  useImperativeHandle(\n    forwardedRef,\n    () => {\n      if (nThumbs > 1) {\n        return refs.current;\n      }\n      return refs.current[0];\n    },\n    [nThumbs]\n  );\n\n  const getFormattedValue = useCallback(\n    (val: number) => {\n      // Special formatting when `allowedValues` is specified, in which case `val` acts\n      // like an index for `allowedValues`.\n      if (allowedValues) {\n        return formatLabel\n          ? formatLabel(allowedValues[val])\n          : state.getFormattedValue(allowedValues[val]);\n      }\n\n      return formatLabel ? formatLabel(val) : state.getFormattedValue(val);\n    },\n    [formatLabel, state, allowedValues]\n  );\n\n  const selectedRange =\n    nThumbs > 1\n      ? [Math.min(...state.values), Math.max(...state.values)]\n      : [min, state.values[0]];\n\n  return (\n    <Tooltip\n      title={disabledReason}\n      disabled={!disabled}\n      skipWrapper\n      isHoverable\n      position=\"bottom\"\n      offset={-15}\n    >\n      <SliderGroup {...groupProps} className={className}>\n        {label && (\n          <SliderLabelWrapper className=\"label-container\">\n            <SliderLabel {...labelProps}>{label}</SliderLabel>\n            <SliderLabelOutput {...outputProps}>\n              {nThumbs > 1\n                ? `${getFormattedValue(selectedRange[0])}–${getFormattedValue(\n                    selectedRange[1]\n                  )}`\n                : getFormattedValue(selectedRange[1])}\n            </SliderLabelOutput>\n          </SliderLabelWrapper>\n        )}\n\n        <SliderTrack\n          ref={trackRef}\n          {...trackProps}\n          disabled={disabled}\n          hasThumbLabels={showThumbLabels && !label}\n          hasTickLabels={showTickLabels && allTickValues.length > 0}\n        >\n          <SliderLowerTrack\n            role=\"presentation\"\n            disabled={disabled}\n            error={error}\n            style={{\n              left: `${state.getValuePercent(selectedRange[0]) * 100}%`,\n              right: `${100 - state.getValuePercent(selectedRange[1]) * 100}%`,\n            }}\n          />\n\n          {allTickValues.map((tickValue, index) => (\n            <SliderTick\n              key={tickValue}\n              aria-hidden\n              error={error}\n              disabled={disabled}\n              inSelection={tickValue >= selectedRange[0] && tickValue <= selectedRange[1]}\n              style={{left: `${(state.getValuePercent(tickValue) * 100).toFixed(2)}%`}}\n              justifyContent={\n                index === 0\n                  ? 'start'\n                  : index === allTickValues.length - 1\n                  ? 'end'\n                  : 'center'\n              }\n            >\n              {showTickLabels && (\n                <SliderTickLabel>{getFormattedValue(tickValue)}</SliderTickLabel>\n              )}\n            </SliderTick>\n          ))}\n\n          {[...new Array(nThumbs)].map((_, index) => (\n            <SliderThumb\n              ref={node => {\n                if (!node) {\n                  return;\n                }\n\n                refs.current = [\n                  ...refs.current.slice(0, index),\n                  node,\n                  ...refs.current.slice(index + 1),\n                ];\n              }}\n              key={index}\n              index={index}\n              state={state}\n              trackRef={trackRef}\n              isDisabled={disabled}\n              showLabel={showThumbLabels && !label}\n              getFormattedValue={getFormattedValue}\n              isRequired={required}\n              autoFocus={autoFocus && index === 0}\n              onFocus={onFocus}\n              onBlur={onBlur}\n              onFocusChange={onFocusChange}\n              error={error}\n            />\n          ))}\n        </SliderTrack>\n      </SliderGroup>\n    </Tooltip>\n  );\n}\n\nconst Slider = forwardRef(BaseSlider);\n\nexport {Slider};\n\nconst SliderGroup = styled('div')`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  white-space: nowrap;\n`;\n\nconst SliderLabelWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${space(1.5)};\n`;\n\nconst SliderLabel = styled('label')`\n  font-weight: 400;\n  color: ${p => p.theme.textColor};\n`;\n\nconst SliderLabelOutput = styled('output')`\n  margin: 0;\n  padding: 0;\n  font-variant-numeric: tabular-nums;\n  color: ${p => p.theme.subText};\n`;\n\nconst SliderTrack = styled('div', {\n  shouldForwardProp: prop =>\n    prop !== 'disabled' && typeof prop === 'string' && isPropValid(prop),\n})<{\n  disabled: boolean;\n  hasThumbLabels: boolean;\n  hasTickLabels: boolean;\n}>`\n  position: relative;\n  width: calc(100% - 2px);\n  height: 3px;\n  border-radius: 3px;\n  background: ${p => p.theme.border};\n  margin-left: 1px; /* to better align track with label */\n\n  margin-bottom: ${p => (p.hasTickLabels ? '2em' : '0.5rem')};\n  margin-top: ${p => (p.hasThumbLabels ? '2em' : '0.5rem')};\n\n  ${p => p.disabled && `pointer-events: none;`}\n\n  /* Users can click on the track to quickly jump to a value. We should extend the click\n  area to make the action easier. */\n  &::before {\n    content: '';\n    width: 100%;\n    height: 1.5rem;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst SliderLowerTrack = styled('div')<{disabled: boolean; error: boolean}>`\n  position: absolute;\n  height: inherit;\n  border-radius: inherit;\n  background: ${p => p.theme.active};\n  pointer-events: none;\n\n  ${p => p.error && `background: ${p.theme.error};`}\n  ${p => p.disabled && `background: ${p.theme.subText};`}\n`;\n\nconst SliderTick = styled('div')<{\n  disabled: boolean;\n  error: boolean;\n  inSelection: boolean;\n  justifyContent: string;\n}>`\n  display: flex;\n  justify-content: ${p => p.justifyContent};\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 2px;\n  height: 6px;\n  border-radius: 2px;\n  background: ${p => p.theme.translucentBorder};\n\n  ${p =>\n    p.inSelection &&\n    `background: ${\n      p.disabled ? p.theme.subText : p.error ? p.theme.error : p.theme.active\n    };`}\n`;\n\nconst SliderTickLabel = styled('small')`\n  display: inline-block;\n  position: absolute;\n  top: calc(100% + ${space(1)});\n  margin: 0 -1px;\n\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n","import FormField from 'sentry/components/forms/formField';\nimport {Slider, SliderProps} from 'sentry/components/slider';\n\n// XXX(epurkhiser): This is wrong, it should not be inheriting these props\nimport {InputFieldProps} from './inputField';\n\nexport interface RangeFieldProps\n  extends Omit<SliderProps, 'value' | 'defaultValue' | 'disabled' | 'error'>,\n    Omit<\n      InputFieldProps,\n      | 'disabled'\n      | 'field'\n      | 'step'\n      | 'onChange'\n      | 'max'\n      | 'min'\n      | 'onFocus'\n      | 'onBlur'\n      | 'css'\n      | 'formatMessageValue'\n    > {\n  disabled?: boolean | ((props: Omit<RangeFieldProps, 'formatMessageValue'>) => boolean);\n  disabledReason?: React.ReactNode;\n  formatMessageValue?: false | Function;\n}\n\nfunction defaultFormatMessageValue(value: number | '', {formatLabel}: RangeFieldProps) {\n  return formatLabel?.(value) ?? value;\n}\n\nfunction RangeField({\n  formatMessageValue = defaultFormatMessageValue,\n  disabled,\n  ...otherProps\n}: RangeFieldProps) {\n  const resolvedDisabled =\n    typeof disabled === 'function' ? disabled(otherProps) : disabled;\n\n  const props: InputFieldProps = {\n    ...otherProps,\n    disabled: resolvedDisabled,\n    formatMessageValue,\n  };\n\n  return (\n    <FormField {...props}>\n      {({\n        children: _children,\n        onChange: fieldOnChange,\n        label,\n        onBlur,\n        value,\n        ...fieldProps\n      }) => (\n        <Slider\n          {...fieldProps}\n          aria-label={label}\n          showThumbLabels\n          value={value}\n          onChangeEnd={val => onBlur(val, new MouseEvent(''))}\n          onChange={val => fieldOnChange(val, new MouseEvent(''))}\n        />\n      )}\n    </FormField>\n  );\n}\n\nexport default RangeField;\n"],"names":["BaseSliderThumb","_ref","forwardedRef","index","state","trackRef","error","getFormattedValue","showLabel","props","inputRef","useRef","thumbProps","inputProps","isDisabled","isFocused","useSliderThumb","validationState","_jsxs","SliderThumbWrap","children","_jsx","SliderThumbLabel","style","left","getThumbPercent","transform","values","VisuallyHidden","ref","mergeRefs","displayName","SliderThumb","forwardRef","_styled","target","p","theme","active","activeText","background","activeHover","errorText","errorFocus","focus","subText","space","fontSizeSmall","BaseSlider","min","max","step","disabled","disabledReason","required","ticks","ticksInterval","tickValues","showTickLabels","showThumbLabels","formatLabel","formatOptions","allowedValues","className","autoFocus","onFocus","onBlur","onFocusChange","label","value","defaultValue","onChange","onChangeEnd","ariaProps","minValue","maxValue","length","Array","isArray","map","indexOf","indexValue","i","numberFormatter","useNumberFormatter","useSliderState","groupProps","trackProps","labelProps","outputProps","useSlider","allTickValues","useMemo","result","current","push","concat","range","_","nThumbs","refs","useImperativeHandle","useCallback","val","selectedRange","Math","Tooltip","title","skipWrapper","isHoverable","position","offset","SliderGroup","SliderLabelWrapper","SliderLabel","SliderLabelOutput","SliderTrack","hasThumbLabels","hasTickLabels","SliderLowerTrack","role","getValuePercent","right","tickValue","SliderTick","inSelection","toFixed","justifyContent","SliderTickLabel","node","slice","isRequired","Slider","name","styles","textColor","shouldForwardProp","prop","isPropValid","border","translucentBorder","defaultFormatMessageValue","RangeField","_ref2","formatMessageValue","otherProps","resolvedDisabled","FormField","_ref3","_children","fieldOnChange","fieldProps","MouseEvent"],"sourceRoot":""}