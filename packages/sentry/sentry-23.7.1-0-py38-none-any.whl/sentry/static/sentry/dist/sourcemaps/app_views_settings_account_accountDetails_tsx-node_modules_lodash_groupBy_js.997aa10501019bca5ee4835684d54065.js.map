{"version":3,"file":"chunks/app_views_settings_account_accountDetails_tsx-node_modules_lodash_groupBy_js.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/accountDetails.tsx","webpack:///./app/data/forms/accountPreferences.tsx","webpack:///./app/data/languages.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/account/accountDetails.tsx","webpack:///../node_modules/lodash/groupBy.js"],"sourcesContent":["import {JsonFormObject} from 'sentry/components/forms/types';\n\nexport const route = '/settings/account/details/';\n\n// For fields that are\nconst getUserIsManaged = ({user}) => user.isManaged;\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Account Details',\n    fields: [\n      {\n        name: 'name',\n        type: 'string',\n        required: true,\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: 'Name',\n        placeholder: 'e.g. John Doe',\n        help: 'Your full name',\n      },\n      {\n        name: 'username',\n        type: 'string',\n        required: true,\n\n        autoComplete: 'username',\n        label: 'Username',\n        placeholder: 'e.g. name@example.com',\n        help: '',\n        disabled: getUserIsManaged,\n        visible: ({user}) => user.email !== user.username,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import {JsonFormObject} from 'sentry/components/forms/types';\nimport languages from 'sentry/data/languages';\nimport {timezoneOptions} from 'sentry/data/timezones';\nimport {t} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/details/';\n\n// Called before sending API request, these fields need to be sent as an\n// `options` object\nconst transformOptions = (data: object) => ({options: data});\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Preferences',\n    fields: [\n      {\n        name: 'theme',\n        type: 'select',\n        label: t('Theme'),\n        help: t(\n          \"Select your theme preference. It can be synced to your system's theme, always light mode, or always dark mode.\"\n        ),\n        options: [\n          {value: 'light', label: t('Light')},\n          {value: 'dark', label: t('Dark')},\n          {value: 'system', label: t('Default to system')},\n        ],\n        getData: transformOptions,\n      },\n      {\n        name: 'language',\n        type: 'select',\n        label: t('Language'),\n        options: languages.map(([value, label]) => ({value, label})),\n        getData: transformOptions,\n      },\n      {\n        name: 'timezone',\n        type: 'select',\n        label: t('Timezone'),\n        options: timezoneOptions,\n        getData: transformOptions,\n      },\n      {\n        name: 'clock24Hours',\n        type: 'boolean',\n        label: t('Use a 24-hour clock'),\n        getData: transformOptions,\n      },\n      {\n        name: 'stacktraceOrder',\n        type: 'select',\n        required: false,\n        options: [\n          {value: -1, label: t('Default')},\n          {value: 1, label: t('Oldest')},\n          {value: 2, label: t('Newest')},\n        ],\n        label: t('Stack Trace Order'),\n        help: t('Choose the default ordering of frames in stack traces'),\n        getData: transformOptions,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","export default [\n  ['ja', 'Japanese'],\n  ['it', 'Italian'],\n  ['zh-tw', 'Traditional Chinese'],\n  ['cs', 'Czech'],\n  ['ru', 'Russian'],\n  ['zh-cn', 'Simplified Chinese'],\n  ['bg', 'Bulgarian'],\n  ['de', 'German'],\n  ['fi', 'Finnish'],\n  ['fr', 'French'],\n  ['es', 'Spanish'],\n  ['en', 'English'],\n] as const;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {updateUser} from 'sentry/actionCreators/account';\nimport {APIRequestMethod} from 'sentry/api';\nimport AvatarChooser from 'sentry/components/avatarChooser';\nimport Form, {FormProps} from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport accountDetailsFields from 'sentry/data/forms/accountDetails';\nimport accountPreferencesFields from 'sentry/data/forms/accountPreferences';\nimport {t} from 'sentry/locale';\nimport {User} from 'sentry/types';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nconst ENDPOINT = '/users/me/';\n\nclass AccountDetails extends DeprecatedAsyncView {\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    // local state is NOT updated when the form saves\n    return [['user', ENDPOINT]];\n  }\n\n  handleSubmitSuccess = (user: User) => {\n    // the updateUser method updates our Config Store\n    // No components listen to the ConfigStore, they just access it directly\n    updateUser(user);\n    // We need to update the state, because AvatarChooser is using it,\n    // otherwise it will flick\n    this.setState({\n      user,\n    });\n  };\n\n  renderBody() {\n    const user = this.state.user as User;\n\n    const formCommonProps: Partial<FormProps> = {\n      apiEndpoint: ENDPOINT,\n      apiMethod: 'PUT' as APIRequestMethod,\n      allowUndo: true,\n      saveOnBlur: true,\n      onSubmitSuccess: this.handleSubmitSuccess,\n    };\n\n    return (\n      <div>\n        <SentryDocumentTitle title={t('Account Details')} />\n        <SettingsPageHeader title={t('Account Details')} />\n        <Form initialData={user} {...formCommonProps}>\n          <JsonForm forms={accountDetailsFields} additionalFieldProps={{user}} />\n        </Form>\n        <Form initialData={user.options} {...formCommonProps}>\n          <JsonForm forms={accountPreferencesFields} additionalFieldProps={{user}} />\n        </Form>\n        <AvatarChooser\n          endpoint=\"/users/me/avatar/\"\n          model={user}\n          onSave={resp => {\n            this.handleSubmitSuccess(resp as User);\n          }}\n          isUser\n        />\n      </div>\n    );\n  }\n}\n\nexport default AccountDetails;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n"],"names":["route","title","fields","name","type","required","label","placeholder","help","autoComplete","disabled","_ref","user","isManaged","visible","_ref2","email","username","transformOptions","data","options","t","value","getData","map","timezoneOptions","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","this","children","renderComponent","displayName","ENDPOINT","AccountDetails","constructor","arguments","_defineProperty","updateUser","setState","getEndpoints","renderBody","state","formCommonProps","apiEndpoint","apiMethod","allowUndo","saveOnBlur","onSubmitSuccess","handleSubmitSuccess","_jsxs","SettingsPageHeader","Form","initialData","JsonForm","forms","accountDetailsFields","additionalFieldProps","accountPreferencesFields","AvatarChooser","endpoint","model","onSave","resp","isUser","baseAssignValue","createAggregator","hasOwnProperty","Object","prototype","groupBy","result","key","call","push","module","exports"],"sourceRoot":""}