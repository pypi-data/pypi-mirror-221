{"version":3,"file":"chunks/app_views_performance_landing_widgets_components_performanceWidget_tsx-app_views_performance_-1d625a.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/performance/landing/widgets/components/performanceWidgetContainer.tsx","webpack:///./app/views/performance/landing/widgets/components/dataStateSwitch.tsx","webpack:///./app/views/performance/landing/widgets/components/queryHandler.tsx","webpack:///./app/views/performance/landing/widgets/components/widgetHeader.tsx","webpack:///./app/views/performance/landing/widgets/components/performanceWidget.tsx","webpack:///./app/views/performance/landing/widgets/components/selectableList.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport Panel from 'sentry/components/panels/panel';\nimport {space} from 'sentry/styles/space';\n\nexport type PerformanceWidgetContainerTypes = 'panel' | 'inline';\n\nconst StyledPanel = styled(Panel)`\n  padding-top: ${space(2)};\n  margin-bottom: 0;\n`;\nconst Div = styled('div')``;\n\nconst getPerformanceWidgetContainer = ({\n  containerType,\n}: {\n  containerType: PerformanceWidgetContainerTypes;\n}) => {\n  if (containerType === 'panel') {\n    return StyledPanel;\n  }\n  if (containerType === 'inline') {\n    return Div;\n  }\n  return Div;\n};\n\nexport default getPerformanceWidgetContainer;\n","import {Fragment} from 'react';\n\nexport function DataStateSwitch(props: {\n  dataComponents: JSX.Element[];\n  emptyComponent: JSX.Element;\n  errorComponent: JSX.Element;\n\n  hasData: boolean;\n  isErrored: boolean;\n  isLoading: boolean;\n  loadingComponent?: JSX.Element;\n}): JSX.Element {\n  if (props.isErrored) {\n    return props.errorComponent;\n  }\n  if (props.isLoading && props.loadingComponent) {\n    return props.loadingComponent;\n  }\n  if (!props.hasData) {\n    return props.emptyComponent;\n  }\n  return <Fragment>{props.dataComponents}</Fragment>;\n}\n","import {Fragment, useEffect} from 'react';\n\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport {\n  getIsMetricsDataFromResults,\n  useMEPDataContext,\n} from 'sentry/utils/performance/contexts/metricsEnhancedPerformanceDataContext';\n\nimport {QueryDefinitionWithKey, QueryHandlerProps, WidgetDataConstraint} from '../types';\nimport {PerformanceWidgetSetting} from '../widgetDefinitions';\n\n/*\n  Component to handle switching component-style queries over to state. This should be temporary to make it easier to switch away from waterfall style api components.\n*/\nexport function QueryHandler<T extends WidgetDataConstraint>(\n  props: QueryHandlerProps<T>\n) {\n  const children = props.children ?? <Fragment />;\n\n  if (!props.queries.length) {\n    return <Fragment>{children}</Fragment>;\n  }\n\n  return (\n    <Fragment>\n      {props.queries\n        .filter(q => (q.enabled ? q.enabled(props.widgetData) : true))\n        .map(query => (\n          <SingleQueryHandler key={query.queryKey} {...props} query={query} />\n        ))}\n    </Fragment>\n  );\n}\n\nfunction genericQueryReferrer(setting: PerformanceWidgetSetting) {\n  return `api.performance.generic-widget-chart.${setting.replace(/_/g, '-')}`;\n}\n\nfunction SingleQueryHandler<T extends WidgetDataConstraint>(\n  props: QueryHandlerProps<T> & {query: QueryDefinitionWithKey<T>}\n) {\n  const query = props.query;\n  const globalSelection = props.queryProps.eventView.getPageFilters();\n  const start = globalSelection.datetime.start\n    ? getUtcToLocalDateObject(globalSelection.datetime.start)\n    : null;\n\n  const end = globalSelection.datetime.end\n    ? getUtcToLocalDateObject(globalSelection.datetime.end)\n    : null;\n\n  useEffect(\n    () => () => {\n      // Destroy previous data on unmount, in case enabled value changes and unmounts the query component.\n      props.removeWidgetDataForKey(query.queryKey);\n    },\n    []\n  );\n\n  return (\n    <query.component\n      key={query.queryKey}\n      fields={query.fields}\n      yAxis={query.fields}\n      start={start}\n      end={end}\n      period={globalSelection.datetime.period}\n      project={globalSelection.projects}\n      environment={globalSelection.environments}\n      organization={props.queryProps.organization}\n      orgSlug={props.queryProps.organization.slug}\n      eventView={props.queryProps.eventView}\n      query={props.queryProps.eventView.getQueryWithAdditionalConditions()}\n      widgetData={props.widgetData}\n      referrer={genericQueryReferrer(props.queryProps.chartSetting)}\n    >\n      {results => {\n        return (\n          <Fragment>\n            <QueryResultSaver<T> results={results} {...props} query={query} />\n          </Fragment>\n        );\n      }}\n    </query.component>\n  );\n}\n\nfunction QueryResultSaver<T extends WidgetDataConstraint>(\n  props: {\n    // TODO(k-fish): Fix this any.\n    query: QueryDefinitionWithKey<T>;\n    results: any;\n  } & QueryHandlerProps<T>\n) {\n  const mepContext = useMEPDataContext();\n  const {results, query} = props;\n\n  const transformed = query.transform(props.queryProps, results, props.query);\n\n  useEffect(() => {\n    const isMetricsData = getIsMetricsDataFromResults(\n      results,\n      props.queryProps.fields[0]\n    );\n    mepContext.setIsMetricsData(isMetricsData);\n    props.setWidgetDataForKey(query.queryKey, transformed);\n  }, [transformed?.hasData, transformed?.isLoading, transformed?.isErrored]);\n  return <Fragment />;\n}\n","import styled from '@emotion/styled';\n\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {space} from 'sentry/styles/space';\nimport {MEPTag} from 'sentry/utils/performance/contexts/metricsEnhancedPerformanceDataContext';\n\nimport {\n  GenericPerformanceWidgetProps,\n  WidgetDataConstraint,\n  WidgetDataProps,\n} from '../types';\n\nexport function WidgetHeader<T extends WidgetDataConstraint>(\n  props: GenericPerformanceWidgetProps<T> & WidgetDataProps<T>\n) {\n  const {title, titleTooltip, Subtitle, HeaderActions, InteractiveTitle} = props;\n  return (\n    <WidgetHeaderContainer>\n      <TitleContainer>\n        <StyledHeaderTitleLegend data-test-id=\"performance-widget-title\">\n          {InteractiveTitle ? (\n            <InteractiveTitle {...props} />\n          ) : (\n            <TextOverflow>{title}</TextOverflow>\n          )}\n          <MEPTag />\n          {titleTooltip && (\n            <QuestionTooltip position=\"top\" size=\"sm\" title={titleTooltip} />\n          )}\n        </StyledHeaderTitleLegend>\n        {Subtitle ? <Subtitle {...props} /> : null}\n      </TitleContainer>\n      <HeaderActionsContainer>\n        {HeaderActions && <HeaderActions {...props} />}\n      </HeaderActionsContainer>\n    </WidgetHeaderContainer>\n  );\n}\n\nconst StyledHeaderTitleLegend = styled(HeaderTitleLegend)`\n  position: relative;\n  z-index: initial;\n  top: -${space(0.5)};\n`;\n\nconst TitleContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst WidgetHeaderContainer = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: ${space(1)};\n`;\n\nconst HeaderActionsContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  gap: ${space(1)};\n`;\n","import {Fragment, useCallback, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconWarning} from 'sentry/icons/iconWarning';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {MEPDataProvider} from 'sentry/utils/performance/contexts/metricsEnhancedPerformanceDataContext';\nimport useApi from 'sentry/utils/useApi';\nimport getPerformanceWidgetContainer from 'sentry/views/performance/landing/widgets/components/performanceWidgetContainer';\n\nimport {\n  GenericPerformanceWidgetProps,\n  WidgetDataConstraint,\n  WidgetDataProps,\n  WidgetDataResult,\n  WidgetPropUnion,\n} from '../types';\nimport {PerformanceWidgetSetting} from '../widgetDefinitions';\n\nimport {DataStateSwitch} from './dataStateSwitch';\nimport {QueryHandler} from './queryHandler';\nimport {WidgetHeader} from './widgetHeader';\n\n// Generic performance widget for type T, where T defines all the data contained in the widget.\nexport function GenericPerformanceWidget<T extends WidgetDataConstraint>(\n  props: WidgetPropUnion<T>\n) {\n  // Use object keyed to chart setting so switching between charts of a similar type doesn't retain data with query components still having inflight requests.\n  const [allWidgetData, setWidgetData] = useState<{[chartSetting: string]: T}>({});\n  const widgetData = allWidgetData[props.chartSetting] ?? {};\n  const widgetDataRef = useRef(widgetData);\n\n  const setWidgetDataForKey = useCallback(\n    (dataKey: string, result?: WidgetDataResult) => {\n      const _widgetData = widgetDataRef.current;\n      const newWidgetData = {..._widgetData, [dataKey]: result};\n      widgetDataRef.current = newWidgetData;\n      setWidgetData({[props.chartSetting]: newWidgetData});\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [allWidgetData, setWidgetData]\n  );\n  const removeWidgetDataForKey = useCallback(\n    (dataKey: string) => {\n      const _widgetData = widgetDataRef.current;\n      const newWidgetData = {..._widgetData};\n      delete newWidgetData[dataKey];\n      widgetDataRef.current = newWidgetData;\n      setWidgetData({[props.chartSetting]: newWidgetData});\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [allWidgetData, setWidgetData]\n  );\n  const widgetProps = {widgetData, setWidgetDataForKey, removeWidgetDataForKey};\n\n  const queries = Object.entries(props.Queries).map(([key, definition]) => ({\n    ...definition,\n    queryKey: key,\n  }));\n\n  const api = useApi();\n\n  const totalHeight = props.Visualizations.reduce((acc, curr) => acc + curr.height, 0);\n\n  return (\n    <Fragment>\n      <MEPDataProvider chartSetting={props.chartSetting}>\n        <QueryHandler\n          eventView={props.eventView}\n          widgetData={widgetData}\n          setWidgetDataForKey={setWidgetDataForKey}\n          removeWidgetDataForKey={removeWidgetDataForKey}\n          queryProps={props}\n          queries={queries}\n          api={api}\n        />\n        <DataDisplay<T> {...props} {...widgetProps} totalHeight={totalHeight} />\n      </MEPDataProvider>\n    </Fragment>\n  );\n}\n\nfunction trackDataComponentClicks(\n  chartSetting: PerformanceWidgetSetting,\n  organization: Organization\n) {\n  trackAnalytics('performance_views.landingv3.widget.interaction', {\n    organization,\n    widget_type: chartSetting,\n  });\n}\n\nexport function DataDisplay<T extends WidgetDataConstraint>(\n  props: GenericPerformanceWidgetProps<T> & WidgetDataProps<T> & {totalHeight: number}\n) {\n  const {Visualizations, chartHeight, totalHeight, containerType, EmptyComponent} = props;\n\n  const Container = getPerformanceWidgetContainer({\n    containerType,\n  });\n\n  const numberKeys = Object.keys(props.Queries).length;\n  const missingDataKeys = Object.values(props.widgetData).length !== numberKeys;\n  const hasData =\n    !missingDataKeys && Object.values(props.widgetData).every(d => !d || d.hasData);\n  const isLoading = Object.values(props.widgetData).some(d => !d || d.isLoading);\n  const isErrored =\n    !missingDataKeys && Object.values(props.widgetData).some(d => d && d.isErrored);\n\n  return (\n    <Container data-test-id=\"performance-widget-container\">\n      <ContentContainer>\n        <WidgetHeader<T> {...props} />\n      </ContentContainer>\n      <DataStateSwitch\n        isLoading={isLoading}\n        isErrored={isErrored}\n        hasData={hasData}\n        errorComponent={<DefaultErrorComponent height={totalHeight} />}\n        dataComponents={Visualizations.map((Visualization, index) => (\n          <ContentContainer\n            key={index}\n            noPadding={Visualization.noPadding}\n            bottomPadding={Visualization.bottomPadding}\n            data-test-id=\"widget-state-has-data\"\n            onClick={() =>\n              trackDataComponentClicks(props.chartSetting, props.organization)\n            }\n          >\n            {getDynamicText({\n              value: (\n                <Visualization.component\n                  grid={defaultGrid}\n                  queryFields={Visualization.fields}\n                  widgetData={props.widgetData}\n                  height={chartHeight}\n                />\n              ),\n              fixed: <Placeholder height={`${chartHeight}px`} />,\n            })}\n          </ContentContainer>\n        ))}\n        loadingComponent={<PerformanceWidgetPlaceholder height={`${totalHeight}px`} />}\n        emptyComponent={\n          EmptyComponent ? (\n            <EmptyComponent />\n          ) : (\n            <PerformanceWidgetPlaceholder height={`${totalHeight}px`} />\n          )\n        }\n      />\n    </Container>\n  );\n}\n\nfunction DefaultErrorComponent(props: {height: number}) {\n  return (\n    <ErrorPanel data-test-id=\"widget-state-is-errored\" height={`${props.height}px`}>\n      <IconWarning color=\"gray300\" size=\"lg\" />\n    </ErrorPanel>\n  );\n}\n\nconst defaultGrid = {\n  left: space(0),\n  right: space(0),\n  top: space(2),\n  bottom: space(1),\n};\n\nconst ContentContainer = styled('div')<{bottomPadding?: boolean; noPadding?: boolean}>`\n  padding-left: ${p => (p.noPadding ? space(0) : space(2))};\n  padding-right: ${p => (p.noPadding ? space(0) : space(2))};\n  padding-bottom: ${p => (p.bottomPadding ? space(1) : space(0))};\n`;\n\nconst PerformanceWidgetPlaceholder = styled(Placeholder)`\n  border-color: transparent;\n  border-bottom-right-radius: inherit;\n  border-bottom-left-radius: inherit;\n`;\n\nGenericPerformanceWidget.defaultProps = {\n  containerType: 'panel',\n  chartHeight: 200,\n};\n","import styled from '@emotion/styled';\n\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport {RadioLineItem} from 'sentry/components/forms/controls/radioGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport Radio from 'sentry/components/radio';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconClose} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {getConfigureIntegrationsDocsLink} from 'sentry/utils/docs';\nimport usePageFilters from 'sentry/utils/usePageFilters';\nimport useProjects from 'sentry/utils/useProjects';\nimport {getIsMultiProject} from 'sentry/views/performance/utils';\n\ntype Props = {\n  items: (() => React.ReactNode)[];\n  selectedIndex: number;\n  setSelectedIndex: (index: number) => void;\n  radioColor?: string;\n};\n\nexport default function SelectableList(props: Props) {\n  return (\n    <div>\n      {props.items.map((item, index) => (\n        <SelectableItem\n          {...props}\n          isSelected={index === props.selectedIndex}\n          currentIndex={index}\n          key={index}\n        >\n          {item()}\n        </SelectableItem>\n      ))}\n    </div>\n  );\n}\n\nfunction SelectableItem({\n  isSelected,\n  currentIndex: index,\n  children,\n  setSelectedIndex,\n  radioColor,\n}: {children: React.ReactNode; currentIndex: number; isSelected: boolean} & Props) {\n  return (\n    <ListItemContainer>\n      <ItemRadioContainer color={radioColor ?? ''}>\n        <RadioLineItem index={index} role=\"radio\">\n          <Radio checked={isSelected} onChange={() => setSelectedIndex(index)} />\n        </RadioLineItem>\n      </ItemRadioContainer>\n      {children}\n    </ListItemContainer>\n  );\n}\n\nexport const RightAlignedCell = styled('div')`\n  text-align: right;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 ${space(1)};\n`;\n\nexport const Subtitle = styled('span')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeMedium};\n  display: inline-block;\n`;\n\nexport const GrowLink = styled(Link)`\n  flex-grow: 1;\n  display: inherit;\n`;\n\nexport function WidgetEmptyStateWarning() {\n  return (\n    <StyledEmptyStateWarning>\n      <PrimaryMessage>{t('No results found')}</PrimaryMessage>\n      <SecondaryMessage>\n        {t(\n          'Transactions may not be listed due to the filters above or a low sampling rate'\n        )}\n      </SecondaryMessage>\n    </StyledEmptyStateWarning>\n  );\n}\n\nexport function WidgetAddInstrumentationWarning() {\n  const pageFilters = usePageFilters();\n  const fullProjects = useProjects();\n\n  const projects = pageFilters.selection.projects;\n\n  const isMultiProject = getIsMultiProject(projects);\n\n  if (isMultiProject) {\n    return <WidgetEmptyStateWarning />;\n  }\n\n  const project = fullProjects.projects.find(p => p.id === '' + projects[0]);\n  const url = getConfigureIntegrationsDocsLink(project);\n\n  if (!url) {\n    return <WidgetEmptyStateWarning />;\n  }\n\n  return (\n    <StyledEmptyStateWarning>\n      <PrimaryMessage>{t('No results found')}</PrimaryMessage>\n      <SecondaryMessage>\n        {tct(\n          'No transactions with Database or HTTP spans found, you may need to [added].',\n          {\n            added: <ExternalLink href={url}>{t('add integrations')}</ExternalLink>,\n          }\n        )}\n      </SecondaryMessage>\n    </StyledEmptyStateWarning>\n  );\n}\n\nexport function ListClose(props: {\n  onClick: () => void;\n  setSelectListIndex: (n: number) => void;\n}) {\n  return (\n    <StyledTooltip title={t('Exclude this transaction from the search filter.')}>\n      <StyledIconClose\n        onClick={() => {\n          props.onClick();\n          props.setSelectListIndex(0);\n        }}\n      />\n    </StyledTooltip>\n  );\n}\n\nconst StyledTooltip = styled(Tooltip)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledIconClose = styled(IconClose)`\n  cursor: pointer;\n  color: ${p => p.theme.gray200};\n`;\n\nconst StyledEmptyStateWarning = styled(EmptyStateWarning)`\n  min-height: 300px;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst PrimaryMessage = styled('span')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  color: ${p => p.theme.gray300};\n  font-weight: 600;\n  margin: 0 auto ${space(1)};\n`;\n\nconst SecondaryMessage = styled('p')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.gray300};\n  max-width: 300px;\n`;\n\nconst ListItemContainer = styled('div')`\n  display: flex;\n  border-top: 1px solid ${p => p.theme.border};\n  padding: ${space(1)} ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ItemRadioContainer = styled('div')`\n  grid-row: 1/3;\n  input {\n    cursor: pointer;\n  }\n  input:checked::after {\n    background-color: ${p => p.color};\n  }\n`;\n"],"names":["StyledPanel","_styled","Panel","target","space","Div","_ref","containerType","DataStateSwitch","props","isErrored","errorComponent","isLoading","loadingComponent","hasData","_jsx","Fragment","children","dataComponents","emptyComponent","displayName","QueryHandler","queries","length","filter","q","enabled","widgetData","map","query","SingleQueryHandler","queryKey","globalSelection","queryProps","eventView","getPageFilters","start","datetime","getUtcToLocalDateObject","end","useEffect","removeWidgetDataForKey","component","fields","yAxis","period","project","projects","environment","environments","organization","orgSlug","slug","getQueryWithAdditionalConditions","referrer","setting","chartSetting","replace","results","QueryResultSaver","mepContext","useMEPDataContext","transformed","transform","isMetricsData","getIsMetricsDataFromResults","setIsMetricsData","setWidgetDataForKey","WidgetHeader","title","titleTooltip","Subtitle","HeaderActions","InteractiveTitle","_jsxs","WidgetHeaderContainer","TitleContainer","StyledHeaderTitleLegend","TextOverflow","MEPTag","QuestionTooltip","position","size","HeaderActionsContainer","HeaderTitleLegend","name","styles","GenericPerformanceWidget","allWidgetData","setWidgetData","useState","widgetDataRef","useRef","useCallback","dataKey","result","newWidgetData","current","widgetProps","Object","entries","Queries","key","definition","api","useApi","totalHeight","Visualizations","reduce","acc","curr","height","MEPDataProvider","DataDisplay","chartHeight","EmptyComponent","Container","getPerformanceWidgetContainer","numberKeys","keys","missingDataKeys","values","every","d","some","ContentContainer","DefaultErrorComponent","Visualization","index","noPadding","bottomPadding","onClick","trackDataComponentClicks","trackAnalytics","widget_type","getDynamicText","value","grid","defaultGrid","queryFields","fixed","Placeholder","PerformanceWidgetPlaceholder","ErrorPanel","IconWarning","color","left","right","top","bottom","p","defaultProps","SelectableList","items","item","_createElement","SelectableItem","isSelected","selectedIndex","currentIndex","setSelectedIndex","radioColor","ListItemContainer","ItemRadioContainer","RadioLineItem","role","Radio","checked","onChange","RightAlignedCell","theme","gray300","fontSizeMedium","GrowLink","Link","WidgetEmptyStateWarning","StyledEmptyStateWarning","PrimaryMessage","t","SecondaryMessage","WidgetAddInstrumentationWarning","pageFilters","usePageFilters","fullProjects","useProjects","selection","getIsMultiProject","find","id","url","getConfigureIntegrationsDocsLink","tct","added","ExternalLink","href","ListClose","StyledTooltip","StyledIconClose","setSelectListIndex","Tooltip","IconClose","gray200","EmptyStateWarning","fontSizeExtraLarge","border"],"sourceRoot":""}