{"version":3,"file":"chunks/app_gettingStartedDocs_php_laravel_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/gettingStartedDocs/php/laravel.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nconst introduction = (\n  <p>\n    {tct(\n      'This guide is for Laravel 8+. We also provide instructions for [otherVersionsLink:other versions] as well as [lumenSpecificLink:Lumen-specific instructions].',\n      {\n        otherVersionsLink: (\n          <ExternalLink href=\"https://docs.sentry.io/platforms/php/guides/laravel/other-versions/\" />\n        ),\n        lumenSpecificLink: (\n          <ExternalLink href=\"https://docs.sentry.io/platforms/php/guides/laravel/other-versions/lumen/\" />\n        ),\n      }\n    )}\n  </p>\n);\n\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    configurations: [\n      {\n        description: (\n          <p>\n            {tct('Install the [code:sentry/sentry-laravel] package:', {\n              code: <code />,\n            })}\n          </p>\n        ),\n        language: 'bash',\n        code: `composer require sentry/sentry-laravel`,\n      },\n      {\n        description: (\n          <p>\n            {tct(\n              'Enable capturing unhandled exception to report to Sentry by making the following change to your [code:App/Exceptions/Handler.php]:',\n              {\n                code: <code />,\n              }\n            )}\n          </p>\n        ),\n        language: 'php',\n        code: `\npublic function register() {\n  $this->reportable(function (Throwable $e) {\n    if (app()->bound('sentry')) {\n      app('sentry')->captureException($e);\n    }\n  });\n}\n        `,\n      },\n    ],\n    additionalInfo: (\n      <p>\n        {tct(\n          'Alternatively, you can configure Sentry in your [laravelLogChannelLink:Laravel Log Channel], allowing you to log [codeInfo:info] and [codeDebug:debug] as well.',\n          {\n            codeInfo: <code />,\n            codeDebug: <code />,\n            laravelLogChannelLink: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/php/guides/laravel/usage/#log-channels\" />\n            ),\n          }\n        )}\n      </p>\n    ),\n  },\n  {\n    type: StepType.CONFIGURE,\n    configurations: [\n      {\n        description: t('Configure the Sentry DSN with this command:'),\n        language: 'shell',\n        code: `php artisan sentry:publish --dsn=${dsn}`,\n      },\n      {\n        description: (\n          <p>\n            {tct(\n              'It creates the config file ([sentryPHPCode:config/sentry.php]) and adds the [dsnCode:DSN] to your \".env\" file.',\n              {dsnCode: <code />, sentryPHPCode: <code />}\n            )}\n          </p>\n        ),\n        language: 'shell',\n        code: `php artisan sentry:publish --dsn=${dsn}`,\n      },\n    ],\n  },\n  {\n    type: StepType.VERIFY,\n    configurations: [\n      {\n        description: <h5>{t('Verify With Artisan')}</h5>,\n        configurations: [\n          {\n            description: (\n              <p>\n                {tct(\n                  'You can test your configuration using the provided [code:sentry:test] artisan command:',\n                  {\n                    code: <code />,\n                  }\n                )}\n              </p>\n            ),\n            language: 'shell',\n            code: 'php artisan sentry:test',\n          },\n        ],\n      },\n      {\n        description: <h5>{t('Verify With Code')}</h5>,\n        configurations: [\n          {\n            description: t(\n              'You can verify that Sentry is capturing errors in your Laravel application by creating a route that will throw an exception:'\n            ),\n            language: 'php',\n            code: `\nRoute::get('/debug-sentry', function () {\n    throw new Exception('My first Sentry error!');\n});\n            `,\n            additionalInfo: t(\n              'Visiting this route will trigger an exception that will be captured by Sentry.'\n            ),\n          },\n        ],\n      },\n    ],\n  },\n  {\n    title: t('Performance Monitoring'),\n    configurations: [\n      {\n        description: (\n          <p>\n            {tct(\n              'Set [tracesSampleRateCode:traces_sample_rate] in [sentryPhpCode:config/sentry.php] or [sentryTracesSampleRateCode:SENTRY_TRACES_SAMPLE_RATE] in your \".env\" to a value greater than \"0.0\". Setting a value greater than \"0.0\" will enable Performance Monitoring, \"0\" (the default) will disable Performance Monitoring.',\n              {\n                tracesSampleRateCode: <code />,\n                sentryPhpCode: <code />,\n                sentryTracesSampleRateCode: <code />,\n              }\n            )}\n          </p>\n        ),\n        language: 'shell',\n        code: `\n# Be sure to lower this value in production otherwise you could burn through your quota quickly.\nSENTRY_TRACES_SAMPLE_RATE=1.0\n        `,\n        additionalInfo: (\n          <Fragment>\n            {t(\n              'The example configuration above will transmit 100% of captured traces. Be sure to lower this value in production or you could use up your quota quickly.'\n            )}\n            <p>\n              {tct(\n                'You can also be more granular with the sample rate by using the traces_sampler option. Learn more in [usingSampleToFilterLink:Using Sampling to Filter Transaction Events].',\n                {\n                  usingSampleToFilterLink: (\n                    <ExternalLink href=\"https://docs.sentry.io/platforms/php/guides/laravel/configuration/filtering/#using-sampling-to-filter-transaction-events\" />\n                  ),\n                }\n              )}\n            </p>\n            <p>\n              {tct(\n                \"Performance data is transmitted using a new event type called 'transactions', which you can learn about in Distributed Tracing.\",\n                {\n                  distributedTracingLink: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/tracing/distributed-tracing/#traces-transactions-and-spans\" />\n                  ),\n                }\n              )}\n            </p>\n          </Fragment>\n        ),\n      },\n    ],\n  },\n  {\n    title: t('Local Development and Testing'),\n    description: (\n      <Fragment>\n        {t(\n          'When Sentry is installed in your application, it will also be active when you are developing or running tests.'\n        )}\n        <p>\n          {tct(\n            \"You most likely don't want errors to be sent to Sentry when you are developing or running tests. To avoid this, set the DSN value to [code:null] to disable sending errors to Sentry.\",\n            {\n              code: <code />,\n            }\n          )}\n        </p>\n        <p>\n          {tct(\n            'You can also do this by not defining [sentryLaravelDsnCode:SENTRY_LARAVEL_DSN] in your [envCode:.env] or by defining it as [sentryLaravelDsnNullCode:SENTRY_LARAVEL_DSN=null].',\n            {\n              sentryLaravelDsnNullCode: <code />,\n              envCode: <code />,\n              sentryLaravelDsnCode: <code />,\n            }\n          )}\n        </p>\n        <p>\n          {t(\n            \"If you do leave Sentry enabled when developing or running tests, it's possible for it to have a negative effect on the performance of your application or test suite.\"\n          )}\n        </p>\n      </Fragment>\n    ),\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithLaravel({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} introduction={introduction} {...props} />;\n}\n\nexport default GettingStartedWithLaravel;\n"],"names":["introduction","_jsx","children","tct","otherVersionsLink","ExternalLink","href","lumenSpecificLink","steps","dsn","arguments","length","undefined","type","StepType","INSTALL","configurations","description","code","language","additionalInfo","codeInfo","codeDebug","laravelLogChannelLink","CONFIGURE","t","dsnCode","sentryPHPCode","VERIFY","title","tracesSampleRateCode","sentryPhpCode","sentryTracesSampleRateCode","_jsxs","Fragment","usingSampleToFilterLink","distributedTracingLink","sentryLaravelDsnNullCode","envCode","sentryLaravelDsnCode","GettingStartedWithLaravel","_ref","props","Layout","displayName"],"sourceRoot":""}