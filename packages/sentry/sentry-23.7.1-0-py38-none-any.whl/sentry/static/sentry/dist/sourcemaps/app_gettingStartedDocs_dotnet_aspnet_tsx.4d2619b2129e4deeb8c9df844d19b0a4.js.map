{"version":3,"file":"chunks/app_gettingStartedDocs_dotnet_aspnet_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6wBAaO,MAAMA,EAAQ,eAAC,IACpBC,GAGDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAA2B,CAC/B,CACEG,KAAMC,EAAAA,GAASC,QACfC,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IAAI,sCAAuC,CAC1CC,QAAQH,EAAAA,EAAAA,IAAA,iBAIdI,eAAgB,CACd,CACEC,SAAU,QACVN,aAAaO,EAAAA,EAAAA,GAAE,oBACfC,KAAM,iDAER,CACEF,SAAU,QACVN,aAAaO,EAAAA,EAAAA,GAAE,6BACfC,KAAM,2DAGVC,gBACER,EAAAA,EAAAA,IAACS,EAAwB,CAACb,KAAK,OAAMK,UAClCC,EAAAA,EAAAA,IACC,wGACA,CAACC,QAAQH,EAAAA,EAAAA,IAAA,kBAKjB,CACEJ,KAAMC,EAAAA,GAASa,UACfX,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,8IACA,CACES,UAAUX,EAAAA,EAAAA,IAAA,WACVY,YAAYZ,EAAAA,EAAAA,IAAA,eAKpBI,eAAgB,CACd,CACEC,SAAU,SACVE,KAAO,8gBAmBQf,q6BAmCrB,CACEqB,OAAOP,EAAAA,EAAAA,GAAE,iBACTP,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,sIACA,CACEY,MACEd,EAAAA,EAAAA,IAACe,EAAAA,EAAY,CAACC,KAAK,gEAO/B,CACEH,OAAOP,EAAAA,EAAAA,GAAE,WACTP,aACEkB,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAjB,SAAA,EACNK,EAAAA,EAAAA,GACC,iGAEFW,EAAAA,EAAAA,IAACE,EAAAA,EAAI,CAACC,OAAO,SAAQnB,SAAA,EACnBD,EAAAA,EAAAA,IAACqB,EAAAA,EAAQ,CAAApB,UACNC,EAAAA,EAAAA,IACC,4EACA,CACEY,MACEd,EAAAA,EAAAA,IAACe,EAAAA,EAAY,CAACC,KAAK,iEAErBT,MAAMP,EAAAA,EAAAA,IAAA,WACNG,QAAQH,EAAAA,EAAAA,IAAA,kBAIdA,EAAAA,EAAAA,IAACqB,EAAAA,EAAQ,CAAApB,UACNC,EAAAA,EAAAA,IAAI,uCAAwC,CAC3CY,MAAMd,EAAAA,EAAAA,IAACe,EAAAA,EAAY,CAACC,KAAK,2CACzBb,QAAQH,EAAAA,EAAAA,IAAA,wBAOrB,EAGM,SAASsB,EAAwBC,GAA+B,IAA9B,IAAC/B,KAAQgC,GAAmBD,EACnE,OAAOvB,EAAAA,EAAAA,IAACyB,EAAAA,EAAM,CAAClC,MAAOA,EAAM,CAACC,WAAWgC,GAC1C,CAFgBF,EAAwBI,YAAA,2BAIxC,UAEMjB,GAA2BkB,EAAAA,EAAAA,GAAOC,EAAAA,GAAK,CAAAC,OAAA,YAAZF,CAAa,CAAAG,KAAA,UAAAC,OAAA,mB","sources":["webpack:///./app/gettingStartedDocs/dotnet/aspnet.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Alert} from 'sentry/components/alert';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: (\n      <p>\n        {tct('Install the [strong:NuGet] package:', {\n          strong: <strong />,\n        })}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'shell',\n        description: t('Package Manager:'),\n        code: 'Install-Package Sentry.AspNet -Version 3.34.0',\n      },\n      {\n        language: 'shell',\n        description: t('Using Entity Framework 6?'),\n        code: 'Install-Package Sentry.EntityFramework -Version 3.34.0',\n      },\n    ],\n    additionalInfo: (\n      <AlertWithoutMarginBottom type=\"info\">\n        {tct(\n          '[strong:Using .NET Framework prior to 4.6.1?] Our legacy SDK supports .NET Framework as early as 3.5.',\n          {strong: <strong />}\n        )}\n      </AlertWithoutMarginBottom>\n    ),\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: (\n      <p>\n        {tct(\n          'You should [initCode:init] the Sentry SDK as soon as possible during your application load by adding Sentry to [globalCode:Global.asax.cs]:',\n          {\n            initCode: <code />,\n            globalCode: <code />,\n          }\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'csharp',\n        code: `\nusing System;\nusing System.Configuration;\nusing System.Web.Mvc;\nusing System.Web.Routing;\nusing Sentry;\nusing Sentry.AspNet;\nusing Sentry.EntityFramework; // if you installed Sentry.EntityFramework\n\npublic class MvcApplication : HttpApplication\n{\n    private IDisposable _sentry;\n\n    protected void Application_Start()\n    {\n        // Initialize Sentry to capture AppDomain unhandled exceptions and more.\n        _sentry = SentrySdk.Init(o =>\n        {\n            o.AddAspNet();\n            o.Dsn = \"${dsn}\";\n            // When configuring for the first time, to see what the SDK is doing:\n            o.Debug = true;\n            // Set TracesSampleRate to 1.0 to capture 100%\n            // of transactions for performance monitoring.\n            // We recommend adjusting this value in production\n            o.TracesSampleRate = 1.0;\n            // If you are using EF (and installed the NuGet package):\n            o.AddEntityFramework();\n        });\n    }\n\n    // Global error catcher\n    protected void Application_Error() => Server.CaptureLastError();\n\n    protected void Application_BeginRequest()\n    {\n        Context.StartSentryTransaction();\n    }\n\n    protected void Application_EndRequest()\n    {\n        Context.FinishSentryTransaction();\n    }\n\n    protected void Application_End()\n    {\n        // Flushes out events before shutting down.\n        _sentry?.Dispose();\n    }\n}\n        `,\n      },\n    ],\n  },\n  {\n    title: t('Documentation'),\n    description: (\n      <p>\n        {tct(\n          \"Once you've verified the package is initialized properly and sent a test event, consider visiting our [link:complete ASP.NET docs].\",\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/dotnet/guides/aspnet/\" />\n            ),\n          }\n        )}\n      </p>\n    ),\n  },\n  {\n    title: t('Samples'),\n    description: (\n      <Fragment>\n        {t(\n          'See the following examples that demonstrate how to integrate Sentry with various frameworks.'\n        )}\n        <List symbol=\"bullet\">\n          <ListItem>\n            {tct(\n              '[link:Multiple samples in the [code:dotnet] SDK repository] [strong:(C#)]',\n              {\n                link: (\n                  <ExternalLink href=\"https://github.com/getsentry/sentry-dotnet/tree/main/samples\" />\n                ),\n                code: <code />,\n                strong: <strong />,\n              }\n            )}\n          </ListItem>\n          <ListItem>\n            {tct('[link:Basic F# sample] [strong:(F#)]', {\n              link: <ExternalLink href=\"https://github.com/sentry-demos/fsharp\" />,\n              strong: <strong />,\n            })}\n          </ListItem>\n        </List>\n      </Fragment>\n    ),\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithAspnet({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} {...props} />;\n}\n\nexport default GettingStartedWithAspnet;\n\nconst AlertWithoutMarginBottom = styled(Alert)`\n  margin-bottom: 0;\n`;\n"],"names":["steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","_jsx","children","tct","strong","configurations","language","t","code","additionalInfo","AlertWithoutMarginBottom","CONFIGURE","initCode","globalCode","title","link","ExternalLink","href","_jsxs","Fragment","List","symbol","ListItem","GettingStartedWithAspnet","_ref","props","Layout","displayName","_styled","Alert","target","name","styles"],"sourceRoot":""}