{"version":3,"file":"chunks/app_components_group_tagFacets_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/group/tagFacets/index.tsx","webpack:///./app/components/group/tagFacets/tagFacetsDistributionMeter.tsx"],"sourcesContent":["import {Fragment, ReactNode, useMemo} from 'react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\nimport keyBy from 'lodash/keyBy';\n\nimport {GroupTagResponseItem} from 'sentry/actionCreators/group';\nimport LoadingError from 'sentry/components/loadingError';\nimport Placeholder from 'sentry/components/placeholder';\nimport * as SidebarSection from 'sentry/components/sidebarSection';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconQuestion} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Event, Organization, Project} from 'sentry/types';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport {appendTagCondition} from 'sentry/utils/queryString';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport {useFetchIssueTagsForDetailsPage} from 'sentry/views/issueDetails/utils';\n\nimport TagFacetsDistributionMeter from './tagFacetsDistributionMeter';\n\nexport const MOBILE_TAGS = [\n  'device',\n  'device.class',\n  'os',\n  'release',\n  'environment',\n  'transaction',\n];\n\nexport const FRONTEND_TAGS = ['browser', 'transaction', 'release', 'url', 'environment'];\n\nexport const BACKEND_TAGS = [\n  'transaction',\n  'url',\n  'user',\n  'release',\n  'organization.slug',\n];\n\nexport const DEFAULT_TAGS = ['transaction', 'environment', 'release'];\n\nexport function TAGS_FORMATTER(tagsData: Record<string, GroupTagResponseItem>) {\n  // For \"release\" tag keys, format the release tag value to be more readable (ie removing version prefix)\n  const transformedTagsData = {};\n  Object.keys(tagsData).forEach(tagKey => {\n    if (tagKey === 'release') {\n      transformedTagsData[tagKey] = {\n        ...tagsData[tagKey],\n        topValues: tagsData[tagKey].topValues.map(topValue => {\n          return {\n            ...topValue,\n            name: formatVersion(topValue.name),\n          };\n        }),\n      };\n    } else if (tagKey === 'device') {\n      transformedTagsData[tagKey] = {\n        ...tagsData[tagKey],\n        topValues: tagsData[tagKey].topValues.map(topValue => {\n          return {\n            ...topValue,\n            name: topValue.readable ?? topValue.name,\n          };\n        }),\n      };\n    } else {\n      transformedTagsData[tagKey] = tagsData[tagKey];\n    }\n  });\n  return transformedTagsData;\n}\n\ntype Props = {\n  environments: string[];\n  groupId: string;\n  project: Project;\n  tagKeys: string[];\n  event?: Event;\n  tagFormatter?: (\n    tagsData: Record<string, GroupTagResponseItem>\n  ) => Record<string, GroupTagResponseItem>;\n};\n\nexport default function TagFacets({\n  tagKeys,\n  environments,\n  groupId,\n  tagFormatter,\n  project,\n}: Props) {\n  const organization = useOrganization();\n\n  const {isLoading, isError, data, refetch} = useFetchIssueTagsForDetailsPage({\n    groupId,\n    environment: environments,\n  });\n\n  const tagsData = useMemo(() => {\n    if (!data) {\n      return {};\n    }\n\n    const keyed = keyBy(data, 'key');\n    const formatted = tagFormatter?.(keyed) ?? keyed;\n\n    if (!organization.features.includes('device-classification')) {\n      delete formatted['device.class'];\n    }\n\n    return formatted;\n  }, [data, tagFormatter, organization]);\n\n  const topTagKeys = tagKeys.filter(tagKey => Object.keys(tagsData).includes(tagKey));\n  const remainingTagKeys = Object.keys(tagsData)\n    .filter(tagKey => !tagKeys.includes(tagKey))\n    .sort();\n\n  if (isLoading) {\n    return (\n      <WrapperWithTitle>\n        <TagPlaceholders>\n          <Placeholder height=\"40px\" />\n          <Placeholder height=\"40px\" />\n          <Placeholder height=\"40px\" />\n          <Placeholder height=\"40px\" />\n        </TagPlaceholders>\n      </WrapperWithTitle>\n    );\n  }\n\n  if (isError) {\n    return (\n      <WrapperWithTitle>\n        <LoadingError\n          message={t('There was an error loading tags for this issue.')}\n          onRetry={refetch}\n        />\n      </WrapperWithTitle>\n    );\n  }\n\n  return (\n    <WrapperWithTitle>\n      <Fragment>\n        {Object.keys(tagsData).length === 0 ? (\n          <NoTagsFoundContainer data-test-id=\"no-tags\">\n            {environments.length\n              ? t('No tags found in the selected environments')\n              : t('No tags found')}\n          </NoTagsFoundContainer>\n        ) : (\n          <Content>\n            <span data-test-id=\"top-distribution-wrapper\">\n              <TagFacetsDistributionMeterWrapper\n                groupId={groupId}\n                organization={organization}\n                project={project}\n                tagKeys={topTagKeys}\n                tagsData={tagsData}\n                expandFirstTag\n              />\n            </span>\n            <TagFacetsDistributionMeterWrapper\n              groupId={groupId}\n              organization={organization}\n              project={project}\n              tagKeys={remainingTagKeys}\n              tagsData={tagsData}\n            />\n          </Content>\n        )}\n      </Fragment>\n    </WrapperWithTitle>\n  );\n}\n\nfunction WrapperWithTitle({children}: {children: ReactNode}) {\n  return (\n    <SidebarSection.Wrap>\n      <SidebarSection.Title>\n        {t('All Tags')}\n        <TooltipWrapper>\n          <Tooltip\n            title={t('The tags associated with all events in this issue')}\n            disableForVisualTest\n          >\n            <IconQuestion size=\"sm\" color=\"gray200\" />\n          </Tooltip>\n        </TooltipWrapper>\n      </SidebarSection.Title>\n      {children}\n    </SidebarSection.Wrap>\n  );\n}\n\nfunction TagFacetsDistributionMeterWrapper({\n  groupId,\n  organization,\n  project,\n  tagKeys,\n  tagsData,\n  expandFirstTag,\n}: {\n  groupId: string;\n  organization: Organization;\n  project: Project;\n  tagKeys: string[];\n  tagsData: Record<string, GroupTagResponseItem>;\n  expandFirstTag?: boolean;\n}) {\n  const location = useLocation();\n  const query = {...location.query};\n  return (\n    <TagFacetsList>\n      {tagKeys.map((tagKey, index) => {\n        const tagWithTopValues = tagsData[tagKey];\n        const topValues = tagWithTopValues ? tagWithTopValues.topValues : [];\n        const topValuesTotal = tagWithTopValues ? tagWithTopValues.totalValues : 0;\n\n        const otherTagValuesUrl = `/organizations/${organization.slug}/issues/${groupId}/tags/${tagKey}/?referrer=tag-distribution-meter`;\n        const eventsPath = `/organizations/${organization.slug}/issues/${groupId}/events/`;\n\n        const segments = topValues\n          ? topValues.map(value => {\n              // Create a link to the events page with a tag condition on the selected value\n              const url: LocationDescriptor = {\n                ...location,\n                query: {\n                  ...query,\n                  query: appendTagCondition(null, tagKey, value.value),\n                },\n                pathname: eventsPath,\n              };\n\n              return {\n                ...value,\n                url,\n              };\n            })\n          : [];\n\n        return (\n          <li key={tagKey} aria-label={tagKey}>\n            <TagFacetsDistributionMeter\n              title={tagKey}\n              totalValues={topValuesTotal}\n              segments={segments}\n              onTagClick={() => undefined}\n              project={project}\n              expandByDefault={expandFirstTag && index === 0}\n              otherUrl={otherTagValuesUrl}\n            />\n          </li>\n        );\n      })}\n    </TagFacetsList>\n  );\n}\n\nconst TagPlaceholders = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-auto-flow: row;\n  margin-top: ${space(1)};\n`;\n\nconst Content = styled('div')`\n  margin-top: ${space(2)};\n`;\n\nconst NoTagsFoundContainer = styled('p')`\n  margin-top: ${space(0.5)};\n`;\n\nexport const TagFacetsList = styled('ol')`\n  list-style: none;\n  padding: 0;\n  margin: 0 0 ${space(2)};\n`;\n\nconst TooltipWrapper = styled('span')`\n  vertical-align: middle;\n  padding-left: ${space(0.5)};\n`;\n","import {useState} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\nimport {motion} from 'framer-motion';\nimport {LocationDescriptor} from 'history';\nimport debounce from 'lodash/debounce';\n\nimport {TagSegment} from 'sentry/actionCreators/events';\nimport {Button} from 'sentry/components/button';\nimport Link from 'sentry/components/links/link';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconChevron} from 'sentry/icons/iconChevron';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {percent} from 'sentry/utils';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport {isMobilePlatform} from 'sentry/utils/platform';\nimport {appendExcludeTagValuesCondition} from 'sentry/utils/queryString';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nconst COLORS = ['#402A65', '#694D99', '#9A81C4', '#BBA6DF', '#EAE2F8'];\nconst MAX_SEGMENTS = 4;\nconst TOOLTIP_DELAY = 800;\n\ntype Props = {\n  segments: TagSegment[];\n  title: string;\n  totalValues: number;\n  colors?: string[];\n  expandByDefault?: boolean;\n  onTagClick?: (title: string, value: TagSegment) => void;\n  otherUrl?: LocationDescriptor;\n  project?: Project;\n};\n\nconst _debounceTrackHover = debounce(\n  ({\n    tag,\n    value,\n    platform,\n    is_mobile,\n    organization,\n  }: {\n    is_mobile: boolean;\n    organization: Organization;\n    tag: string;\n    value: string;\n    platform?: string;\n  }) => {\n    trackAnalytics('issue_group_details.tags.bar.hovered', {\n      tag,\n      value,\n      platform,\n      is_mobile,\n      organization,\n    });\n  },\n  300\n);\n\nfunction TagFacetsDistributionMeter({\n  colors = COLORS,\n  segments,\n  title,\n  totalValues,\n  onTagClick,\n  project,\n  expandByDefault,\n  otherUrl,\n}: Props) {\n  const location = useLocation();\n  const organization = useOrganization();\n  const [expanded, setExpanded] = useState<boolean>(!!expandByDefault);\n  const [hoveredValue, setHoveredValue] = useState<TagSegment | null>(null);\n  const topSegments = segments.slice(0, MAX_SEGMENTS);\n\n  function renderTitle() {\n    if (!Array.isArray(segments) || segments.length <= 0) {\n      return (\n        <Title>\n          <TitleType>{title}</TitleType>\n        </Title>\n      );\n    }\n\n    return (\n      <Title>\n        <TitleType>{title}</TitleType>\n        <Tooltip\n          skipWrapper\n          delay={TOOLTIP_DELAY}\n          title={topSegments[0].name || t('n/a')}\n        >\n          <TitleDescription>{topSegments[0].name || t('n/a')}</TitleDescription>\n        </Tooltip>\n        <ExpandToggleButton\n          borderless\n          size=\"zero\"\n          icon={<IconChevron direction={expanded ? 'up' : 'down'} size=\"xs\" />}\n          aria-label={t(\n            '%s %s tag distribution',\n            expanded ? 'Collapse' : 'Expand',\n            title\n          )}\n        />\n      </Title>\n    );\n  }\n\n  function renderSegments() {\n    if (totalValues === 0) {\n      return (\n        <SegmentBar>\n          <p>{t('No recent data.')}</p>\n        </SegmentBar>\n      );\n    }\n\n    return (\n      <SegmentBar>\n        {topSegments.map((value, index) => {\n          const pct = percent(value.count, totalValues);\n          const pctLabel = Math.floor(pct);\n          const segmentProps = {\n            index,\n            onClick: () => {\n              trackAnalytics('issue_group_details.tags.bar.clicked', {\n                tag: title,\n                value: value.value,\n                platform: project?.platform,\n                is_mobile: isMobilePlatform(project?.platform),\n                organization,\n              });\n              return onTagClick?.(title, value);\n            },\n          };\n          return (\n            <div\n              key={value.isOther ? 'other' : `segment-${value.value}`}\n              style={{width: pct + '%'}}\n              onMouseOver={() => {\n                setHoveredValue(value);\n                _debounceTrackHover({\n                  tag: title,\n                  value: value.value,\n                  platform: project?.platform,\n                  is_mobile: isMobilePlatform(project?.platform),\n                  organization,\n                });\n              }}\n              onMouseLeave={() => setHoveredValue(null)}\n            >\n              {value.isOther ? (\n                <OtherSegment\n                  aria-label={t('Other segment')}\n                  color={colors[colors.length - 1]}\n                />\n              ) : (\n                <Segment\n                  aria-label={`${value.value} ${t('segment')}`}\n                  color={colors[index]}\n                  {...segmentProps}\n                >\n                  {/* if the first segment is 6% or less, the label won't fit cleanly into the segment, so don't show the label */}\n                  {index === 0 && pctLabel > 6 ? `${pctLabel}%` : null}\n                </Segment>\n              )}\n            </div>\n          );\n        })}\n      </SegmentBar>\n    );\n  }\n\n  function renderLegend() {\n    return (\n      <LegendAnimateContainer\n        expanded={expanded}\n        animate={expanded ? {height: '100%', opacity: 1} : {height: '0', opacity: 0}}\n      >\n        <LegendContainer>\n          {topSegments.map((segment, index) => {\n            const pctLabel = Math.floor(percent(segment.count, totalValues));\n            const unfocus = !!hoveredValue && hoveredValue.value !== segment.value;\n            const focus = hoveredValue?.value === segment.value;\n            const linkLabel = segment.isOther\n              ? t(\n                  'Other %s tag values, %s of all events. View other tags.',\n                  title,\n                  `${pctLabel}%`\n                )\n              : t(\n                  '%s, %s, %s of all events. View events with this tag value.',\n                  title,\n                  segment.value,\n                  `${pctLabel}%`\n                );\n            return (\n              <li key={`segment-${segment.name}-${index}`}>\n                <Link to={segment.url} aria-label={linkLabel}>\n                  <LegendRow\n                    onMouseOver={() => setHoveredValue(segment)}\n                    onMouseLeave={() => setHoveredValue(null)}\n                  >\n                    <LegendDot\n                      color={colors[segment.isOther ? colors.length - 1 : index]}\n                      focus={focus}\n                    />\n                    <Tooltip skipWrapper delay={TOOLTIP_DELAY} title={segment.name}>\n                      <LegendText unfocus={unfocus}>\n                        {segment.name ?? (\n                          <NotApplicableLabel>{t('n/a')}</NotApplicableLabel>\n                        )}\n                      </LegendText>\n                    </Tooltip>\n                    {<LegendPercent>{`${pctLabel}%`}</LegendPercent>}\n                  </LegendRow>\n                </Link>\n              </li>\n            );\n          })}\n        </LegendContainer>\n      </LegendAnimateContainer>\n    );\n  }\n\n  const totalVisible = topSegments.reduce((sum, value) => sum + value.count, 0);\n  const hasOther = totalVisible < totalValues;\n\n  const query = appendExcludeTagValuesCondition(\n    location.query.query,\n    title,\n    topSegments.map(({value}) => value)\n  );\n  const excludeTopSegmentsUrl: LocationDescriptor = {\n    ...location,\n    query: {...location.query, query},\n  };\n\n  if (hasOther) {\n    topSegments.push({\n      isOther: true,\n      name: t('Other'),\n      value: 'other',\n      count: totalValues - totalVisible,\n      url: otherUrl ?? excludeTopSegmentsUrl ?? '',\n    });\n  }\n\n  return (\n    <TagSummary>\n      <details open aria-expanded={expanded} onClick={e => e.preventDefault()}>\n        <StyledSummary>\n          <TagHeader clickable onClick={() => setExpanded(!expanded)}>\n            {renderTitle()}\n            {renderSegments()}\n          </TagHeader>\n        </StyledSummary>\n        {renderLegend()}\n      </details>\n    </TagSummary>\n  );\n}\n\nexport default TagFacetsDistributionMeter;\n\nconst TagSummary = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nconst TagHeader = styled('span')<{clickable?: boolean}>`\n  ${p => (p.clickable ? 'cursor: pointer' : null)};\n`;\n\nconst SegmentBar = styled('div')`\n  display: flex;\n  overflow: hidden;\n`;\n\nconst Title = styled('div')`\n  display: flex;\n  font-size: ${p => p.theme.fontSizeMedium};\n  justify-content: space-between;\n  margin-bottom: ${space(0.25)};\n  line-height: 1.1;\n`;\n\nconst TitleType = styled('div')`\n  flex: none;\n  color: ${p => p.theme.textColor};\n  font-weight: bold;\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(1)};\n  align-self: center;\n`;\n\nconst TitleDescription = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  display: flex;\n  color: ${p => p.theme.gray300};\n  text-align: right;\n  font-size: ${p => p.theme.fontSizeMedium};\n  ${p => p.theme.overflowEllipsis};\n  align-self: center;\n`;\n\nconst OtherSegment = styled('span')<{color: string}>`\n  display: block;\n  width: 100%;\n  height: ${space(2)};\n  color: inherit;\n  outline: none;\n  background-color: ${p => p.color};\n`;\n\nconst Segment = styled('span', {shouldForwardProp: isPropValid})<{color: string}>`\n  &:hover {\n    color: ${p => p.theme.white};\n  }\n  display: block;\n  width: 100%;\n  height: ${space(2)};\n  color: ${p => p.theme.white};\n  outline: none;\n  background-color: ${p => p.color};\n  text-align: right;\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  padding: 1px ${space(0.5)} 0 0;\n`;\n\nconst LegendAnimateContainer = styled(motion.div, {\n  shouldForwardProp: prop =>\n    prop === 'animate' || (prop !== 'expanded' && isPropValid(prop)),\n})<{expanded: boolean}>`\n  height: 0;\n  opacity: 0;\n  ${p => (!p.expanded ? 'overflow: hidden;' : '')}\n`;\n\nconst LegendContainer = styled('ol')`\n  list-style: none;\n  padding: 0;\n  margin: ${space(1)} 0;\n`;\n\nconst LegendRow = styled('div')`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: ${space(0.5)} 0;\n`;\n\nconst LegendDot = styled('span')<{color: string; focus: boolean}>`\n  padding: 0;\n  position: relative;\n  width: 11px;\n  height: 11px;\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => p.color};\n  &:after {\n    content: '';\n    border-radius: 50%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    outline: ${p => p.theme.gray100} ${space(0.5)} solid;\n    opacity: ${p => (p.focus ? '1' : '0')};\n    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nconst LegendText = styled('span')<{unfocus: boolean}>`\n  font-size: ${p => p.theme.fontSizeSmall};\n  margin-left: ${space(1)};\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  transition: color 0.3s;\n  color: ${p => (p.unfocus ? p.theme.gray300 : p.theme.gray400)};\n`;\n\nconst LegendPercent = styled('span')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  margin-left: ${space(1)};\n  color: ${p => p.theme.gray300};\n  text-align: right;\n  flex-grow: 1;\n`;\n\nconst ExpandToggleButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n  margin-left: ${space(0.5)};\n`;\n\nconst NotApplicableLabel = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst StyledSummary = styled('summary')`\n  &::-webkit-details-marker {\n    display: none;\n  }\n`;\n"],"names":["MOBILE_TAGS","FRONTEND_TAGS","BACKEND_TAGS","DEFAULT_TAGS","TAGS_FORMATTER","tagsData","transformedTagsData","Object","keys","forEach","tagKey","topValues","map","topValue","name","formatVersion","readable","TagFacets","_ref","tagKeys","environments","groupId","tagFormatter","project","organization","useOrganization","isLoading","isError","data","refetch","useFetchIssueTagsForDetailsPage","environment","useMemo","keyed","keyBy","formatted","features","includes","topTagKeys","filter","remainingTagKeys","sort","_jsx","WrapperWithTitle","children","_jsxs","TagPlaceholders","Placeholder","height","LoadingError","message","t","onRetry","Fragment","length","NoTagsFoundContainer","Content","TagFacetsDistributionMeterWrapper","expandFirstTag","_ref2","SidebarSection","TooltipWrapper","Tooltip","title","disableForVisualTest","IconQuestion","size","color","_ref3","location","useLocation","query","TagFacetsList","index","tagWithTopValues","topValuesTotal","totalValues","otherTagValuesUrl","slug","eventsPath","segments","value","url","appendTagCondition","pathname","TagFacetsDistributionMeter","onTagClick","expandByDefault","otherUrl","displayName","_styled","target","space","COLORS","_debounceTrackHover","debounce","tag","platform","is_mobile","trackAnalytics","colors","expanded","setExpanded","useState","hoveredValue","setHoveredValue","topSegments","slice","totalVisible","reduce","sum","count","hasOther","appendExcludeTagValuesCondition","excludeTopSegmentsUrl","push","isOther","TagSummary","open","onClick","e","preventDefault","StyledSummary","TagHeader","clickable","Array","isArray","Title","TitleType","skipWrapper","delay","TitleDescription","ExpandToggleButton","borderless","icon","IconChevron","direction","SegmentBar","pct","percent","pctLabel","Math","floor","segmentProps","isMobilePlatform","style","width","onMouseOver","onMouseLeave","OtherSegment","Segment","LegendAnimateContainer","animate","opacity","LegendContainer","segment","unfocus","focus","linkLabel","Link","to","LegendRow","LegendDot","LegendText","NotApplicableLabel","LegendPercent","p","styles","theme","fontSizeMedium","textColor","overflowEllipsis","gray300","shouldForwardProp","isPropValid","white","fontSizeExtraSmall","motion","div","prop","gray100","fontSizeSmall","gray400","Button"],"sourceRoot":""}