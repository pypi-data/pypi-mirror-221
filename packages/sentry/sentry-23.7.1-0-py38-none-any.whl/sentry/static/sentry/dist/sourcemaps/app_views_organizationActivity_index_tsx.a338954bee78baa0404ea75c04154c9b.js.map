{"version":3,"file":"chunks/app_views_organizationActivity_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"yeAcA,SAASA,EAAcC,GAA4C,IAA3C,UAACC,EAAS,KAAEC,EAAI,KAAEC,EAAI,KAAEC,EAAO,IAAUJ,EAC/D,OAAIG,GACKE,EAAAA,EAAAA,IAACC,EAAAA,EAAU,CAACH,KAAMA,EAAMC,KAAMA,EAAMH,UAAWA,IAG3C,WAATC,GAGAG,EAAAA,EAAAA,IAACE,EAAY,CAACN,UAAWA,EAAWG,KAAMA,EAAKI,UAC7CH,EAAAA,EAAAA,IAACI,EAAgB,CAACL,KAAK,UAM3BC,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CACVT,UAAWA,EACXU,MAAQ,GAAEP,MACVQ,OAAS,GAAER,MACXS,MAAM,UAGZ,CAtBSd,EAAce,YAAA,iBA8BvB,MAAMP,GAAeQ,EAAAA,EAAAA,GAAO,OAAM,CAAAC,OAAA,YAAbD,CAAc,iEAIxBE,GAAKA,EAAEb,MAAI,cACVa,GAAKA,EAAEb,MAAI,wBACDa,GAAKA,EAAEC,MAAMC,WAAS,WACjCF,GAAKA,EAAEC,MAAME,YAAU,uBAI5BX,GAAmBM,EAAAA,EAAAA,GAAOM,EAAAA,GAAU,CAAAL,OAAA,YAAjBD,CAAkB,CAAAO,KAAA,UAAAC,OAAA,sB,8JCnD3C,MAAMC,EAAe,OAmBrB,GAZmBT,EAAAA,EAAAA,GAAO,OAAM,CAAAC,OAAA,YAAbD,CAAc,sCAGtBE,GAAKA,EAAEb,MAAQoB,GAAY,YAC1BP,GAAKA,EAAEb,MAAQoB,GAAY,+FAKjBP,GAAMA,EAAEQ,MAAQR,EAAEC,MAAMO,MAAMR,EAAEQ,OAASR,EAAEC,MAAMO,MAAMC,OAAM,I,4UCLnF,MAAMC,GAAeZ,EAAAA,EAAAA,IACnBf,IAAA,IAAC,UAACC,EAAS,MAAEwB,EAAK,mBAAEG,EAAkB,QAAEC,EAAO,YAAEC,GAAmB9B,EAAA,OAClE+B,EAAAA,EAAAA,IAAA,OAAK9B,UAAWA,EAAUO,SAAA,CACvBiB,IACCpB,EAAAA,EAAAA,IAAC2B,EAAAA,EAAU,CAAC5B,KAAMwB,EAAoBH,MAAOA,EAAMjB,SAChDiB,IAIJI,IAAWxB,EAAAA,EAAAA,IAAC4B,EAAO,CAAAzB,SAAEqB,IAErBC,IACG,GACP,CAAAd,OAAA,aAbkBD,CAcpB,qBAEQmB,EAAAA,EAAAA,GAAM,GAAE,0EAOXD,GAAUlB,EAAAA,EAAAA,GAAO,OAAM,CAAAC,OAAA,aAAbD,EACZE,GAAKA,EAAEC,MAAMiB,kBAAgB,gCAKjC,G,yYCpCA,SAASC,EAAWC,GAClB,IAAKA,EAAKC,SACR,OAAO,KAGT,MAAM,GAACC,GAAMF,EAAKC,SAGlB,OAFmBC,EAAGC,SAAS,KAAOD,EAAGE,MAAM,KAAKC,MAAQH,GAG1D,IAAK,SACH,OAAOlC,EAAAA,EAAAA,IAACsC,EAAAA,GAAU,CAACvC,KAAK,KAAK,eAAa,wBAC5C,IAAK,SACH,OAAOC,EAAAA,EAAAA,IAACuC,EAAAA,GAAU,CAACxC,KAAK,KAAK,eAAa,wBAC5C,IAAK,YACH,OAAOC,EAAAA,EAAAA,IAACwC,EAAAA,GAAa,CAACzC,KAAK,OAC7B,QACE,OAAO,KAEb,CAgCA,MAAM0C,GAAmB/B,EAAAA,EAAAA,GAAOgC,EAAAA,EAAY,CAAA/B,OAAA,aAAnBD,CAAoB,+CAGpCmB,EAAAA,EAAAA,GAAM,IAAI,KAGnB,EA9BA,SAAwBlC,GAA2C,IAA1C,YAACgD,EAAW,WAAEC,EAAU,OAAEC,GAAclD,EAC/D,MAAMmD,EAAa,GAAEF,EAAW3B,SAAS0B,EAAYT,OAAOS,EAAYI,QAExE,OAAKJ,EAAYK,YAITH,GAUNnB,EAAAA,EAAAA,IAACe,EAAgB,CAACQ,KAAMN,EAAYK,YAAY7C,SAAA,CAC7C4B,EAAWa,GACXE,MAXH9C,EAAAA,EAAAA,IAACkD,EAAAA,GAAM,CACLC,UAAQ,EACRF,KAAMN,EAAYK,YAClBjD,KAAK,KACLqD,KAAMrB,EAAWa,GAAYzC,SAE5B2C,KAVI9C,EAAAA,EAAAA,IAAA,QAAAG,SAAO2C,GAkBlB,C,0DC5CA,QAZA,SACEO,EACAC,GAGQ,IADRC,EAAoBC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEpB,MAAMC,EAAY,GAAEN,OAAeC,IAC7BM,EAAOL,EAAe,GAAEI,OAAcJ,IAAgBI,EAE5D,OANmBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAMsBI,EAApB,GAAEA,YACzB,C,4QCGe,MAAMC,UAGXC,EAAAA,EACRC,WACE,MAAO,EACT,CAEAC,SACE,OACEhE,EAAAA,EAAAA,IAACiE,EAAAA,EAAmB,CAAClB,MAAOmB,KAAKH,WAAW5D,SACzC+D,KAAKC,mBAGZ,EAdmBN,EAAmBpD,YAAA,qB,k2CCWxC,SAAS2D,EAASzE,GAAmD,IAAlD,SAACQ,EAAQ,MAAEkE,EAAK,MAAEC,EAAK,GAAEC,EAAE,KAAEC,GAAO,GAAY7E,EACjE,IAAK6E,EACH,OAAOxE,EAAAA,EAAAA,IAACyE,EAAAA,EAAI,CAACF,GAAIA,EAAGpE,SAAEA,IAGxB,MAAMqB,GAAUkD,EAAAA,EAAAA,IAAWJ,GAErB1E,EAAY+E,IAAW,CAC3BC,aAAcN,EAAMM,aACpBC,QAASP,EAAMO,QACfC,WAA6B,aAAjBR,EAAMS,SAGdC,EAAc,kBAAiBX,YAE/BY,GACJvD,EAAAA,EAAAA,IAAA,OAAK9B,UAAWA,EAAUO,SAAA,EACxBuB,EAAAA,EAAAA,IAACwD,EAAO,CAAA/E,SAAA,EACNH,EAAAA,EAAAA,IAACmF,EAAK,CAAAhF,UACJH,EAAAA,EAAAA,IAACoF,EAAuB,CAACC,KAAMf,OAGjCtE,EAAAA,EAAAA,IAACsF,EAAqB,CACpBlE,MAAOkD,EAAMlD,MACbG,mBAAmB,MACnBC,QAASA,EACTC,aACEC,EAAAA,EAAAA,IAAC6D,EAAAA,SAAQ,CAAApF,SAAA,CACNmE,EAAMkB,SACLxF,EAAAA,EAAAA,IAACyF,EAAAA,EAAe,CAAAtF,UACdH,EAAAA,EAAAA,IAACyE,EAAAA,EAAI,CACHF,GAAI,CACFmB,SAAUV,EACVW,MAAO,CAACA,MAAQ,UAASrB,EAAMkB,SAAUI,SAAU,eACnDzF,SAEDmE,EAAMkB,WAIZlB,EAAM7C,YAAYoE,KAAI,CAACC,EAAYC,KAClC/F,EAAAA,EAAAA,IAACyF,EAAAA,EAAe,CAASO,wBAAyB,CAACC,OAAQH,IAArCC,cAOhCrE,EAAAA,EAAAA,IAACwE,EAAI,CAAA/F,SAAA,EACHuB,EAAAA,EAAAA,IAAA,OAAAvB,SAAA,EACEH,EAAAA,EAAAA,IAACmG,EAAU,CAAAhG,UAAEiG,EAAAA,EAAAA,GAAE,iBACfpG,EAAAA,EAAAA,IAACqG,EAAe,CAACC,KAAMhC,EAAMiC,gBAE/B7E,EAAAA,EAAAA,IAAA,OAAAvB,SAAA,EACEH,EAAAA,EAAAA,IAACmG,EAAU,CAAAhG,UAAEiG,EAAAA,EAAAA,GAAE,gBACfpG,EAAAA,EAAAA,IAACqG,EAAe,CAACC,KAAMhC,EAAMkC,eAE/B9E,EAAAA,EAAAA,IAAA,OAAAvB,SAAA,EACEH,EAAAA,EAAAA,IAACmG,EAAU,CAAAhG,UAAEiG,EAAAA,EAAAA,GAAE,kBACfpG,EAAAA,EAAAA,IAACyG,EAAAA,EAAK,CAACC,MAAOpC,EAAMqC,YAEtBjF,EAAAA,EAAAA,IAAA,OAAAvB,SAAA,EACEH,EAAAA,EAAAA,IAACmG,EAAU,CAAAhG,UAAEiG,EAAAA,EAAAA,GAAE,qBACfpG,EAAAA,EAAAA,IAACyG,EAAAA,EAAK,CAACC,MAAOpC,EAAMsC,qBAM5B,OACE5G,EAAAA,EAAAA,IAAC6G,EAAAA,GAAS,CAACC,KAAM7B,EAAe8B,OAAQzC,EAAM0C,QAAQ7G,UACpDH,EAAAA,EAAAA,IAACyE,EAAAA,EAAI,CAACF,GAAIA,EAAGpE,SAAEA,KAGrB,CA1ESiE,EAAS3D,YAAA,YA4ElB,UAEM0E,GAAQzE,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,YAAZD,EACVE,GAAKA,EAAEC,MAAMiB,kBAAgB,gBACjBD,EAAAA,EAAAA,GAAM,IAAI,KAGpBuD,GAA0B1E,EAAAA,EAAAA,GAAOuG,EAAAA,EAAiB,CAAAtG,OAAA,YAAxBD,CAAyB,8BAE1CE,GAAKA,EAAEC,MAAMqG,gBAAc,oDAKzBtG,GAAKA,EAAEC,MAAMsG,eAAa,MAIrCjC,GAAUxE,EAAAA,EAAAA,GAAO,UAAS,CAAAC,OAAA,YAAhBD,CAAiB,kBACdmB,EAAAA,EAAAA,GAAM,GAAE,KAGrBqE,GAAOxF,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,YAAZD,CAAa,mDAGjBmB,EAAAA,EAAAA,GAAM,GAAE,KAEXyD,GAAwB5E,EAAAA,EAAAA,GAAOY,EAAAA,EAAY,CAAAX,OAAA,YAAnBD,CAAoB,CAAAO,KAAA,SAAAC,OAAA,mBAI5CiF,GAAazF,EAAAA,EAAAA,GAAO,KAAI,CAAAC,OAAA,YAAXD,CAAY,UACpBE,GAAKA,EAAEC,MAAMuG,SAAO,kCAEZvF,EAAAA,EAAAA,GAAM,IAAI,8BAIvBwE,GAAkB3F,EAAAA,EAAAA,GAAO2G,EAAAA,EAAS,CAAA1G,OAAA,YAAhBD,CAAiB,CAAAO,KAAA,SAAAC,OAAA,kB,wRCtGzC,MAAMoG,UAAqBC,EAAAA,UAAwBC,cAAA,SAAAhE,YAAAiE,EAAAA,EAAAA,GAAA,aAGlC,CACbC,QAASxD,KAAKyD,MAAMC,kBACrBH,EAAAA,EAAAA,GAAA,0BA6BmBI,EAAAA,EAAAA,eAA2BJ,EAAAA,EAAAA,GAAA,8BAEvB,CAACK,EAAQC,KAC/B,MAAM1C,EAAO0C,EAAK1C,MACZ,aAAC2C,GAAgB9D,KAAKyD,MACtBtD,EAAQ2D,EAAaC,KACrB3D,EAAQyD,EAAKzD,MACb4D,EAAY,kBAAiB7D,YAE7B8D,EAAY7D,GAChBtE,EAAAA,EAAAA,IAACoE,EAAS,CACRC,MAAOA,EACPC,MAAOA,EACPC,GAAK,GAAE2D,IAAW5D,EAAMpC,wCACxBsC,MAAI,EAAArE,SAEHmE,EAAM0C,UAEP,KAEEoB,EAAclE,KAAKmE,kBAAkBhD,EAAKiD,QAASP,GAEzD,OAAQA,EAAKlI,MACX,IAAK,OACH,OAAO0I,EAAAA,EAAAA,IAAI,gCAAiC,CAC1CT,SACAxD,OACEtE,EAAAA,EAAAA,IAACoE,EAAS,CACRI,MAAI,EACJH,MAAOA,EACPC,MAAOA,EACPC,GAAK,GAAE2D,IAAW5D,EAAMpC,gDAAgD6F,EAAK7F,KAAK/B,SAEjFmE,EAAM0C,YAIf,IAAK,eACH,OAAOuB,EAAAA,EAAAA,IAAI,sCAAuC,CAChDT,SACAxD,MAAO6D,IAEX,IAAK,sBACH,OAAOI,EAAAA,EAAAA,IAAI,iDAAkD,CAC3DT,SACAxD,MAAO6D,IAEX,IAAK,0BACH,MAAM,wBAACK,EAAuB,QAAEF,GAAWP,EAAK1C,KAChD,OAAImD,GACKD,EAAAA,EAAAA,IACL,yEACA,CACET,SACAQ,QAASpE,KAAKmE,kBAAkBG,EAAyBT,GACzDzD,MAAO6D,IAITG,GACKC,EAAAA,EAAAA,IAAI,mDAAoD,CAC7DT,SACAQ,QAASF,EACT9D,MAAO6D,KAGJI,EAAAA,EAAAA,IAAI,8DAA+D,CACxET,SACAxD,MAAO6D,IAEX,IAAK,yBACH,OAAI9C,EAAKoD,QACAF,EAAAA,EAAAA,IAAI,kDAAmD,CAC5DT,SACAW,QACEzI,EAAAA,EAAAA,IAAC0I,EAAAA,EAAU,CACT7F,QAAM,EACN8F,SAAUtD,EAAKoD,OAAOvG,GACtBU,WAAYyC,EAAKoD,OAAO7F,aAG5B0B,MAAO6D,KAGJI,EAAAA,EAAAA,IAAI,kDAAmD,CAC5DT,SACAxD,MAAO6D,IAEX,IAAK,+BACH,OAAOI,EAAAA,EAAAA,IAAI,uDAAwD,CACjET,SACAnF,YAAa0C,EAAK1C,aAChB3C,EAAAA,EAAAA,IAAC4I,EAAAA,EAAe,CACd/F,QAAM,EACNF,YAAa0C,EAAK1C,YAClBC,WAAYyC,EAAK1C,YAAYC,cAG/BwD,EAAAA,EAAAA,GAAE,oBAEJ9B,MAAO6D,IAEX,IAAK,iBACH,OAAOI,EAAAA,EAAAA,IAAI,wCAAyC,CAClDT,SACAxD,MAAO6D,IAEX,IAAK,cACH,OAAI9C,EAAKwD,gBACAN,EAAAA,EAAAA,IAAI,0CAA2C,CACpDT,SACAgB,UAAU9I,EAAAA,EAAAA,IAAC+I,EAAAA,EAAQ,CAACC,QAA+B,GAAtB3D,EAAKwD,iBAClCvE,MAAO6D,IAGP9C,EAAK4D,aAAe5D,EAAK6D,cACpBX,EAAAA,EAAAA,IACL,0EACA,CACET,SACAnB,MAAOtB,EAAK4D,YACZH,UAAU9I,EAAAA,EAAAA,IAAC+I,EAAAA,EAAQ,CAACC,QAA6B,GAApB3D,EAAK6D,eAClC5E,MAAO6D,IAIT9C,EAAK4D,aACAV,EAAAA,EAAAA,IAAI,4DAA6D,CACtET,SACAnB,MAAOtB,EAAK4D,YACZ3E,MAAO6D,IAGP9C,EAAK8D,iBAAmB9D,EAAK+D,kBACxBb,EAAAA,EAAAA,IACL,0EACA,CACET,SACAnB,MAAOtB,EAAK8D,gBACZL,UAAU9I,EAAAA,EAAAA,IAAC+I,EAAAA,EAAQ,CAACC,QAAiC,GAAxB3D,EAAK+D,mBAClC9E,MAAO6D,IAIT9C,EAAK8D,iBACAZ,EAAAA,EAAAA,IAAI,4DAA6D,CACtET,SACAnB,MAAOtB,EAAK8D,gBACZ7E,MAAO6D,KAGJI,EAAAA,EAAAA,IAAI,2BAA4B,CACrCT,SACAxD,MAAO6D,IAEX,IAAK,aACH,OAAOI,EAAAA,EAAAA,IAAI,+BAAgC,CACzCT,SACAxD,MAAO6D,IAEX,IAAK,cACH,OAAOI,EAAAA,EAAAA,IAAI,gCAAiC,CAC1CT,SACAxD,MAAO6D,IAEX,IAAK,iBACH,OAAI9C,EAAKiD,SACAC,EAAAA,EAAAA,IAAI,uDAAwD,CACjET,SACAQ,QAASF,EACT9D,MAAO6D,KAGJI,EAAAA,EAAAA,IAAI,0CAA2C,CACpDT,SACAxD,MAAO6D,IAEX,IAAK,eACH,OAAOI,EAAAA,EAAAA,IAAI,wCAAyC,CAClDT,SACA7F,SAAUoD,EAAKpD,SACfqC,MAAO6D,IAEX,IAAK,sBACH,OAAOkB,EAAAA,EAAAA,IACL,mDACA,oDACAhE,EAAKiE,aAAa7F,OAClBqE,EACAzC,EAAKkE,QACHvJ,EAAAA,EAAAA,IAAA,KAAGiD,KAAO,GAAEiF,IAAW7C,EAAKkE,OAAOrH,KAAK/B,SAAEkF,EAAKkE,OAAOvC,WAEtDZ,EAAAA,EAAAA,GAAE,WAEJ+B,GAEJ,IAAK,aACH,OAAOI,EAAAA,EAAAA,IAAI,4BAA6B,CACtCT,SACAxD,MAAO6D,IAEX,IAAK,WACH,IAAIqB,EAEJ,GAA0B,SAAtBnE,EAAKoE,aAAyB,CAChC,MAAMC,EAAOC,EAAAA,EAAUC,QAAQvE,EAAKmE,UAGpC,OAFAA,EAAWE,EAAOA,EAAKzB,KAAO,kBAEvBM,EAAAA,EAAAA,IAAI,2CAA4C,CACrDT,SACAxD,MAAO6D,EACPqB,YAEJ,CAEA,OAAIzB,EAAKjI,MAAQuF,EAAKmE,WAAazB,EAAKjI,KAAKoC,IACpCqG,EAAAA,EAAAA,IAAI,0CAA2C,CACpDT,SACAxD,MAAO6D,KAGXqB,EAAWK,EAAAA,EAAgBD,QAAQvE,EAAKmE,UACpCA,GAAYA,EAASM,OAChBvB,EAAAA,EAAAA,IAAI,0CAA2C,CACpDT,SACA0B,UAAUxJ,EAAAA,EAAAA,IAAA,QAAM+C,MAAOyG,EAASM,MAAM3J,SAAEqJ,EAASvI,OACjDqD,MAAO6D,IAGP9C,EAAK0E,eACAxB,EAAAA,EAAAA,IAAI,0CAA2C,CACpDT,SACA0B,SAAUnE,EAAK0E,cACfzF,MAAO6D,KAGJI,EAAAA,EAAAA,IAAI,sDAAuD,CAChET,SACAkC,MAAMhK,EAAAA,EAAAA,IAAA,QAAM+C,MAAOsC,EAAKmE,WACxBlF,MAAO6D,KAEX,IAAK,aACH,OAAOI,EAAAA,EAAAA,IAAI,8BAA+B,CACxCT,SACAxD,MAAO6D,IAEX,IAAK,QACH,OAAOI,EAAAA,EAAAA,IAAI,wCAAyC,CAClDT,SACAnB,MAAOtB,EAAK4E,OAAOxG,OAAS,EAC5ByG,MAAMlK,EAAAA,EAAAA,IAACyE,EAAAA,EAAI,CAACF,GAAK,GAAE2D,IAAW5D,EAAMpC,uCAExC,IAAK,UACH,OAAOqG,EAAAA,EAAAA,IAAI,sCAAuC,CAChDT,SACAQ,QAASF,IAEb,IAAK,SACH,OAAOG,EAAAA,EAAAA,IAAI,wDAAyD,CAClET,SACAQ,QAASF,EACT+B,YAAa9E,EAAK8E,aAAe,wBAErC,IAAK,gBACH,OAAO5B,EAAAA,EAAAA,IAAI,sCAAuC,CAChDT,SACAxD,MAAO6D,IAEX,QACE,MAAO,GAAI,GAEhB,CA1SDiC,oBACMlG,KAAKmG,kBAAkBC,SACJpG,KAAKmG,kBAAkBC,QAAQC,aAEjCrG,KAAKyD,MAAM6C,YAI5BtG,KAAKuG,SAAS,CAAC/C,SAAS,GAG9B,CAEAW,kBAAkBC,EAAiBP,GACjC,MAAM,aAACC,GAAgB9D,KAAKyD,OACtB,QAAC+C,GAAW3C,EAClB,OAAOO,GACLtI,EAAAA,EAAAA,IAAC2K,EAAAA,GAAgB,CACf3C,aAAcA,EACdzE,YAAamH,EAAQzC,KACrB2C,eAAgBtC,EAAQnI,UAExBH,EAAAA,EAAAA,IAAC6K,EAAAA,EAAO,CAACvC,QAASA,EAASwC,UAAWJ,EAAQxI,OAE9C,IACN,CAmRA8B,SACE,MAAM,UAACpE,EAAS,KAAEmI,GAAQ7D,KAAKyD,MAEzBoD,GACJ/K,EAAAA,EAAAA,IAACN,EAAAA,EAAc,CACbG,KAAOkI,EAAKjI,KAAkB,OAAX,SACnBA,KAAMiI,EAAKjI,WAAQ4D,EACnB3D,KAAM,KAGJ+H,EAAS,CACb7G,KAAM8G,EAAKjI,KAAOiI,EAAKjI,KAAKmB,KAAO,SACnC8J,UAGIC,EAAY,CAAC,OAAQ,gBAAgB7I,SAAS4F,EAAKlI,MACnDoL,EAAc,IACA,SAAdlD,EAAKlI,KACL,CAACmG,wBAAyB,CAACC,QAAQiF,EAAAA,EAAAA,GAAOnD,EAAK1C,KAAK8F,QACpD,CAAC,KACa,iBAAdpD,EAAKlI,KACL,CACEM,UACEH,EAAAA,EAAAA,IAAC0C,EAAAA,EAAY,CAACO,KAAM8E,EAAK1C,KAAK+F,SAASjL,SAAE4H,EAAK1C,KAAKtC,SAGvD,CAAC,GAGP,OACErB,EAAAA,EAAAA,IAAA,OAAK,eAAa,qBAAqB9B,UAAWA,EAAUO,SAAA,CACzD2H,EAAOiD,QACRrJ,EAAAA,EAAAA,IAAA,OAAAvB,SAAA,CACG+D,KAAKmH,uBACJrL,EAAAA,EAAAA,IAAA,QAAAG,UACEH,EAAAA,EAAAA,IAACsL,EAAc,CAAAnL,SAAE2H,EAAO7G,SAE1B8G,GAEDiD,IACChL,EAAAA,EAAAA,IAACuL,EAAM,CACLC,IAAKtH,KAAKmG,kBACV3C,QAASxD,KAAKuH,MAAM/D,WAChBuD,KAGRvJ,EAAAA,EAAAA,IAACgK,EAAI,CAAAvL,SAAA,EACHH,EAAAA,EAAAA,IAAC2L,EAAO,CAAAxL,SAAE4H,EAAK2C,QAAQzC,QACvBjI,EAAAA,EAAAA,IAACqG,GAAe,CAACC,KAAMyB,EAAK6D,sBAKtC,EAxWItE,EAAY7G,YAAA,gBAAAgH,EAAAA,EAAAA,GAAZH,EAAY,eAhBG,CACnBM,gBAAgB,EAChB4C,WAAY,KAyXd,SAAe9J,EAAAA,EAAAA,GAAO4G,EAAY,CAAA3G,OAAA,aAAlC,CAAmC,qBAE1BkB,EAAAA,EAAAA,GAAM,GAAE,+EAIJA,EAAAA,EAAAA,GAAM,GAAE,6BACQjB,GAAKA,EAAEC,MAAMgL,aAAW,+BAEtCjL,GAAKA,EAAEC,MAAMqG,gBAAc,KAGpCoE,GAAiB5K,EAAAA,EAAAA,GAAO,OAAM,CAAAC,OAAA,aAAbD,CAAc,CAAAO,KAAA,UAAAC,OAAA,oBAI/BwK,GAAOhL,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,UACfE,GAAKA,EAAEC,MAAMC,WAAS,eAClBF,GAAKA,EAAEC,MAAMiL,uBAAqB,KAE3CH,GAAUjL,EAAAA,EAAAA,GAAO,OAAM,CAAAC,OAAA,aAAbD,CAAc,CAAAO,KAAA,UAAAC,OAAA,qBAIxBqK,GAAS7K,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,eACZE,GAAKA,EAAEC,MAAMkL,qBAAmB,YACpClK,EAAAA,EAAAA,GAAM,IAAI,eACTA,EAAAA,EAAAA,GAAM,GAAE,KAAIA,EAAAA,EAAAA,GAAM,GAAE,sBACXjB,GAAKA,EAAEC,MAAMmL,QAAM,8LAkBrCpL,GACAA,EAAE8G,SACD,gZAgBF,KAGGrB,IAAkB3F,EAAAA,EAAAA,GAAO2G,EAAAA,EAAS,CAAA1G,OAAA,aAAhBD,CAAiB,UAC9BE,GAAKA,EAAEC,MAAMuG,SAAO,kBACbvF,EAAAA,EAAAA,GAAM,GAAE,KC1b1B,MAAMoK,WAA6BpI,EAAAA,EACjCE,WACE,MAAM,aAACiE,GAAgB9D,KAAKyD,MAC5B,OAAOuE,EAAAA,EAAAA,IAAW9F,EAAAA,EAAAA,GAAE,YAAa4B,EAAaC,MAAM,EACtD,CAEAkE,eACE,MAAM,aAACnE,GAAgB9D,KAAKyD,MAC5B,MAAO,CAAC,CAAC,WAAa,kBAAiBK,EAAaC,kBACtD,CAEAmE,gBACE,OAAOlI,KAAKmI,YACd,CAEAC,cACE,OACEtM,EAAAA,EAAAA,IAACuM,EAAAA,EAAiB,CAAApM,UAChBH,EAAAA,EAAAA,IAAA,KAAAG,UAAIiG,EAAAA,EAAAA,GAAE,wCAGZ,CAEAoG,YAAYnL,GAAoD,IAArCoL,EAAUjJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACnC,MAAM,OAACkJ,GAAUxI,KAAKuH,MAEtB,OADiBkB,OAAOC,OAAOF,GAAQG,MAAKC,GAAQA,GAAwB,MAAhBA,EAAK/H,SAExDb,KAAKmI,aAEPU,MAAMP,YAAYnL,EAAOoL,EAClC,CAEAJ,aACE,MAAM,QAACW,EAAO,SAAEC,EAAQ,kBAAEC,GAAqBhJ,KAAKuH,MAEpD,OACE/J,EAAAA,EAAAA,IAACyL,EAAAA,GAAW,CAAAhN,SAAA,EACVH,EAAAA,EAAAA,IAACmN,EAAAA,GAAa,CAAAhN,UACZH,EAAAA,EAAAA,IAACmN,EAAAA,GAAoB,CAAAhN,UACnBH,EAAAA,EAAAA,IAACmN,EAAAA,GAAY,CAAAhN,UAAEiG,EAAAA,EAAAA,GAAE,mBAGrBpG,EAAAA,EAAAA,IAACmN,EAAAA,GAAW,CAAAhN,UACVuB,EAAAA,EAAAA,IAACyL,EAAAA,GAAW,CAACC,WAAS,EAAAjN,SAAA,EACpBuB,EAAAA,EAAAA,IAAC2L,EAAAA,EAAK,CAAAlN,SAAA,CACH6M,IAAWhN,EAAAA,EAAAA,IAACsN,EAAAA,EAAgB,KAC3BN,IAAYC,GAAUxJ,QAAUS,KAAKoI,eACrCU,GAAWC,GAAUxJ,OAAS,IAC9BzD,EAAAA,EAAAA,IAAA,OAAK,eAAa,qBAAoBG,SACnC8M,EAASpH,KAAIkC,IACZ/H,EAAAA,EAAAA,IAACuN,EAAAA,EAAa,CACZC,MAAI,EACJC,KAAGC,EAAAA,EAAAA,IAAE,CAACC,cAAc9L,EAAAA,EAAAA,GAAM,GAAI+L,aAAc,GAAE,OAACzN,UAG/CH,EAAAA,EAAAA,IAAC6N,EAAgB,CACf7F,aAAc9D,KAAKyD,MAAMK,aACzBD,KAAMA,KAJHA,EAAK7F,WAWnBgL,IACClN,EAAAA,EAAAA,IAAC8N,EAAAA,EAAU,CAACC,UAAWb,KAAuBhJ,KAAKyD,eAM/D,EAGF,UAAeqG,EAAAA,EAAAA,GAAiB/B,G","sources":["webpack:///./app/components/activity/item/avatar.tsx","webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/events/eventMessage.tsx","webpack:///./app/components/pullRequestLink.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/components/issueLink.tsx","webpack:///./app/views/organizationActivity/activityFeedItem.tsx","webpack:///./app/views/organizationActivity/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconSentry} from 'sentry/icons';\nimport {AvatarUser} from 'sentry/types';\n\ntype Props = {\n  type: 'system' | 'user';\n  className?: string;\n  size?: number;\n  user?: AvatarUser;\n};\n\nfunction ActivityAvatar({className, type, user, size = 38}: Props) {\n  if (user) {\n    return <UserAvatar user={user} size={size} className={className} />;\n  }\n\n  if (type === 'system') {\n    // Return Sentry avatar\n    return (\n      <SystemAvatar className={className} size={size}>\n        <StyledIconSentry size=\"md\" />\n      </SystemAvatar>\n    );\n  }\n\n  return (\n    <Placeholder\n      className={className}\n      width={`${size}px`}\n      height={`${size}px`}\n      shape=\"circle\"\n    />\n  );\n}\n\nexport {ActivityAvatar};\n\ntype SystemAvatarProps = {\n  size: number;\n};\n\nconst SystemAvatar = styled('span')<SystemAvatarProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  background-color: ${p => p.theme.textColor};\n  color: ${p => p.theme.background};\n  border-radius: 50%;\n`;\n\nconst StyledIconSentry = styled(IconSentry)`\n  padding-bottom: 3px;\n`;\n\nconst DO_NOT_USE_ACTIVITY_AVATAR = ActivityAvatar;\n\nexport default DO_NOT_USE_ACTIVITY_AVATAR;\n","import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import styled from '@emotion/styled';\n\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport {space} from 'sentry/styles/space';\nimport {Level} from 'sentry/types';\n\ntype Props = {\n  annotations?: React.ReactNode;\n  className?: string;\n  hasGuideAnchor?: boolean;\n  level?: Level;\n  levelIndicatorSize?: string;\n  message?: React.ReactNode;\n};\n\nconst EventMessage = styled(\n  ({className, level, levelIndicatorSize, message, annotations}: Props) => (\n    <div className={className}>\n      {level && (\n        <ErrorLevel size={levelIndicatorSize} level={level}>\n          {level}\n        </ErrorLevel>\n      )}\n\n      {message && <Message>{message}</Message>}\n\n      {annotations}\n    </div>\n  )\n)`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n  position: relative;\n  line-height: 1.2;\n  overflow: hidden;\n`;\n\nconst Message = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  width: auto;\n  max-height: 38px;\n`;\n\nexport default EventMessage;\n","import styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab} from 'sentry/icons';\nimport {space} from 'sentry/styles/space';\nimport {PullRequest, Repository} from 'sentry/types';\n\nfunction renderIcon(repo: Repository) {\n  if (!repo.provider) {\n    return null;\n  }\n\n  const {id} = repo.provider;\n  const providerId = id.includes(':') ? id.split(':').pop() : id;\n\n  switch (providerId) {\n    case 'github':\n      return <IconGithub size=\"xs\" data-test-id=\"pull-request-github\" />;\n    case 'gitlab':\n      return <IconGitlab size=\"xs\" data-test-id=\"pull-request-gitlab\" />;\n    case 'bitbucket':\n      return <IconBitbucket size=\"xs\" />;\n    default:\n      return null;\n  }\n}\n\ntype Props = {\n  pullRequest: PullRequest;\n  repository: Repository;\n  inline?: boolean;\n};\n\nfunction PullRequestLink({pullRequest, repository, inline}: Props) {\n  const displayId = `${repository.name} #${pullRequest.id}: ${pullRequest.title}`;\n\n  if (!pullRequest.externalUrl) {\n    return <span>{displayId}</span>;\n  }\n\n  return !inline ? (\n    <Button\n      external\n      href={pullRequest.externalUrl}\n      size=\"sm\"\n      icon={renderIcon(repository)}\n    >\n      {displayId}\n    </Button>\n  ) : (\n    <ExternalPullLink href={pullRequest.externalUrl}>\n      {renderIcon(repository)}\n      {displayId}\n    </ExternalPullLink>\n  );\n}\n\nconst ExternalPullLink = styled(ExternalLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: ${space(0.5)};\n`;\n\nexport default PullRequestLink;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Count from 'sentry/components/count';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport EventAnnotation from 'sentry/components/events/eventAnnotation';\nimport EventMessage from 'sentry/components/events/eventMessage';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport Link from 'sentry/components/links/link';\nimport TimeSince from 'sentry/components/timeSince';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\nimport {getMessage} from 'sentry/utils/events';\n\ntype Props = {\n  card: boolean;\n  children: React.ReactNode;\n  issue: Group;\n  orgId: string;\n  to: string;\n};\n\nfunction IssueLink({children, orgId, issue, to, card = true}: Props) {\n  if (!card) {\n    return <Link to={to}>{children}</Link>;\n  }\n\n  const message = getMessage(issue);\n\n  const className = classNames({\n    isBookmarked: issue.isBookmarked,\n    hasSeen: issue.hasSeen,\n    isResolved: issue.status === 'resolved',\n  });\n\n  const streamPath = `/organizations/${orgId}/issues/`;\n\n  const hovercardBody = (\n    <div className={className}>\n      <Section>\n        <Title>\n          <StyledEventOrGroupTitle data={issue} />\n        </Title>\n\n        <HovercardEventMessage\n          level={issue.level}\n          levelIndicatorSize=\"9px\"\n          message={message}\n          annotations={\n            <Fragment>\n              {issue.logger && (\n                <EventAnnotation>\n                  <Link\n                    to={{\n                      pathname: streamPath,\n                      query: {query: `logger:${issue.logger}`, referrer: 'issue-link'},\n                    }}\n                  >\n                    {issue.logger}\n                  </Link>\n                </EventAnnotation>\n              )}\n              {issue.annotations.map((annotation, i) => (\n                <EventAnnotation key={i} dangerouslySetInnerHTML={{__html: annotation}} />\n              ))}\n            </Fragment>\n          }\n        />\n      </Section>\n\n      <Grid>\n        <div>\n          <GridHeader>{t('First Seen')}</GridHeader>\n          <StyledTimeSince date={issue.firstSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Last Seen')}</GridHeader>\n          <StyledTimeSince date={issue.lastSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Occurrences')}</GridHeader>\n          <Count value={issue.count} />\n        </div>\n        <div>\n          <GridHeader>{t('Users Affected')}</GridHeader>\n          <Count value={issue.userCount} />\n        </div>\n      </Grid>\n    </div>\n  );\n\n  return (\n    <Hovercard body={hovercardBody} header={issue.shortId}>\n      <Link to={to}>{children}</Link>\n    </Hovercard>\n  );\n}\n\nexport default IssueLink;\n\nconst Title = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  margin: 0 0 ${space(0.5)};\n`;\n\nconst StyledEventOrGroupTitle = styled(EventOrGroupTitle)`\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  em {\n    font-style: normal;\n    font-weight: 400;\n    font-size: ${p => p.theme.fontSizeSmall};\n  }\n`;\n\nconst Section = styled('section')`\n  margin-bottom: ${space(2)};\n`;\n\nconst Grid = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${space(2)};\n`;\nconst HovercardEventMessage = styled(EventMessage)`\n  font-size: 12px;\n`;\n\nconst GridHeader = styled('h5')`\n  color: ${p => p.theme.gray300};\n  font-size: 11px;\n  margin-bottom: ${space(0.5)};\n  text-transform: uppercase;\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: inherit;\n`;\n","import {Component, createRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport {ActivityAvatar} from 'sentry/components/activity/item/avatar';\nimport CommitLink from 'sentry/components/commitLink';\nimport Duration from 'sentry/components/duration';\nimport IssueLink from 'sentry/components/issueLink';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport PullRequestLink from 'sentry/components/pullRequestLink';\nimport TimeSince from 'sentry/components/timeSince';\nimport Version from 'sentry/components/version';\nimport VersionHoverCard from 'sentry/components/versionHoverCard';\nimport {t, tct, tn} from 'sentry/locale';\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {space} from 'sentry/styles/space';\nimport {Activity, GroupActivity, Organization} from 'sentry/types';\nimport marked from 'sentry/utils/marked';\n\nconst defaultProps = {\n  defaultClipped: false,\n  clipHeight: 68,\n};\ntype DefaultProps = typeof defaultProps;\n\ntype Props = {\n  item: Activity;\n  organization: Organization;\n  className?: string;\n} & DefaultProps;\n\ntype State = {\n  clipped: Props['defaultClipped'];\n};\n\nclass ActivityItem extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    clipped: this.props.defaultClipped,\n  };\n\n  componentDidMount() {\n    if (this.activityBubbleRef.current) {\n      const bubbleHeight = this.activityBubbleRef.current.offsetHeight;\n\n      if (bubbleHeight > this.props.clipHeight) {\n        // okay if this causes re-render; cannot determine until\n        // rendered first anyways\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({clipped: true});\n      }\n    }\n  }\n\n  renderVersionLink(version: string, item: GroupActivity) {\n    const {organization} = this.props;\n    const {project} = item;\n    return version ? (\n      <VersionHoverCard\n        organization={organization}\n        projectSlug={project.slug}\n        releaseVersion={version}\n      >\n        <Version version={version} projectId={project.id} />\n      </VersionHoverCard>\n    ) : null;\n  }\n\n  activityBubbleRef = createRef<HTMLDivElement>();\n\n  formatProjectActivity = (author, item) => {\n    const data = item.data;\n    const {organization} = this.props;\n    const orgId = organization.slug;\n    const issue = item.issue;\n    const basePath = `/organizations/${orgId}/issues/`;\n\n    const issueLink = issue ? (\n      <IssueLink\n        orgId={orgId}\n        issue={issue}\n        to={`${basePath}${issue.id}/?referrer=activity-feed-issue-link`}\n        card\n      >\n        {issue.shortId}\n      </IssueLink>\n    ) : null;\n\n    const versionLink = this.renderVersionLink(data.version, item);\n\n    switch (item.type) {\n      case 'note':\n        return tct('[author] commented on [issue]', {\n          author,\n          issue: (\n            <IssueLink\n              card\n              orgId={orgId}\n              issue={issue}\n              to={`${basePath}${issue.id}/activity/?referrer=activity-comment#event_${item.id}`}\n            >\n              {issue.shortId}\n            </IssueLink>\n          ),\n        });\n      case 'set_resolved':\n        return tct('[author] marked [issue] as resolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_by_age':\n        return tct('[author] marked [issue] as resolved due to age', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_release':\n        const {current_release_version, version} = item.data;\n        if (current_release_version) {\n          return tct(\n            '[author] marked [issue] as resolved in releases greater than [version]',\n            {\n              author,\n              version: this.renderVersionLink(current_release_version, item),\n              issue: issueLink,\n            }\n          );\n        }\n        if (version) {\n          return tct('[author] marked [issue] as resolved in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as resolved in the upcoming release', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_commit':\n        if (data.commit) {\n          return tct('[author] marked [issue] as resolved in [commit]', {\n            author,\n            commit: (\n              <CommitLink\n                inline\n                commitId={data.commit.id}\n                repository={data.commit.repository}\n              />\n            ),\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as resolved in a commit', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_pull_request':\n        return tct('[author] marked [issue] as resolved in [pullRequest]', {\n          author,\n          pullRequest: data.pullRequest ? (\n            <PullRequestLink\n              inline\n              pullRequest={data.pullRequest}\n              repository={data.pullRequest.repository}\n            />\n          ) : (\n            t('PR not available')\n          ),\n          issue: issueLink,\n        });\n      case 'set_unresolved':\n        return tct('[author] marked [issue] as unresolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_ignored':\n        if (data.ignoreDuration) {\n          return tct('[author] ignored [issue] for [duration]', {\n            author,\n            duration: <Duration seconds={data.ignoreDuration * 60} />,\n            issue: issueLink,\n          });\n        }\n        if (data.ignoreCount && data.ignoreWindow) {\n          return tct(\n            '[author] ignored [issue] until it happens [count] time(s) in [duration]',\n            {\n              author,\n              count: data.ignoreCount,\n              duration: <Duration seconds={data.ignoreWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        }\n        if (data.ignoreCount) {\n          return tct('[author] ignored [issue] until it happens [count] time(s)', {\n            author,\n            count: data.ignoreCount,\n            issue: issueLink,\n          });\n        }\n        if (data.ignoreUserCount && data.ignoreUserWindow) {\n          return tct(\n            '[author] ignored [issue] until it affects [count] user(s) in [duration]',\n            {\n              author,\n              count: data.ignoreUserCount,\n              duration: <Duration seconds={data.ignoreUserWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        }\n        if (data.ignoreUserCount) {\n          return tct('[author] ignored [issue] until it affects [count] user(s)', {\n            author,\n            count: data.ignoreUserCount,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] ignored [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_public':\n        return tct('[author] made [issue] public', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_private':\n        return tct('[author] made [issue] private', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_regression':\n        if (data.version) {\n          return tct('[author] marked [issue] as a regression in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as a regression', {\n          author,\n          issue: issueLink,\n        });\n      case 'create_issue':\n        return tct('[author] linked [issue] on [provider]', {\n          author,\n          provider: data.provider,\n          issue: issueLink,\n        });\n      case 'unmerge_destination':\n        return tn(\n          '%2$s migrated %1$s fingerprint from %3$s to %4$s',\n          '%2$s migrated %1$s fingerprints from %3$s to %4$s',\n          data.fingerprints.length,\n          author,\n          data.source ? (\n            <a href={`${basePath}${data.source.id}`}>{data.source.shortId}</a>\n          ) : (\n            t('a group')\n          ),\n          issueLink\n        );\n      case 'first_seen':\n        return tct('[author] saw [link:issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'assigned':\n        let assignee;\n\n        if (data.assigneeType === 'team') {\n          const team = TeamStore.getById(data.assignee);\n          assignee = team ? team.slug : '<unknown-team>';\n\n          return tct('[author] assigned [issue] to #[assignee]', {\n            author,\n            issue: issueLink,\n            assignee,\n          });\n        }\n\n        if (item.user && data.assignee === item.user.id) {\n          return tct('[author] assigned [issue] to themselves', {\n            author,\n            issue: issueLink,\n          });\n        }\n        assignee = MemberListStore.getById(data.assignee);\n        if (assignee && assignee.email) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: <span title={assignee.email}>{assignee.name}</span>,\n            issue: issueLink,\n          });\n        }\n        if (data.assigneeEmail) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: data.assigneeEmail,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] assigned [issue] to an [help:unknown user]', {\n          author,\n          help: <span title={data.assignee} />,\n          issue: issueLink,\n        });\n      case 'unassigned':\n        return tct('[author] unassigned [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'merge':\n        return tct('[author] merged [count] [link:issues]', {\n          author,\n          count: data.issues.length + 1,\n          link: <Link to={`${basePath}${issue.id}/?referrer=activity-feed-merge`} />,\n        });\n      case 'release':\n        return tct('[author] released version [version]', {\n          author,\n          version: versionLink,\n        });\n      case 'deploy':\n        return tct('[author] deployed version [version] to [environment].', {\n          author,\n          version: versionLink,\n          environment: data.environment || 'Default Environment',\n        });\n      case 'mark_reviewed':\n        return tct('[author] marked [issue] as reviewed', {\n          author,\n          issue: issueLink,\n        });\n      default:\n        return ''; // should never hit (?)\n    }\n  };\n\n  render() {\n    const {className, item} = this.props;\n\n    const avatar = (\n      <ActivityAvatar\n        type={!item.user ? 'system' : 'user'}\n        user={item.user ?? undefined}\n        size={36}\n      />\n    );\n    const author = {\n      name: item.user ? item.user.name : 'Sentry',\n      avatar,\n    };\n\n    const hasBubble = ['note', 'create_issue'].includes(item.type);\n    const bubbleProps = {\n      ...(item.type === 'note'\n        ? {dangerouslySetInnerHTML: {__html: marked(item.data.text)}}\n        : {}),\n      ...(item.type === 'create_issue'\n        ? {\n            children: (\n              <ExternalLink href={item.data.location}>{item.data.title}</ExternalLink>\n            ),\n          }\n        : {}),\n    };\n\n    return (\n      <div data-test-id=\"activity-feed-item\" className={className}>\n        {author.avatar}\n        <div>\n          {this.formatProjectActivity(\n            <span>\n              <ActivityAuthor>{author.name}</ActivityAuthor>\n            </span>,\n            item\n          )}\n          {hasBubble && (\n            <Bubble\n              ref={this.activityBubbleRef}\n              clipped={this.state.clipped}\n              {...bubbleProps}\n            />\n          )}\n          <Meta>\n            <Project>{item.project.slug}</Project>\n            <StyledTimeSince date={item.dateCreated} />\n          </Meta>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default styled(ActivityItem)`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: max-content auto;\n  position: relative;\n  margin: 0;\n  padding: ${space(1)};\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n  line-height: 1.4;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ActivityAuthor = styled('span')`\n  font-weight: 600;\n`;\n\nconst Meta = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\nconst Project = styled('span')`\n  font-weight: bold;\n`;\n\nconst Bubble = styled('div')<{clipped: boolean}>`\n  background: ${p => p.theme.backgroundSecondary};\n  margin: ${space(0.5)} 0;\n  padding: ${space(1)} ${space(2)};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: 3px;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.04);\n  position: relative;\n  overflow: hidden;\n\n  a {\n    max-width: 100%;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n  }\n\n  p {\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  ${p =>\n    p.clipped &&\n    `\n    max-height: 68px;\n\n    &:after {\n      position: absolute;\n      content: '';\n      display: block;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      height: 36px;\n      background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 1));\n      border-bottom: 6px solid #fff;\n      border-radius: 0 0 3px 3px;\n      pointer-events: none;\n    }\n  `}\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: ${p => p.theme.gray300};\n  padding-left: ${space(1)};\n`;\n","import EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport Panel from 'sentry/components/panels/panel';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Activity, Organization} from 'sentry/types';\nimport routeTitle from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport DeprecatedAsyncView, {\n  AsyncViewProps,\n  AsyncViewState,\n} from 'sentry/views/deprecatedAsyncView';\n\nimport ActivityFeedItem from './activityFeedItem';\n\ninterface Props extends AsyncViewProps {\n  organization: Organization;\n}\n\ninterface State extends AsyncViewState {\n  activity: Activity[];\n}\n\nclass OrganizationActivity extends DeprecatedAsyncView<Props, State> {\n  getTitle() {\n    const {organization} = this.props;\n    return routeTitle(t('Activity'), organization.slug, false);\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    return [['activity', `/organizations/${organization.slug}/activity/`]];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderEmpty() {\n    return (\n      <EmptyStateWarning>\n        <p>{t('Nothing to show here, move along.')}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderError(error?: Error, disableLog = false): React.ReactNode {\n    const {errors} = this.state;\n    const notFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (notFound) {\n      return this.renderBody();\n    }\n    return super.renderError(error, disableLog);\n  }\n\n  renderBody() {\n    const {loading, activity, activityPageLinks} = this.state;\n\n    return (\n      <Layout.Page>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Layout.Title>{t('Activity')}</Layout.Title>\n          </Layout.HeaderContent>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <Panel>\n              {loading && <LoadingIndicator />}\n              {!loading && !activity?.length && this.renderEmpty()}\n              {!loading && activity?.length > 0 && (\n                <div data-test-id=\"activity-feed-list\">\n                  {activity.map(item => (\n                    <ErrorBoundary\n                      mini\n                      css={{marginBottom: space(1), borderRadius: 0}}\n                      key={item.id}\n                    >\n                      <ActivityFeedItem\n                        organization={this.props.organization}\n                        item={item}\n                      />\n                    </ErrorBoundary>\n                  ))}\n                </div>\n              )}\n            </Panel>\n            {activityPageLinks && (\n              <Pagination pageLinks={activityPageLinks} {...this.props} />\n            )}\n          </Layout.Main>\n        </Layout.Body>\n      </Layout.Page>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationActivity);\n"],"names":["ActivityAvatar","_ref","className","type","user","size","_jsx","UserAvatar","SystemAvatar","children","StyledIconSentry","Placeholder","width","height","shape","displayName","_styled","target","p","theme","textColor","background","IconSentry","name","styles","DEFAULT_SIZE","level","error","EventMessage","levelIndicatorSize","message","annotations","_jsxs","ErrorLevel","Message","space","overflowEllipsis","renderIcon","repo","provider","id","includes","split","pop","IconGithub","IconGitlab","IconBitbucket","ExternalPullLink","ExternalLink","pullRequest","repository","inline","displayId","title","externalUrl","href","Button","external","icon","routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","SentryDocumentTitle","this","renderComponent","IssueLink","orgId","issue","to","card","Link","getMessage","classNames","isBookmarked","hasSeen","isResolved","status","streamPath","hovercardBody","Section","Title","StyledEventOrGroupTitle","data","HovercardEventMessage","Fragment","logger","EventAnnotation","pathname","query","referrer","map","annotation","i","dangerouslySetInnerHTML","__html","Grid","GridHeader","t","StyledTimeSince","date","firstSeen","lastSeen","Count","value","count","userCount","Hovercard","body","header","shortId","EventOrGroupTitle","fontSizeMedium","fontSizeSmall","gray300","TimeSince","ActivityItem","Component","constructor","_defineProperty","clipped","props","defaultClipped","createRef","author","item","organization","slug","basePath","issueLink","versionLink","renderVersionLink","version","tct","current_release_version","commit","CommitLink","commitId","PullRequestLink","ignoreDuration","duration","Duration","seconds","ignoreCount","ignoreWindow","ignoreUserCount","ignoreUserWindow","tn","fingerprints","source","assignee","assigneeType","team","TeamStore","getById","MemberListStore","email","assigneeEmail","help","issues","link","environment","componentDidMount","activityBubbleRef","current","offsetHeight","clipHeight","setState","project","VersionHoverCard","releaseVersion","Version","projectId","avatar","hasBubble","bubbleProps","marked","text","location","formatProjectActivity","ActivityAuthor","Bubble","ref","state","Meta","Project","dateCreated","innerBorder","fontSizeRelativeSmall","backgroundSecondary","border","OrganizationActivity","routeTitle","getEndpoints","renderLoading","renderBody","renderEmpty","EmptyStateWarning","renderError","disableLog","errors","Object","values","find","resp","super","loading","activity","activityPageLinks","Layout","fullWidth","Panel","LoadingIndicator","ErrorBoundary","mini","css","_css","marginBottom","borderRadius","ActivityFeedItem","Pagination","pageLinks","withOrganization"],"sourceRoot":""}