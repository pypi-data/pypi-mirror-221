{"version":3,"file":"chunks/app_components_collapsePanel_tsx-app_components_pageTimeRangeSelector_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/collapsePanel.tsx","webpack:///./app/components/pageTimeRangeSelector.tsx"],"sourcesContent":["import {useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {IconChevron, IconList} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\nexport const COLLAPSE_COUNT = 5;\n\ntype ChildRenderProps = {\n  isExpanded: boolean;\n  showMoreButton: React.ReactNode;\n};\n\ntype Props = {\n  children: (props: ChildRenderProps) => JSX.Element;\n  items: number;\n  buttonTitle?: string;\n  collapseCount?: number;\n  disableBorder?: boolean;\n};\n\n/**\n * Used to expand results.\n *\n * Our collapsible component was not used because we want our\n * expand button to be outside the list of children\n *\n */\nfunction CollapsePanel({\n  items,\n  children,\n  buttonTitle,\n  collapseCount = COLLAPSE_COUNT,\n  disableBorder = true,\n}: Props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  function expandResults() {\n    setIsExpanded(true);\n  }\n\n  return children({\n    isExpanded,\n    showMoreButton:\n      isExpanded || items <= collapseCount ? null : (\n        <ShowMoreButton\n          items={items}\n          buttonTitle={buttonTitle}\n          collapseCount={collapseCount}\n          disableBorder={disableBorder}\n          onClick={expandResults}\n        />\n      ),\n  });\n}\n\ntype ShowMoreButtonProps = {\n  items: number;\n  onClick: () => void;\n  buttonTitle?: string;\n  collapseCount?: number;\n  disableBorder?: boolean;\n};\n\nfunction ShowMoreButton({\n  items,\n  buttonTitle = 'More',\n  collapseCount = COLLAPSE_COUNT,\n  disableBorder = true,\n  onClick,\n}: ShowMoreButtonProps) {\n  return (\n    <ShowMore\n      onClick={onClick}\n      role=\"button\"\n      data-test-id=\"collapse-show-more\"\n      disableBorder={disableBorder}\n    >\n      <ShowMoreText>\n        <StyledIconList color=\"gray300\" />\n        {tct('Show [count] [buttonTitle]', {count: items - collapseCount, buttonTitle})}\n      </ShowMoreText>\n\n      <IconChevron color=\"gray300\" direction=\"down\" />\n    </ShowMore>\n  );\n}\n\nexport default CollapsePanel;\n\nconst ShowMore = styled('div')<{disableBorder: boolean}>`\n  display: flex;\n  align-items: center;\n  padding: ${space(1)} ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n  cursor: pointer;\n  border-top: 1px solid ${p => p.theme.border};\n\n  ${p =>\n    !p.disableBorder &&\n    css`\n      border-left: 1px solid ${p.theme.border};\n      border-right: 1px solid ${p.theme.border};\n      border-bottom: 1px solid ${p.theme.border};\n      border-bottom-left-radius: ${p.theme.borderRadius};\n      border-bottom-right-radius: ${p.theme.borderRadius};\n      margin-bottom: ${space(2)};\n    `}\n`;\n\nconst StyledIconList = styled(IconList)`\n  margin-right: ${space(1)};\n`;\n\nconst ShowMoreText = styled('div')`\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n`;\n","import styled from '@emotion/styled';\n\nimport TimeRangeSelector from 'sentry/components/organizations/timeRangeSelector';\nimport Panel from 'sentry/components/panels/panel';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ntype Props = React.ComponentProps<typeof TimeRangeSelector> & {className?: string};\n\nfunction PageTimeRangeSelector({className, ...props}: Props) {\n  return (\n    <DropdownDate className={className}>\n      <TimeRangeSelector\n        key={`period:${props.relative}-start:${props.start}-end:${props.end}-utc:${props.utc}-defaultPeriod:${props.defaultPeriod}`}\n        label={<DropdownLabel>{t('Date Range:')}</DropdownLabel>}\n        detached\n        {...props}\n      />\n    </DropdownDate>\n  );\n}\n\nconst DropdownDate = styled(Panel)`\n  padding: 0;\n  margin: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: ${p => p.theme.form.md.height}px;\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n\n  > div {\n    width: 100%;\n    align-self: stretch;\n  }\n  /* StyledItemHeader used to show selected value of TimeRangeSelector */\n  > div > div:first-child > div {\n    padding: 0 ${space(2)};\n  }\n  /* Menu that dropdowns from TimeRangeSelector */\n  > div > div:last-child:not(:first-child) {\n    /* Remove awkward 1px width difference on dropdown due to border */\n    min-width: calc(100% + 2px);\n    transform: translateX(-1px);\n    right: auto;\n  }\n`;\n\nconst DropdownLabel = styled('span')`\n  text-align: left;\n  font-weight: 600;\n  color: ${p => p.theme.textColor};\n\n  > span:last-child {\n    font-weight: 400;\n  }\n`;\n\nexport default PageTimeRangeSelector;\n"],"names":["COLLAPSE_COUNT","ShowMoreButton","_ref2","items","buttonTitle","collapseCount","disableBorder","onClick","_jsxs","ShowMore","role","children","ShowMoreText","_jsx","StyledIconList","color","tct","count","IconChevron","direction","displayName","_ref","isExpanded","setIsExpanded","useState","showMoreButton","_styled","target","space","p","theme","fontSizeMedium","subText","border","css","borderRadius","IconList","name","styles","PageTimeRangeSelector","className","props","DropdownDate","TimeRangeSelector","label","DropdownLabel","t","detached","relative","start","end","utc","defaultPeriod","Panel","form","md","height","background","textColor"],"sourceRoot":""}