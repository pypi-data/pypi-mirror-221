{"version":3,"file":"chunks/app_views_settings_organizationApiKeys_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/linkWithConfirmation.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/organizationApiKeys/organizationApiKeysList.tsx","webpack:///./app/views/settings/organizationApiKeys/index.tsx"],"sourcesContent":["import {ButtonProps} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\n\nimport Anchor from './anchor';\n\ntype Props = {\n  message: React.ReactNode;\n  onConfirm: () => void;\n  title: string;\n  children?: React.ReactNode;\n  className?: string;\n  disabled?: boolean;\n  priority?: ButtonProps['priority'];\n};\n\n/**\n * <Confirm> is a more generic version of this component\n */\nfunction LinkWithConfirmation({\n  className,\n  disabled,\n  title,\n  children,\n  ...otherProps\n}: Props) {\n  return (\n    <Confirm {...otherProps} disabled={disabled}>\n      <Anchor href=\"#\" className={className} disabled={disabled} title={title}>\n        {children}\n      </Anchor>\n    </Confirm>\n  );\n}\n\nexport default LinkWithConfirmation;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {PlainRoute, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport AlertLink from 'sentry/components/alertLink';\nimport {Button} from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport LinkWithConfirmation from 'sentry/components/links/linkWithConfirmation';\nimport PanelTable from 'sentry/components/panels/panelTable';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {IconAdd, IconDelete} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport {DeprecatedApiKey} from './types';\n\ntype Props = RouteComponentProps<{}, {}> & {\n  /**\n   * Busy differs from loading in that busy is a result of an action like removing\n   */\n  busy: boolean;\n  keys: DeprecatedApiKey[];\n\n  /**\n   * Loading refers to fetching the API Keys\n   */\n  loading: boolean;\n\n  onAddApiKey: () => {};\n\n  onRemove: (id: DeprecatedApiKey['id']) => {};\n  organization: Organization;\n  routes: PlainRoute[];\n};\n\nfunction OrganizationApiKeysList({\n  organization,\n  params,\n  routes,\n  keys,\n  busy,\n  loading,\n  onAddApiKey,\n  onRemove,\n}: Props) {\n  const hasKeys = keys && keys.length;\n\n  const action = (\n    <Button\n      priority=\"primary\"\n      size=\"sm\"\n      icon={<IconAdd size=\"xs\" isCircled />}\n      busy={busy}\n      disabled={busy}\n      onClick={onAddApiKey}\n    >\n      {t('New API Key')}\n    </Button>\n  );\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('API Keys')} action={action} />\n\n      <TextBlock>\n        {tct(\n          `API keys grant access to the [api:developer web API].\n          If you're looking to configure a Sentry client, you'll need a\n          client key which is available in your project settings.`,\n          {\n            api: <ExternalLink href=\"https://docs.sentry.io/api/\" />,\n          }\n        )}\n      </TextBlock>\n\n      <AlertLink to=\"/settings/account/api/auth-tokens/\" priority=\"info\">\n        {tct(\n          'Until Sentry supports OAuth, you might want to switch to using [tokens:User Auth Tokens] instead.',\n          {\n            tokens: <u />,\n          }\n        )}\n      </AlertLink>\n\n      <PanelTable\n        isLoading={loading}\n        isEmpty={!hasKeys}\n        emptyMessage={t('No API keys for this organization')}\n        headers={[t('Name'), t('Key'), t('Actions')]}\n      >\n        {keys &&\n          keys.map(({id, key, label}) => {\n            const apiDetailsUrl = recreateRoute(`${id}/`, {\n              params: {...params, orgId: organization.slug},\n              routes,\n            });\n\n            return (\n              <Fragment key={key}>\n                <Cell>\n                  <Link to={apiDetailsUrl}>{label}</Link>\n                </Cell>\n\n                <TextCopyInput size=\"sm\" monospace>\n                  {key}\n                </TextCopyInput>\n\n                <Cell>\n                  <LinkWithConfirmation\n                    aria-label={t('Remove API Key')}\n                    className=\"btn btn-default btn-sm\"\n                    onConfirm={() => onRemove(id)}\n                    message={t('Are you sure you want to remove this API key?')}\n                    title={t('Remove API Key?')}\n                  >\n                    <IconDelete size=\"xs\" css={{position: 'relative', top: '2px'}} />\n                  </LinkWithConfirmation>\n                </Cell>\n              </Fragment>\n            );\n          })}\n      </PanelTable>\n    </div>\n  );\n}\n\nconst Cell = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport default OrganizationApiKeysList;\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\n\nimport OrganizationApiKeysList from './organizationApiKeysList';\nimport {DeprecatedApiKey} from './types';\n\ntype Props = RouteComponentProps<{}, {}> & {\n  organization: Organization;\n};\n\ntype State = {\n  keys: DeprecatedApiKey[];\n} & DeprecatedAsyncView['state'];\n\n/**\n * API Keys are deprecated, but there may be some legacy customers that still use it\n */\nclass OrganizationApiKeys extends DeprecatedAsyncView<Props, State> {\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    return [['keys', `/organizations/${organization.slug}/api-keys/`]];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('API Keys'), this.props.organization.slug, false);\n  }\n\n  handleRemove = async (id: string) => {\n    const {organization} = this.props;\n    const oldKeys = [...this.state.keys];\n\n    this.setState(state => ({\n      keys: state.keys.filter(({id: existingId}) => existingId !== id),\n    }));\n\n    try {\n      await this.api.requestPromise(\n        `/organizations/${organization.slug}/api-keys/${id}/`,\n        {\n          method: 'DELETE',\n          data: {},\n        }\n      );\n    } catch {\n      this.setState({keys: oldKeys, busy: false});\n      addErrorMessage(t('Error removing key'));\n    }\n  };\n\n  handleAddApiKey = async () => {\n    this.setState({\n      busy: true,\n    });\n    const {organization} = this.props;\n\n    try {\n      const data = await this.api.requestPromise(\n        `/organizations/${organization.slug}/api-keys/`,\n        {\n          method: 'POST',\n          data: {},\n        }\n      );\n\n      if (data) {\n        this.setState({busy: false});\n        browserHistory.push(\n          recreateRoute(`${data.id}/`, {\n            params: {orgId: organization.slug},\n            routes: this.props.routes,\n          })\n        );\n        addSuccessMessage(t('Created a new API key \"%s\"', data.label));\n      }\n    } catch {\n      this.setState({busy: false});\n    }\n  };\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const params = {orgId: organization.slug};\n\n    return (\n      <OrganizationApiKeysList\n        {...this.props}\n        params={params}\n        loading={this.state.loading}\n        busy={this.state.busy}\n        keys={this.state.keys}\n        onRemove={this.handleRemove}\n        onAddApiKey={this.handleAddApiKey}\n      />\n    );\n  }\n}\n\nexport default withOrganization(OrganizationApiKeys);\n"],"names":["LinkWithConfirmation","_ref","className","disabled","title","children","otherProps","_jsx","Confirm","Anchor","href","displayName","routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","SentryDocumentTitle","this","renderComponent","_ref3","name","styles","OrganizationApiKeysList","organization","params","routes","keys","busy","loading","onAddApiKey","onRemove","hasKeys","action","Button","priority","size","icon","IconAdd","isCircled","onClick","t","_jsxs","SettingsPageHeader","TextBlock","tct","api","ExternalLink","AlertLink","to","tokens","PanelTable","isLoading","isEmpty","emptyMessage","headers","map","_ref2","id","key","label","apiDetailsUrl","recreateRoute","orgId","slug","Fragment","Cell","Link","TextCopyInput","monospace","onConfirm","message","IconDelete","css","_styled","target","OrganizationApiKeys","constructor","_defineProperty","async","props","oldKeys","state","setState","filter","existingId","requestPromise","method","data","addErrorMessage","browserHistory","push","addSuccessMessage","getEndpoints","routeTitleGen","renderLoading","renderBody","handleRemove","handleAddApiKey","withOrganization"],"sourceRoot":""}