{"version":3,"file":"chunks/app_components_onboarding_gettingStartedDoc_layout_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/onboarding/gettingStartedDoc/layout.tsx","webpack:///./app/components/onboarding/gettingStartedDoc/step.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {Step, StepProps} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {\n  ProductSelection,\n  ProductSolution,\n} from 'sentry/components/onboarding/productSelection';\nimport {PlatformKey} from 'sentry/data/platformCategories';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {space} from 'sentry/styles/space';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nconst ProductSelectionAvailabilityHook = HookOrDefault({\n  hookName: 'component:product-selection-availability',\n});\n\ntype NextStep = {\n  description: string;\n  link: string;\n  name: string;\n};\n\nexport type LayoutProps = {\n  steps: StepProps[];\n  /**\n   * An introduction displayed before the steps\n   */\n  introduction?: React.ReactNode;\n  newOrg?: boolean;\n  nextSteps?: NextStep[];\n  platformKey?: PlatformKey;\n};\n\nexport function Layout({\n  steps,\n  platformKey,\n  nextSteps = [],\n  newOrg,\n  introduction,\n}: LayoutProps) {\n  const organization = useOrganization();\n  const {isSelfHosted} = useLegacyStore(ConfigStore);\n\n  const isJavaScriptPlatform =\n    platformKey === 'javascript' || !!platformKey?.match('^javascript-([A-Za-z]+)$');\n\n  const displayProductSelection = !isSelfHosted && isJavaScriptPlatform;\n\n  return (\n    <Wrapper>\n      {introduction && (\n        <Fragment>\n          <Introduction>{introduction}</Introduction>\n          <Divider />\n        </Fragment>\n      )}\n      {displayProductSelection && newOrg && (\n        <ProductSelection\n          defaultSelectedProducts={[\n            ProductSolution.PERFORMANCE_MONITORING,\n            ProductSolution.SESSION_REPLAY,\n          ]}\n        />\n      )}\n      {displayProductSelection && !newOrg && (\n        <ProductSelectionAvailabilityHook organization={organization} />\n      )}\n      <Steps withTopSpacing={!displayProductSelection && newOrg}>\n        {steps.map(step => (\n          <Step key={step.title ?? step.type} {...step} />\n        ))}\n      </Steps>\n      {nextSteps.length > 0 && (\n        <Fragment>\n          <Divider />\n          <h4>{t('Next Steps')}</h4>\n          <List symbol=\"bullet\">\n            {nextSteps.map(step => (\n              <ListItem key={step.name}>\n                <ExternalLink href={step.link}>{step.name}</ExternalLink>\n                {': '}\n                {step.description}\n              </ListItem>\n            ))}\n          </List>\n        </Fragment>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Divider = styled('hr')`\n  height: 1px;\n  width: 100%;\n  background: ${p => p.theme.border};\n  border: none;\n`;\n\nconst Steps = styled('div')<{withTopSpacing?: boolean}>`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  ${p => p.withTopSpacing && `margin-top: ${space(3)}`}\n`;\n\nconst Introduction = styled('div')`\n  display: flex;\n  flex-direction: column;\n  gap: ${space(1)};\n`;\n\nconst Wrapper = styled('div')`\n  h4 {\n    margin-bottom: 0.5em;\n  }\n  && {\n    p {\n      margin-bottom: 0;\n    }\n    h5 {\n      margin-bottom: 0;\n    }\n  }\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport beautify from 'js-beautify';\n\nimport {CodeSnippet} from 'sentry/components/codeSnippet';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\nexport enum StepType {\n  INSTALL = 'install',\n  CONFIGURE = 'configure',\n  VERIFY = 'verify',\n}\n\nexport const StepTitle = {\n  [StepType.INSTALL]: t('Install'),\n  [StepType.CONFIGURE]: t('Configure SDK'),\n  [StepType.VERIFY]: t('Verify'),\n};\n\ntype ConfigurationType = {\n  /**\n   * Additional information to be displayed below the code snippet\n   */\n  additionalInfo?: React.ReactNode;\n  /**\n   * The code snippet to display\n   */\n  code?: string;\n  /**\n   * Nested configurations provide a convenient way to accommodate diverse layout styles, like the Spring Boot configuration.\n   */\n  configurations?: ConfigurationType[];\n  /**\n   * A brief description of the configuration\n   */\n  description?: React.ReactNode;\n  /**\n   * The language of the code to be rendered (python, javascript, etc)\n   */\n  language?: string;\n  /**\n   * A callback to be invoked when the configuration is copied to the clipboard\n   */\n  onCopy?: () => void;\n  /**\n   * A callback to be invoked when the configuration is selected and copied to the clipboard\n   */\n  onSelectAndCopy?: () => void;\n};\n\ninterface BaseStepProps {\n  /**\n   * Additional information to be displayed below the configurations\n   */\n  additionalInfo?: React.ReactNode;\n  configurations?: ConfigurationType[];\n  /**\n   * A brief description of the step\n   */\n  description?: React.ReactNode;\n}\ninterface StepPropsWithTitle extends BaseStepProps {\n  title: string;\n  type?: undefined;\n}\n\ninterface StepPropsWithoutTitle extends BaseStepProps {\n  type: StepType;\n  title?: undefined;\n}\n\nexport type StepProps = StepPropsWithTitle | StepPropsWithoutTitle;\n\nfunction getConfiguration({\n  description,\n  code,\n  language,\n  additionalInfo,\n  onCopy,\n  onSelectAndCopy,\n}: ConfigurationType) {\n  return (\n    <Configuration>\n      {description && <Description>{description}</Description>}\n      {language && code && (\n        <CodeSnippet\n          dark\n          language={language}\n          onCopy={onCopy}\n          onSelectAndCopy={onSelectAndCopy}\n        >\n          {language === 'javascript'\n            ? beautify.js(code, {indent_size: 2, e4x: true})\n            : code.trim()}\n        </CodeSnippet>\n      )}\n      {additionalInfo && <AdditionalInfo>{additionalInfo}</AdditionalInfo>}\n    </Configuration>\n  );\n}\n\nexport function Step({\n  title,\n  type,\n  configurations,\n  additionalInfo,\n  description,\n}: StepProps) {\n  return (\n    <div>\n      <h4>{title ?? StepTitle[type]}</h4>\n      {description && <Description>{description}</Description>}\n      {!!configurations?.length && (\n        <Configurations>\n          {configurations.map((configuration, index) => {\n            if (configuration.configurations) {\n              return (\n                <Fragment key={index}>\n                  {getConfiguration(configuration)}\n                  {configuration.configurations.map(\n                    (nestedConfiguration, nestedConfigurationIndex) => (\n                      <Fragment key={nestedConfigurationIndex}>\n                        {getConfiguration(nestedConfiguration)}\n                      </Fragment>\n                    )\n                  )}\n                </Fragment>\n              );\n            }\n            return <Fragment key={index}>{getConfiguration(configuration)}</Fragment>;\n          })}\n        </Configurations>\n      )}\n      {additionalInfo && <GeneralAdditionalInfo>{additionalInfo}</GeneralAdditionalInfo>}\n    </div>\n  );\n}\n\nconst Configuration = styled('div')`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst Configurations = styled(Configuration)`\n  margin-top: ${space(2)};\n`;\n\nconst Description = styled(Configuration)`\n  code {\n    color: ${p => p.theme.pink400};\n  }\n`;\n\nconst AdditionalInfo = styled(Description)``;\n\nconst GeneralAdditionalInfo = styled(Description)`\n  margin-top: ${space(2)};\n`;\n"],"names":["ProductSelectionAvailabilityHook","HookOrDefault","hookName","Layout","_ref","steps","platformKey","nextSteps","newOrg","introduction","organization","useOrganization","isSelfHosted","useLegacyStore","ConfigStore","isJavaScriptPlatform","match","displayProductSelection","_jsxs","Wrapper","children","Fragment","_jsx","Introduction","Divider","ProductSelection","defaultSelectedProducts","ProductSolution","PERFORMANCE_MONITORING","SESSION_REPLAY","Steps","withTopSpacing","map","step","Step","title","type","length","t","List","symbol","ListItem","ExternalLink","href","link","name","description","displayName","_styled","target","p","theme","border","space","styles","StepType","StepTitle","INSTALL","CONFIGURE","VERIFY","getConfiguration","code","language","additionalInfo","onCopy","onSelectAndCopy","Configuration","Description","CodeSnippet","dark","beautify","indent_size","e4x","trim","AdditionalInfo","_ref2","configurations","Configurations","configuration","index","nestedConfiguration","nestedConfigurationIndex","GeneralAdditionalInfo","pink400"],"sourceRoot":""}