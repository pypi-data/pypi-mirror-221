{"version":3,"file":"chunks/app_views_settings_account_apiTokens_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/account/apiTokenRow.tsx","webpack:///./app/views/settings/account/apiTokens.tsx"],"sourcesContent":["import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport DateTime from 'sentry/components/dateTime';\nimport PanelItem from 'sentry/components/panels/panelItem';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {IconSubtract} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {InternalAppApiToken} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\ntype Props = {\n  onRemove: (token: InternalAppApiToken) => void;\n  token: InternalAppApiToken;\n};\n\nfunction ApiTokenRow({token, onRemove}: Props) {\n  return (\n    <StyledPanelItem>\n      <Controls>\n        <InputWrapper>\n          <TextCopyInput>\n            {getDynamicText({value: token.token, fixed: 'CI_AUTH_TOKEN'})}\n          </TextCopyInput>\n        </InputWrapper>\n        <Button\n          onClick={() => onRemove(token)}\n          icon={<IconSubtract isCircled size=\"xs\" />}\n        >\n          {t('Remove')}\n        </Button>\n      </Controls>\n\n      <Details>\n        <ScopesWrapper>\n          <Heading>{t('Scopes')}</Heading>\n          <ScopeList>{token.scopes.join(', ')}</ScopeList>\n        </ScopesWrapper>\n        <div>\n          <Heading>{t('Created')}</Heading>\n          <Time>\n            <DateTime\n              date={getDynamicText({\n                value: token.dateCreated,\n                fixed: new Date(1508208080000), // National Pasta Day\n              })}\n            />\n          </Time>\n        </div>\n      </Details>\n    </StyledPanelItem>\n  );\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  flex-direction: column;\n  padding: ${space(2)};\n`;\n\nconst Controls = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${space(1)};\n`;\n\nconst InputWrapper = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nconst Details = styled('div')`\n  display: flex;\n  margin-top: ${space(1)};\n`;\n\nconst ScopesWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst ScopeList = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4;\n`;\n\nconst Time = styled('time')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4;\n`;\n\nconst Heading = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-transform: uppercase;\n  color: ${p => p.theme.subText};\n  margin-bottom: ${space(1)};\n`;\n\nexport default ApiTokenRow;\n","import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport AlertLink from 'sentry/components/alertLink';\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport {t, tct} from 'sentry/locale';\nimport {InternalAppApiToken, Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport ApiTokenRow from 'sentry/views/settings/account/apiTokenRow';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = {\n  organization: Organization;\n} & DeprecatedAsyncView['props'];\n\ntype State = {\n  tokenList: InternalAppApiToken[] | null;\n} & DeprecatedAsyncView['state'];\n\nexport class ApiTokens extends DeprecatedAsyncView<Props, State> {\n  getTitle() {\n    return t('User Auth Tokens');\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      tokenList: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    return [['tokenList', '/api-tokens/']];\n  }\n\n  handleRemoveToken = (token: InternalAppApiToken) => {\n    addLoadingMessage();\n    const oldTokenList = this.state.tokenList;\n\n    this.setState(\n      state => ({\n        tokenList: state.tokenList?.filter(tk => tk.token !== token.token) ?? [],\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-tokens/', {\n            method: 'DELETE',\n            data: {token: token.token},\n          });\n\n          addSuccessMessage(t('Removed token'));\n        } catch (_err) {\n          addErrorMessage(t('Unable to remove token. Please try again.'));\n          this.setState({\n            tokenList: oldTokenList,\n          });\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n    const {tokenList} = this.state;\n\n    const isEmpty = !Array.isArray(tokenList) || tokenList.length === 0;\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"sm\"\n        to=\"/settings/account/api/auth-tokens/new-token/\"\n        data-test-id=\"create-token\"\n      >\n        {t('Create New Token')}\n      </Button>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title={this.getTitle()} action={action} />\n        <AlertLink\n          to={`/settings/${organization?.slug ?? ''}/developer-settings/new-internal`}\n        >\n          {t(\n            \"Auth Tokens are tied to the logged in user, meaning they'll stop working if the user leaves the organization! We suggest using internal integrations to create/manage tokens tied to the organization instead.\"\n          )}\n        </AlertLink>\n        <TextBlock>\n          {t(\n            \"Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.\"\n          )}\n        </TextBlock>\n        <TextBlock>\n          {tct(\n            'For more information on how to use the web API, see our [link:documentation].',\n            {\n              link: <ExternalLink href=\"https://docs.sentry.io/api/\" />,\n            }\n          )}\n        </TextBlock>\n        <Panel>\n          <PanelHeader>{t('Auth Token')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't created any authentication tokens yet.\")}\n              </EmptyMessage>\n            )}\n\n            {tokenList?.map(token => (\n              <ApiTokenRow\n                key={token.token}\n                token={token}\n                onRemove={this.handleRemoveToken}\n              />\n            ))}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ApiTokens);\n"],"names":["getPadding","_ref","disablePadding","hasButtons","css","space","_styled","target","p","lightText","theme","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","ApiTokenRow","token","onRemove","_jsxs","StyledPanelItem","Controls","InputWrapper","TextCopyInput","getDynamicText","value","fixed","Button","onClick","icon","IconSubtract","isCircled","size","t","Details","ScopesWrapper","Heading","ScopeList","scopes","join","Time","DateTime","date","dateCreated","Date","PanelItem","fontSizeRelativeSmall","name","styles","fontSizeMedium","subText","ApiTokens","constructor","arguments","_defineProperty","addLoadingMessage","oldTokenList","state","tokenList","setState","filter","tk","async","api","requestPromise","method","data","addSuccessMessage","_err","addErrorMessage","getDefaultState","super","getEndpoints","renderBody","organization","props","isEmpty","Array","isArray","length","action","priority","to","SettingsPageHeader","AlertLink","slug","TextBlock","tct","link","ExternalLink","href","Panel","PanelHeader","PanelBody","EmptyMessage","map","handleRemoveToken","withOrganization"],"sourceRoot":""}