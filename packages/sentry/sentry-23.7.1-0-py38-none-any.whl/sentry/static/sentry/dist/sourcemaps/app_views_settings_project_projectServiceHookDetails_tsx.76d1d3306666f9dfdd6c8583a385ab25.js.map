{"version":3,"file":"chunks/app_views_settings_project_projectServiceHookDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/forms/fields/booleanField.tsx","webpack:///./app/components/switchButton.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/project/projectServiceHookDetails.tsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport Confirm from 'sentry/components/confirm';\nimport FormField from 'sentry/components/forms/formField';\nimport Switch from 'sentry/components/switchButton';\nimport {Tooltip} from 'sentry/components/tooltip';\n\n// XXX(epurkhiser): This is wrong, it should not be inheriting these props\nimport {InputFieldProps, OnEvent} from './inputField';\n\nexport interface BooleanFieldProps extends InputFieldProps {\n  confirm?: {\n    false?: React.ReactNode;\n    true?: React.ReactNode;\n  };\n}\n\nexport default class BooleanField extends Component<BooleanFieldProps> {\n  coerceValue(value: any) {\n    return !!value;\n  }\n\n  handleChange = (\n    value: any,\n    onChange: OnEvent,\n    onBlur: OnEvent,\n    e: React.FormEvent<HTMLInputElement>\n  ) => {\n    // We need to toggle current value because Switch is not an input\n    const newValue = this.coerceValue(!value);\n    onChange(newValue, e);\n    onBlur(newValue, e);\n  };\n\n  render() {\n    const {confirm, disabledReason, ...fieldProps} = this.props;\n\n    return (\n      <FormField {...fieldProps} resetOnError>\n        {({\n          children: _children,\n          onChange,\n          onBlur,\n          value,\n          disabled,\n          ...props\n        }: {\n          disabled: boolean;\n          onBlur: OnEvent;\n          onChange: OnEvent;\n          type: string;\n          value: any;\n          children?: React.ReactNode;\n        }) => {\n          // Create a function with required args bound\n          const handleChange = this.handleChange.bind(this, value, onChange, onBlur);\n\n          const {type: _, ...propsWithoutType} = props;\n          const switchProps = {\n            ...propsWithoutType,\n            size: 'lg' as React.ComponentProps<typeof Switch>['size'],\n            isActive: !!value,\n            isDisabled: disabled,\n            toggle: handleChange,\n          };\n\n          if (confirm) {\n            return (\n              <Confirm\n                renderMessage={() => confirm[(!value).toString()]}\n                onConfirm={() => handleChange({})}\n              >\n                {({open}) => (\n                  <Tooltip title={disabledReason} skipWrapper disabled={!disabled}>\n                    <Switch\n                      {...switchProps}\n                      toggle={(e: React.MouseEvent) => {\n                        // If we have a `confirm` prop and enabling switch\n                        // Then show confirm dialog, otherwise propagate change as normal\n                        if (confirm[(!value).toString()]) {\n                          // Open confirm modal\n                          open();\n                          return;\n                        }\n\n                        handleChange(e);\n                      }}\n                    />\n                  </Tooltip>\n                )}\n              </Confirm>\n            );\n          }\n\n          return (\n            <Tooltip title={disabledReason} skipWrapper disabled={!disabled}>\n              <Switch {...switchProps} />\n            </Tooltip>\n          );\n        }}\n      </FormField>\n    );\n  }\n}\n","import {forwardRef} from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  toggle: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n  /**\n   * Toggle color is always active.\n   */\n  forceActiveColor?: boolean;\n  forwardedRef?: React.Ref<HTMLButtonElement>;\n  id?: string;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n  name?: string;\n  size?: 'sm' | 'lg';\n};\n\nfunction Switch({\n  forwardedRef,\n  size = 'sm',\n  isActive,\n  forceActiveColor,\n  isLoading,\n  isDisabled,\n  toggle,\n  id,\n  name,\n  className,\n  ...props\n}: Props) {\n  return (\n    <SwitchButton\n      ref={forwardedRef}\n      id={id}\n      name={name}\n      type=\"button\"\n      className={className}\n      onClick={isDisabled ? undefined : toggle}\n      role=\"checkbox\"\n      aria-checked={isActive}\n      isLoading={isLoading}\n      disabled={isDisabled}\n      isActive={isActive}\n      size={size}\n      data-test-id=\"switch\"\n      {...props}\n    >\n      <Toggle\n        isDisabled={isDisabled}\n        isActive={isActive}\n        forceActiveColor={forceActiveColor}\n        size={size}\n      />\n    </SwitchButton>\n  );\n}\n\ntype StyleProps = Partial<Props>;\n\nconst getSize = (p: StyleProps) => (p.size === 'sm' ? 16 : 24);\nconst getToggleSize = (p: StyleProps) => getSize(p) - (p.size === 'sm' ? 4 : 8);\nconst getToggleTop = (p: StyleProps) => (p.size === 'sm' ? 1 : 3);\nconst getTranslateX = (p: StyleProps) =>\n  p.isActive ? getToggleTop(p) + getSize(p) * 0.875 : getToggleTop(p);\n\nconst SwitchButton = styled('button')<StyleProps>`\n  display: inline-block;\n  background: none;\n  padding: 0;\n  border: 1px solid ${p => p.theme.border};\n  position: relative;\n  box-shadow: inset ${p => p.theme.dropShadowMedium};\n  height: ${getSize}px;\n  width: ${p => getSize(p) * 1.875}px;\n  border-radius: ${getSize}px;\n  transition: border 0.1s, box-shadow 0.1s;\n\n  &[disabled] {\n    cursor: not-allowed;\n  }\n\n  &:focus,\n  &.focus-visible {\n    outline: none;\n    border-color: ${p => p.theme.focusBorder};\n    box-shadow: ${p => p.theme.focusBorder} 0 0 0 1px;\n  }\n`;\n\nconst Toggle = styled('span')<StyleProps>`\n  display: block;\n  position: absolute;\n  border-radius: 50%;\n  transition: 0.25s all ease;\n  top: ${getToggleTop}px;\n  transform: translateX(${getTranslateX}px);\n  width: ${getToggleSize}px;\n  height: ${getToggleSize}px;\n  background: ${p =>\n    p.isActive || p.forceActiveColor ? p.theme.active : p.theme.border};\n  opacity: ${p => (p.isDisabled ? 0.4 : null)};\n`;\n\nexport default forwardRef<HTMLButtonElement, Props>((props, ref) => (\n  <Switch {...props} forwardedRef={ref} />\n));\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Button} from 'sentry/components/button';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelAlert from 'sentry/components/panels/panelAlert';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t} from 'sentry/locale';\nimport {Organization, ServiceHook} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'sentry/views/settings/project/serviceHookSettingsForm';\n\ntype Params = {\n  hookId: string;\n  projectId: string;\n};\n\ntype StatsProps = {\n  organization: Organization;\n  params: Params;\n};\n\ntype StatsState = {\n  stats: {total: number; ts: number}[] | null;\n} & DeprecatedAsyncComponent['state'];\n\nclass HookStats extends DeprecatedAsyncComponent<StatsProps, StatsState> {\n  getEndpoints(): ReturnType<DeprecatedAsyncComponent['getEndpoints']> {\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n    const {organization} = this.props;\n    const {hookId, projectId} = this.props.params;\n    return [\n      [\n        'stats',\n        `/projects/${organization.slug}/${projectId}/hooks/${hookId}/stats/`,\n        {\n          query: {\n            since,\n            until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderBody() {\n    const {stats} = this.state;\n    if (stats === null) {\n      return null;\n    }\n    let emptyStats = true;\n\n    const series = {\n      seriesName: t('Events'),\n      data: stats.map(p => {\n        if (p.total) {\n          emptyStats = false;\n        }\n        return {\n          name: p.ts * 1000,\n          value: p.total,\n        };\n      }),\n    };\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Events in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {!emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              showTimeInTooltip\n              labelYAxisExtents\n              series={[series]}\n              height={150}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total webhooks fired for this configuration.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype Props = {\n  organization: Organization;\n  params: Params;\n};\ntype State = {\n  hook: ServiceHook | null;\n} & DeprecatedAsyncView['state'];\n\nexport default class ProjectServiceHookDetails extends DeprecatedAsyncView<Props, State> {\n  getEndpoints(): ReturnType<DeprecatedAsyncComponent['getEndpoints']> {\n    const {organization} = this.props;\n    const {projectId, hookId} = this.props.params;\n    return [['hook', `/projects/${organization.slug}/${projectId}/hooks/${hookId}/`]];\n  }\n\n  onDelete = () => {\n    const {organization} = this.props;\n    const {projectId, hookId} = this.props.params;\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(`/projects/${organization.slug}/${projectId}/hooks/${hookId}/`, {\n      method: 'DELETE',\n      success: () => {\n        clearIndicators();\n        browserHistory.push(\n          normalizeUrl(`/settings/${organization.slug}/projects/${projectId}/hooks/`)\n        );\n      },\n      error: () => {\n        addErrorMessage(t('Unable to remove application. Please try again.'));\n      },\n    });\n  };\n\n  renderBody() {\n    const {organization, params} = this.props;\n    const {projectId, hookId} = params;\n    const {hook} = this.state;\n    if (!hook) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <SettingsPageHeader title={t('Service Hook Details')} />\n\n        <ErrorBoundary>\n          <HookStats params={params} organization={organization} />\n        </ErrorBoundary>\n\n        <ServiceHookSettingsForm\n          organization={organization}\n          projectId={projectId}\n          hookId={hookId}\n          initialData={{\n            ...hook,\n            isActive: hook.status !== 'disabled',\n          }}\n        />\n        <Panel>\n          <PanelHeader>{t('Event Validation')}</PanelHeader>\n          <PanelBody>\n            <PanelAlert type=\"info\" showIcon>\n              Sentry will send the <code>X-ServiceHook-Signature</code> header built using{' '}\n              <code>HMAC(SHA256, [secret], [payload])</code>. You should always verify\n              this signature before trusting the information provided in the webhook.\n            </PanelAlert>\n            <FieldGroup\n              label={t('Secret')}\n              flexibleControlStateSize\n              inline={false}\n              help={t('The shared secret used for generating event HMAC signatures.')}\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: hook.secret,\n                  fixed: 'a dynamic secret value',\n                })}\n              </TextCopyInput>\n            </FieldGroup>\n          </PanelBody>\n        </Panel>\n        <Panel>\n          <PanelHeader>{t('Delete Hook')}</PanelHeader>\n          <PanelBody>\n            <FieldGroup\n              label={t('Delete Hook')}\n              help={t('Removing this hook is immediate and permanent.')}\n            >\n              <div>\n                <Button priority=\"danger\" onClick={this.onDelete}>\n                  {t('Delete Hook')}\n                </Button>\n              </div>\n            </FieldGroup>\n          </PanelBody>\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport ApiForm from 'sentry/components/forms/apiForm';\nimport MultipleCheckbox from 'sentry/components/forms/controls/multipleCheckbox';\nimport BooleanField from 'sentry/components/forms/fields/booleanField';\nimport TextField from 'sentry/components/forms/fields/textField';\nimport FormField from 'sentry/components/forms/formField';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport {t} from 'sentry/locale';\nimport {Organization, ServiceHook} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\nconst EVENT_CHOICES = ['event.alert', 'event.created'];\n\ntype Props = {\n  initialData: Partial<ServiceHook> & {isActive: boolean};\n  organization: Organization;\n  projectId: string;\n  hookId?: string;\n};\n\nexport default class ServiceHookSettingsForm extends Component<Props> {\n  onSubmitSuccess = () => {\n    const {organization, projectId} = this.props;\n    browserHistory.push(\n      normalizeUrl(`/settings/${organization.slug}/projects/${projectId}/hooks/`)\n    );\n  };\n\n  render() {\n    const {initialData, organization, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${organization.slug}/${projectId}/hooks/${hookId}/`\n      : `/projects/${organization.slug}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({name, value, onChange}) => (\n                <MultipleCheckbox onChange={onChange} value={value} name={name}>\n                  {EVENT_CHOICES.map(event => (\n                    <MultipleCheckbox.Item key={event} value={event}>\n                      {event}\n                    </MultipleCheckbox.Item>\n                  ))}\n                </MultipleCheckbox>\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n"],"names":["BooleanField","Component","constructor","arguments","_defineProperty","value","onChange","onBlur","e","newValue","this","coerceValue","render","confirm","disabledReason","fieldProps","props","_jsx","FormField","resetOnError","children","_ref","_children","disabled","handleChange","bind","type","_","propsWithoutType","switchProps","size","isActive","isDisabled","toggle","Confirm","renderMessage","toString","onConfirm","_ref2","open","Tooltip","title","skipWrapper","Switch","displayName","forwardedRef","forceActiveColor","isLoading","id","name","className","SwitchButton","ref","onClick","undefined","role","Toggle","getSize","p","getToggleSize","getToggleTop","getTranslateX","_styled","target","theme","border","dropShadowMedium","focusBorder","active","forwardRef","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","SentryDocumentTitle","renderComponent","HookStats","getEndpoints","until","Math","floor","Date","getTime","since","organization","hookId","projectId","params","slug","query","resolution","renderBody","stats","state","emptyStats","series","seriesName","t","data","map","total","ts","_jsxs","Panel","PanelHeader","PanelBody","withPadding","EmptyMessage","description","MiniBarChart","isGroupedByDate","showTimeInTooltip","labelYAxisExtents","height","ProjectServiceHookDetails","addLoadingMessage","api","request","method","success","clearIndicators","browserHistory","push","normalizeUrl","error","addErrorMessage","hook","Fragment","SettingsPageHeader","ErrorBoundary","ServiceHookSettingsForm","initialData","status","PanelAlert","showIcon","FieldGroup","label","flexibleControlStateSize","inline","help","TextCopyInput","getDynamicText","secret","fixed","Button","priority","onDelete","EVENT_CHOICES","endpoint","ApiForm","apiMethod","apiEndpoint","onSubmitSuccess","footerStyle","marginTop","paddingRight","submitLabel","TextField","required","MultipleCheckbox","event","Item"],"sourceRoot":""}