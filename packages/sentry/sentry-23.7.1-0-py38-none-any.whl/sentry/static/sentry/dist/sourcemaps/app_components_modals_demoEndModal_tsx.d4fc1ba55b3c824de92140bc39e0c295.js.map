{"version":3,"file":"chunks/app_components_modals_demoEndModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/guides.tsx","webpack:///./app/actionCreators/onboardingTasks.tsx","webpack:///./app/components/card.tsx","webpack:///./app/components/onboardingWizard/modalTask.tsx","webpack:///./app/components/modals/demoEndModal.tsx","webpack:///./app/components/sidebar/types.tsx","webpack:///./app/stores/sidebarPanelStore.tsx","webpack:///./app/utils/demoMode.tsx","webpack:///./app/utils/useApi.tsx","webpack:///./app/utils/useNavigate.tsx"],"sourcesContent":["import * as Sentry from '@sentry/react';\n\nimport {fetchOrganizationDetails} from 'sentry/actionCreators/organization';\nimport {Client} from 'sentry/api';\nimport ConfigStore from 'sentry/stores/configStore';\nimport GuideStore from 'sentry/stores/guideStore';\nimport {Organization} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport {getTourTask, isDemoWalkthrough} from 'sentry/utils/demoMode';\n\nimport {demoEndModal} from './modal';\nimport {updateOnboardingTask} from './onboardingTasks';\n\nconst api = new Client();\n\nexport async function fetchGuides() {\n  try {\n    const data = await api.requestPromise('/assistant/');\n    GuideStore.fetchSucceeded(data);\n  } catch (err) {\n    if (err.status !== 401 && err.status !== 403) {\n      Sentry.captureException(err);\n    }\n  }\n}\n\nexport function registerAnchor(target: string) {\n  GuideStore.registerAnchor(target);\n}\n\nexport function unregisterAnchor(target: string) {\n  GuideStore.unregisterAnchor(target);\n}\n\nexport function nextStep() {\n  GuideStore.nextStep();\n}\n\nexport function setForceHide(forceHide: boolean) {\n  GuideStore.setForceHide(forceHide);\n}\n\nexport function toStep(step: number) {\n  GuideStore.toStep(step);\n}\n\nexport function closeGuide(dismissed?: boolean) {\n  GuideStore.closeGuide(dismissed);\n}\n\nexport function dismissGuide(guide: string, step: number, orgId: string | null) {\n  recordDismiss(guide, step, orgId);\n  closeGuide(true);\n}\n\nexport function recordFinish(\n  guide: string,\n  orgId: string | null,\n  orgSlug: string | null,\n  org: Organization | null\n) {\n  api.requestPromise('/assistant/', {\n    method: 'PUT',\n    data: {\n      guide,\n      status: 'viewed',\n    },\n  });\n\n  const tourTask = getTourTask(guide);\n\n  if (isDemoWalkthrough() && tourTask && org) {\n    const {tour, task} = tourTask;\n    updateOnboardingTask(api, org, {task, status: 'complete', completionSeen: true});\n    fetchOrganizationDetails(api, org.slug, true, false);\n    demoEndModal({tour, orgSlug});\n  }\n\n  const user = ConfigStore.get('user');\n  if (!user) {\n    return;\n  }\n\n  trackAnalytics('assistant.guide_finished', {\n    organization: orgId,\n    guide,\n  });\n}\n\nexport function recordDismiss(guide: string, step: number, orgId: string | null) {\n  api.requestPromise('/assistant/', {\n    method: 'PUT',\n    data: {\n      guide,\n      status: 'dismissed',\n    },\n  });\n\n  const user = ConfigStore.get('user');\n  if (!user) {\n    return;\n  }\n  trackAnalytics('assistant.guide_dismissed', {\n    organization: orgId,\n    guide,\n    step,\n  });\n}\n","import {Client} from 'sentry/api';\nimport ConfigStore from 'sentry/stores/configStore';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport {OnboardingTask, OnboardingTaskStatus, Organization} from 'sentry/types';\n\ninterface UpdatedTask extends Partial<Pick<OnboardingTask, 'status' | 'data'>> {\n  task: OnboardingTask['task'];\n  /**\n   * Marks completion seen. This differs from the OnboardingTask\n   * completionSeen type as that returns the date completion was seen.\n   */\n  completionSeen?: boolean;\n}\n\n/**\n * Update an onboarding task.\n *\n * If no API client is provided the task will not be updated on the server side\n * and will only update in the organization store.\n */\nexport function updateOnboardingTask(\n  api: Client | null,\n  organization: Organization,\n  updatedTask: UpdatedTask\n) {\n  if (api !== null) {\n    api.requestPromise(`/organizations/${organization.slug}/onboarding-tasks/`, {\n      method: 'POST',\n      data: updatedTask,\n    });\n  }\n\n  const hasExistingTask = organization.onboardingTasks.find(\n    task => task.task === updatedTask.task\n  );\n\n  const user = ConfigStore.get('user');\n  const onboardingTasks = hasExistingTask\n    ? organization.onboardingTasks.map(task =>\n        task.task === updatedTask.task ? {...task, ...updatedTask} : task\n      )\n    : [...organization.onboardingTasks, {...updatedTask, user} as OnboardingTaskStatus];\n\n  OrganizationStore.onUpdate({onboardingTasks});\n}\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Panel from 'sentry/components/panels/panel';\n\ntype Props = {\n  /**\n   * Adds hover and focus states to the card\n   */\n  interactive?: boolean;\n};\n\nconst hoverStyle = css`\n  &:focus,\n  &:hover {\n    box-shadow: 0px 0px 0px 6px rgba(209, 202, 216, 0.2);\n    outline: none;\n  }\n\n  &:active {\n    box-shadow: 0px 0px 0px 6px rgba(209, 202, 216, 0.5);\n  }\n\n  /* This is to ensure the graph is visually clickable */\n  * {\n    cursor: pointer;\n  }\n`;\n\nconst Card = styled(Panel)<Props>`\n  display: flex;\n  align-items: stretch;\n  flex-direction: column;\n  transition: box-shadow 0.2s ease;\n  text-align: left;\n  padding: 0;\n\n  ${p => p.interactive && 'cursor: pointer'};\n  ${p => p.interactive && hoverStyle};\n`;\n\nexport default Card;\n","import styled from '@emotion/styled';\n\nimport Card from 'sentry/components/card';\nimport {IconCheckmark} from 'sentry/icons/iconCheckmark';\nimport {space} from 'sentry/styles/space';\n\ntype Props = {title?: string};\n\nexport default function ModalTask({title}: Props) {\n  return (\n    <TaskCard>\n      <Title>\n        {<IconCheckmark isCircled color=\"successText\" />}\n        {title}\n      </Title>\n    </TaskCard>\n  );\n}\n\nconst Title = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(1)};\n  align-items: center;\n  font-weight: 600;\n`;\n\nconst TaskCard = styled(Card)`\n  position: relative;\n  padding: ${space(2)} ${space(3)};\n`;\n","import {useCallback} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {fetchGuides} from 'sentry/actionCreators/guides';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Button} from 'sentry/components/button';\nimport ModalTask from 'sentry/components/onboardingWizard/modalTask';\nimport {SidebarPanelKey} from 'sentry/components/sidebar/types';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport SidebarPanelStore from 'sentry/stores/sidebarPanelStore';\nimport {Organization} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport useApi from 'sentry/utils/useApi';\nimport {useNavigate} from 'sentry/utils/useNavigate';\n\n// tour is a string that tells which tour the user is completing in the walkthrough\ntype Props = ModalRenderProps & {orgSlug: Organization['slug'] | null; tour: string};\n\nexport default function DemoEndingModal({tour, closeModal, CloseButton, orgSlug}: Props) {\n  const api = useApi();\n  const navigate = useNavigate();\n\n  let cardTitle = '',\n    body = '',\n    guides = [''],\n    path = '';\n\n  switch (tour) {\n    case 'issues':\n      cardTitle = t('Issues Tour');\n      body = t(\n        'Thank you for completing the Issues tour. Learn about other Sentry features by starting another tour.'\n      );\n      guides = ['issues_v3', 'issue_stream_v3'];\n      path = `/organizations/${orgSlug}/issues/`;\n      break;\n    case 'performance':\n      cardTitle = t('Performance Tour');\n      body = t(\n        'Thank you for completing the Performance tour. Learn about other Sentry features by starting another tour.'\n      );\n      guides = ['performance', 'transaction_summary', 'transaction_details_v2'];\n      path = `/organizations/${orgSlug}/performance/`;\n      break;\n    case 'releases':\n      cardTitle = t('Releases Tour');\n      body = t(\n        'Thank you for completing the Releases tour. Learn about other Sentry features by starting another tour.'\n      );\n      guides = ['releases_v2', 'react-native-release', 'release-details_v2'];\n      path = `/organizations/${orgSlug}/releases/`;\n      break;\n    case 'tabs':\n      cardTitle = t('Check out the different tabs');\n      body = t(\n        'Thank you for checking out the different tabs. Learn about other Sentry features by starting another tour.'\n      );\n      guides = ['sidebar_v2'];\n      path = `/organizations/${orgSlug}/projects/`;\n      break;\n    default:\n  }\n\n  const sandboxData = window.SandboxData;\n  const url = sandboxData?.cta?.url || 'https://sentry.io/signup/';\n\n  const navigation = useCallback(() => {\n    navigate(path);\n  }, [path, navigate]);\n\n  async function handleRestart() {\n    await Promise.all(\n      guides.map(guide =>\n        api.requestPromise('/assistant/', {\n          method: 'PUT',\n          data: {guide, status: 'restart'},\n        })\n      )\n    );\n\n    trackAnalytics('growth.end_modal_restart_tours', {\n      organization: null,\n    });\n\n    closeModal?.();\n\n    fetchGuides();\n\n    navigation();\n  }\n\n  const handleMoreTours = () => {\n    closeModal?.();\n    SidebarPanelStore.togglePanel(SidebarPanelKey.ONBOARDING_WIZARD);\n    trackAnalytics('growth.end_modal_more_tours', {\n      organization: null,\n    });\n  };\n\n  return (\n    <EndModal>\n      <CloseButton\n        size=\"zero\"\n        onClick={() => {\n          trackAnalytics('growth.end_modal_close', {\n            organization: null,\n          });\n          if (closeModal) {\n            closeModal();\n          }\n        }}\n        icon={<IconClose size=\"xs\" />}\n      />\n      <ModalHeader>\n        <h2> {t('Tour Complete')} </h2>\n      </ModalHeader>\n      <ModalTask title={cardTitle} />\n      <ModalHeader>{body}</ModalHeader>\n      <ButtonContainer>\n        <SignUpButton\n          external\n          href={url}\n          onClick={() => {\n            trackAnalytics('growth.end_modal_signup', {\n              organization: null,\n            });\n          }}\n        >\n          {sandboxData?.cta?.title || t('Sign up for Sentry')}\n        </SignUpButton>\n        <ButtonBar>\n          <Button onClick={handleMoreTours}>{t('More Tours')} </Button>\n          <Button onClick={handleRestart}>{t('Restart Tour')}</Button>\n        </ButtonBar>\n      </ButtonContainer>\n    </EndModal>\n  );\n}\n\nexport const modalCss = css`\n  width: 100%;\n  max-width: 500px;\n  [role='document'] {\n    position: relative;\n    padding: 50px 60px;\n  }\n`;\n\nconst EndModal = styled('div')`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n`;\n\nconst ModalHeader = styled('div')`\n  p {\n    font-size: 16px;\n    text-align: center;\n    margin: 0;\n  }\n  h2 {\n    font-size: 2em;\n    margin: 0;\n  }\n`;\n\nconst SignUpButton = styled(Button)`\n  background-color: ${p => p.theme.purple300};\n  border: none;\n  color: ${p => p.theme.white};\n  width: 100%;\n`;\n\nconst ButtonBar = styled('div')`\n  display: flex;\n  flex-direction: row;\n  gap: 5px;\n  justify-content: center;\n`;\nconst ButtonContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","export type SidebarOrientation = 'top' | 'left';\n\nexport enum SidebarPanelKey {\n  BROADCASTS = 'broadcasts',\n  ONBOARDING_WIZARD = 'todos',\n  SERVICE_INCIDENTS = 'statusupdate',\n  PERFORMANCE_ONBOARDING = 'performance_onboarding',\n  REPLAYS_ONBOARDING = 'replays_onboarding',\n  PROFILING_ONBOARDING = 'profiling_onboarding',\n}\n\nexport type CommonSidebarProps = {\n  /**\n   * Is the sidebar collapsed?\n   */\n  collapsed: boolean;\n  /**\n   * The currently shown sidebar flyout panel\n   */\n  currentPanel: SidebarPanelKey | '';\n  /**\n   * Triggered when the panel should be hidden\n   */\n  hidePanel: () => void;\n  /**\n   * Triggered when the panel should be opened\n   */\n  onShowPanel: () => void;\n  /**\n   * The orientation of the sidebar\n   */\n  orientation: SidebarOrientation;\n};\n","import {createStore} from 'reflux';\n\nimport {SidebarPanelKey} from 'sentry/components/sidebar/types';\n\nimport {CommonStoreDefinition} from './types';\n\ntype ActivePanelType = SidebarPanelKey | '';\n\ninterface SidebarPanelStoreDefinition extends CommonStoreDefinition<ActivePanelType> {\n  activatePanel(panel: SidebarPanelKey): void;\n\n  activePanel: ActivePanelType;\n  hidePanel(): void;\n  togglePanel(panel: SidebarPanelKey): void;\n}\n\nconst storeConfig: SidebarPanelStoreDefinition = {\n  activePanel: '',\n\n  init() {\n    // XXX: Do not use `this.listenTo` in this store. We avoid usage of reflux\n    // listeners due to their leaky nature in tests.\n  },\n\n  activatePanel(panel: SidebarPanelKey) {\n    this.activePanel = panel;\n    this.trigger(this.activePanel);\n  },\n\n  togglePanel(panel: SidebarPanelKey) {\n    if (this.activePanel === panel) {\n      this.hidePanel();\n    } else {\n      this.activatePanel(panel);\n    }\n  },\n\n  hidePanel() {\n    this.activePanel = '';\n    this.trigger(this.activePanel);\n  },\n\n  getState() {\n    return this.activePanel;\n  },\n};\n\n/**\n * This store is used to hold local user preferences\n * Side-effects (like reading/writing to cookies) are done in associated actionCreators\n */\nconst SidebarPanelStore = createStore(storeConfig);\nexport default SidebarPanelStore;\n","import ConfigStore from 'sentry/stores/configStore';\nimport {OnboardingTaskKey} from 'sentry/types';\n\nexport function extraQueryParameter(): URLSearchParams {\n  const extraQueryString = window.SandboxData?.extraQueryString || '';\n  const extraQuery = new URLSearchParams(extraQueryString);\n  return extraQuery;\n}\n\nexport function extraQueryParameterWithEmail(): URLSearchParams {\n  const params = extraQueryParameter();\n  const email = localStorage.getItem('email');\n  if (email) {\n    params.append('email', email);\n  }\n  return params;\n}\n\nexport function urlAttachQueryParams(url: string, params: URLSearchParams): string {\n  const queryString = params.toString();\n  if (queryString) {\n    return url + '?' + queryString;\n  }\n  return url;\n}\n\n// For the Sandbox, we are testing a new walkthrough. This affects a few different components of Sentry including the Onboarding Sidebar, Onboarding Tasks, the Demo End Modal, Demo Sign Up Modal, Guides, and more.\n// Outside of the Sandbox, this should have no effect on other elements of Sentry.\nexport function isDemoWalkthrough(): boolean {\n  return ConfigStore.get('demoMode');\n}\n\n// Function to determine which tour has completed depending on the guide that is being passed in.\nexport function getTourTask(\n  guide: string\n): {task: OnboardingTaskKey; tour: string} | undefined {\n  switch (guide) {\n    case 'sidebar_v2':\n      return {tour: 'tabs', task: OnboardingTaskKey.SIDEBAR_GUIDE};\n    case 'issues_v3':\n      return {tour: 'issues', task: OnboardingTaskKey.ISSUE_GUIDE};\n    case 'release-details_v2':\n      return {tour: 'releases', task: OnboardingTaskKey.RELEASE_GUIDE};\n    case 'transaction_details_v2':\n      return {tour: 'performance', task: OnboardingTaskKey.PERFORMANCE_GUIDE};\n    default:\n      return undefined;\n  }\n}\n","import {useCallback, useEffect, useRef} from 'react';\n\nimport {Client} from 'sentry/api';\n\ntype Options = {\n  /**\n   * An existing API client may be provided.\n   *\n   * This is a continent way to re-use clients and still inherit the\n   * persistInFlight configuration.\n   */\n  api?: Client;\n  /**\n   * Enabling this option will disable clearing in-flight requests when the\n   * component is unmounted.\n   *\n   * This may be useful in situations where your component needs to finish up\n   * somewhere the client was passed into some type of action creator and the\n   * component is unmounted.\n   */\n  persistInFlight?: boolean;\n};\n\n/**\n * Returns an API client that will have it's requests canceled when the owning\n * React component is unmounted (may be disabled via options).\n */\nfunction useApi({persistInFlight, api: providedApi}: Options = {}) {\n  const localApi = useRef<Client>();\n\n  // Lazily construct the client if we weren't provided with one\n  if (localApi.current === undefined && providedApi === undefined) {\n    localApi.current = new Client();\n  }\n\n  // Use the provided client if available\n  const api = providedApi ?? localApi.current!;\n\n  // Clear API calls on unmount (if persistInFlight is disabled\n  const clearOnUnmount = useCallback(() => {\n    if (!persistInFlight) {\n      api.clear();\n    }\n  }, [api, persistInFlight]);\n\n  useEffect(() => clearOnUnmount, [clearOnUnmount]);\n\n  return api;\n}\n\nexport default useApi;\n","import {useCallback, useEffect, useRef} from 'react';\n\nimport {useRouteContext} from 'sentry/utils/useRouteContext';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\ntype NavigateOptions = {\n  replace?: boolean;\n  state?: any;\n};\n\nexport function useNavigate() {\n  const route = useRouteContext();\n\n  const navigator = route.router;\n  const hasMountedRef = useRef(false);\n  useEffect(() => {\n    hasMountedRef.current = true;\n  });\n  const navigate = useCallback(\n    (to: string | number, options: NavigateOptions = {}) => {\n      if (!hasMountedRef.current) {\n        throw new Error(\n          `You should call navigate() in a React.useEffect(), not when your component is first rendered.`\n        );\n      }\n      if (typeof to === 'number') {\n        return navigator.go(to);\n      }\n\n      const nextState = {\n        pathname: normalizeUrl(to),\n        state: options.state,\n      };\n\n      if (options.replace) {\n        return navigator.replace(nextState);\n      }\n\n      return navigator.push(nextState);\n    },\n    [navigator]\n  );\n  return navigate;\n}\n"],"names":["api","Client","async","fetchGuides","data","requestPromise","GuideStore","fetchSucceeded","err","status","Sentry","registerAnchor","target","unregisterAnchor","nextStep","setForceHide","forceHide","toStep","step","closeGuide","dismissed","dismissGuide","guide","orgId","recordDismiss","recordFinish","orgSlug","org","method","tourTask","getTourTask","isDemoWalkthrough","tour","task","updateOnboardingTask","completionSeen","fetchOrganizationDetails","slug","demoEndModal","ConfigStore","get","trackAnalytics","organization","updatedTask","hasExistingTask","onboardingTasks","find","user","map","OrganizationStore","onUpdate","hoverStyle","name","styles","_styled","Panel","p","interactive","ModalTask","_ref","title","_jsx","TaskCard","children","_jsxs","Title","IconCheckmark","isCircled","color","displayName","space","Card","DemoEndingModal","closeModal","CloseButton","useApi","navigate","useNavigate","cardTitle","body","guides","path","t","sandboxData","window","SandboxData","url","cta","navigation","useCallback","EndModal","size","onClick","icon","IconClose","ModalHeader","ButtonContainer","SignUpButton","external","href","ButtonBar","Button","handleMoreTours","SidebarPanelStore","togglePanel","SidebarPanelKey","ONBOARDING_WIZARD","Promise","all","modalCss","theme","purple300","white","storeConfig","activePanel","init","activatePanel","panel","this","trigger","hidePanel","getState","createStore","extraQueryParameter","extraQueryString","URLSearchParams","extraQueryParameterWithEmail","params","email","localStorage","getItem","append","urlAttachQueryParams","queryString","toString","OnboardingTaskKey","SIDEBAR_GUIDE","ISSUE_GUIDE","RELEASE_GUIDE","PERFORMANCE_GUIDE","persistInFlight","providedApi","arguments","length","undefined","localApi","useRef","current","clearOnUnmount","clear","useEffect","navigator","useRouteContext","router","hasMountedRef","to","options","Error","go","nextState","pathname","normalizeUrl","state","replace","push"],"sourceRoot":""}