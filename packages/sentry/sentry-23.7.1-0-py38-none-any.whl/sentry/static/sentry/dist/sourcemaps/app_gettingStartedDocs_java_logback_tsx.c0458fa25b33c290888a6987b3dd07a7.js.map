{"version":3,"file":"chunks/app_gettingStartedDocs_java_logback_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"qkBASA,MAAMA,GAAeC,EAAAA,EAAAA,IACnB,kIACA,CACEC,MACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,uEAKZC,EAAQ,eAAC,IACpBC,GAGDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAA2B,CAC/B,CACEG,KAAMC,EAAAA,GAASC,QACfC,aAAaC,EAAAA,EAAAA,GACX,2EAEFC,eAAgB,CACd,CACEF,aAAaX,EAAAA,EAAAA,IAAA,MAAAc,UAAKF,EAAAA,EAAAA,GAAE,WACpBC,eAAgB,CACd,CACEE,SAAU,MACVC,KAAO,qJAQT,CACED,SAAU,MACVJ,aAAaC,EAAAA,EAAAA,GACX,kGAEFI,KAAO,+yCA2Cb,CACEL,aAAaX,EAAAA,EAAAA,IAAA,MAAAc,UAAKF,EAAAA,EAAAA,GAAE,aACpBC,eAAgB,CACd,CACEE,SAAU,SACVC,KAAM,oDAER,CACEL,aAAaC,EAAAA,EAAAA,GACX,kGAEFG,SAAU,SACVC,KAAO,+fA0BfC,gBACEjB,EAAAA,EAAAA,IAAA,KAAAc,UACGhB,EAAAA,EAAAA,IAAI,yEAA0E,CAC7EC,MACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,oEAM7B,CACEM,KAAMC,EAAAA,GAASS,UACfP,aAAaC,EAAAA,EAAAA,GACX,yEAEFC,eAAgB,CACd,CACEE,SAAU,MACVJ,aAAaC,EAAAA,EAAAA,GACX,qTAEFI,KAAO,sdAYFZ,oVAYLa,gBACEjB,EAAAA,EAAAA,IAAA,KAAAc,UACGhB,EAAAA,EAAAA,IACC,iLACA,CACEkB,MAAMhB,EAAAA,EAAAA,IAAA,WACND,MACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,kFAO/B,CACES,aACEX,EAAAA,EAAAA,IAAA,KAAAc,UACGhB,EAAAA,EAAAA,IACC,8IACA,CACEC,MACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,iFAM7BW,eAAgB,CACd,CACEE,SAAU,MACVC,KAAO,8FAGRZ,mVAaT,CACEI,KAAMC,EAAAA,GAASU,OACfR,aAAaC,EAAAA,EAAAA,GACX,kFAEFC,eAAgB,CACd,CACEF,aAAaX,EAAAA,EAAAA,IAAA,MAAAc,SAAI,SACjBC,SAAU,OACVC,KAAO,oLAWT,CACEL,aAAaX,EAAAA,EAAAA,IAAA,MAAAc,SAAI,WACjBC,SAAU,OACVC,KAAO,8KAYXC,gBACEG,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAP,SAAA,EACPd,EAAAA,EAAAA,IAAA,KAAAc,UACGF,EAAAA,EAAAA,GACC,uGAGJZ,EAAAA,EAAAA,IAAA,KAAAc,UACGF,EAAAA,EAAAA,GACC,4FAMX,EAGM,SAASU,EAAyBC,GAA+B,IAA9B,IAACnB,KAAQoB,GAAmBD,EACpE,OAAOvB,EAAAA,EAAAA,IAACyB,EAAAA,EAAM,CAACtB,MAAOA,EAAM,CAACC,QAAOP,aAAcA,KAAkB2B,GACtE,CAFgBF,EAAyBI,YAAA,4BAIzC,S","sources":["webpack:///./app/gettingStartedDocs/java/logback.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nconst introduction = tct(\n  'The sentry-logback library provides Logback support for Sentry using an [link:Appender] that sends logged exceptions to Sentry.',\n  {\n    link: (\n      <ExternalLink href=\"https://logback.qos.ch/apidocs/ch/qos/logback/core/Appender.html\" />\n    ),\n  }\n);\n\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: t(\n      \"Install Sentry's integration with Logback using either Maven or Gradle:\"\n    ),\n    configurations: [\n      {\n        description: <h5>{t('Maven')}</h5>,\n        configurations: [\n          {\n            language: 'xml',\n            code: `\n<dependency>\n  <groupId>io.sentry</groupId>\n  <artifactId>sentry-logback</artifactId>\n  <version>6.25.2</version>\n</dependency>\n          `,\n          },\n          {\n            language: 'xml',\n            description: t(\n              'To upload your source code to Sentry so it can be shown in stack traces, use our Maven plugin.'\n            ),\n            code: `\n<build>\n  <plugins>\n    <plugin>\n      <groupId>io.sentry</groupId>\n      <artifactId>sentry-maven-plugin</artifactId>\n      <version>0.0.2</version>\n      <configuration>\n      <!-- for showing output of sentry-cli -->\n      <debugSentryCli>true</debugSentryCli>\n\n      <!-- download the latest sentry-cli and provide path to it here -->\n      <!-- download it here: https://github.com/getsentry/sentry-cli/releases -->\n      <!-- minimum required version is 2.17.3 -->\n      <sentryCliExecutablePath>/path/to/sentry-cli</sentryCliExecutablePath>\n\n      <org>___ORG_SLUG___</org>\n\n      <project>___PROJECT_SLUG___</project>\n\n      <!-- in case you're self hosting, provide the URL here -->\n      <!--<url>http://localhost:8000/</url>-->\n\n      <!-- provide your auth token via SENTRY_AUTH_TOKEN environment variable -->\n      <!-- you can find it in Sentry UI: Settings > Account > API > Auth Tokens -->\n      <authToken>env.SENTRY_AUTH_TOKEN</authToken>\n      </configuration>\n      <executions>\n        <execution>\n          <phase>generate-resources</phase>\n          <goals>\n          <goal>uploadSourceBundle</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n  ...\n</build>\n        `,\n          },\n        ],\n      },\n      {\n        description: <h5>{t('Graddle')}</h5>,\n        configurations: [\n          {\n            language: 'groovy',\n            code: \"implementation 'io.sentry:sentry-logback:6.25.2'\",\n          },\n          {\n            description: t(\n              'To upload your source code to Sentry so it can be shown in stack traces, use our Maven plugin.'\n            ),\n            language: 'groovy',\n            code: `\nbuildscript {\n  repositories {\n    mavenCentral()\n  }\n}\n\nplugins {\n  id \"io.sentry.jvm.gradle\" version \"3.11.1\"\n}\n\nsentry {\n  // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.\n  // This enables source context, allowing you to see your source\n  // code as part of your stack traces in Sentry.\n  includeSourceContext = true\n\n  org = \"___ORG_SLUG___\"\n  projectName = \"___PROJECT_SLUG___\"\n  authToken = \"your-sentry-auth-token\"\n}\n            `,\n          },\n        ],\n      },\n    ],\n    additionalInfo: (\n      <p>\n        {tct('For other dependency managers see the [link:central Maven repository].', {\n          link: (\n            <ExternalLink href=\"https://search.maven.org/artifact/io.sentry/sentry-logback\" />\n          ),\n        })}\n      </p>\n    ),\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: t(\n      \"Configure Sentry as soon as possible in your application's lifecycle:\"\n    ),\n    configurations: [\n      {\n        language: 'xml',\n        description: t(\n          'The following example configures a ConsoleAppender that logs to standard out at the INFO level, and a SentryAppender that logs to the Sentry server at the ERROR level. This only an example of a non-Sentry appender set to a different logging threshold, similar to what you may already have in your project.'\n        ),\n        code: `\n<configuration>\n  <!-- Configure the Console appender -->\n  <appender name=\"Console\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Configure the Sentry appender, overriding the logging threshold to the WARN level -->\n  <appender name=\"Sentry\" class=\"io.sentry.logback.SentryAppender\">\n    <options>\n      <dsn>${dsn}</dsn>\n    </options>\n  </appender>\n\n  <!-- Enable the Console and Sentry appenders, Console is provided as an example\n  of a non-Sentry logger that is set to a different logging threshold -->\n  <root level=\"INFO\">\n    <appender-ref ref=\"Console\" />\n    <appender-ref ref=\"Sentry\" />\n  </root>\n</configuration>\n        `,\n        additionalInfo: (\n          <p>\n            {tct(\n              \"You'll also need to configure your DSN (client key) if it's not already in the [code:logback.xml] configuration. Learn more in [link:our documentation for DSN configuration].\",\n              {\n                code: <code />,\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platforms/java/guides/logback/#dsn-configuration/\" />\n                ),\n              }\n            )}\n          </p>\n        ),\n      },\n      {\n        description: (\n          <p>\n            {tct(\n              \"Next, you'll need to set your log levels, as illustrated here. You can learn more about [link:configuring log levels] in our documentation.\",\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platforms/java/guides/logback/#minimum-log-level/\" />\n                ),\n              }\n            )}\n          </p>\n        ),\n        configurations: [\n          {\n            language: 'xml',\n            code: `\n<appender name=\"Sentry\" class=\"io.sentry.logback.SentryAppender\">\n  <options>\n    <dsn>${dsn}</dsn>\n  </options>\n  <!-- Optionally change minimum Event level. Default for Events is ERROR -->\n  <minimumEventLevel>WARN</minimumEventLevel>\n  <!-- Optionally change minimum Breadcrumbs level. Default for Breadcrumbs is INFO -->\n  <minimumBreadcrumbLevel>DEBUG</minimumBreadcrumbLevel>\n</appender>\n          `,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    type: StepType.VERIFY,\n    description: t(\n      'Last, create an intentional error, so you can test that everything is working:'\n    ),\n    configurations: [\n      {\n        description: <h5>Java</h5>,\n        language: 'java',\n        code: `\nimport java.lang.Exception;\nimport io.sentry.Sentry;\n\ntry {\n  throw new Exception(\"This is a test.\");\n} catch (Exception e) {\n  Sentry.captureException(e);\n}\n        `,\n      },\n      {\n        description: <h5>Kotlin</h5>,\n        language: 'java',\n        code: `\nimport java.lang.Exception\nimport io.sentry.Sentry\n\ntry {\n  throw Exception(\"This is a test.\")\n} catch (e: Exception) {\n  Sentry.captureException(e)\n}\n        `,\n      },\n    ],\n    additionalInfo: (\n      <Fragment>\n        <p>\n          {t(\n            \"If you're new to Sentry, use the email alert to access your account and complete a product tour.\"\n          )}\n        </p>\n        <p>\n          {t(\n            \"If you're an existing user and have disabled alerts, you won't receive this email.\"\n          )}\n        </p>\n      </Fragment>\n    ),\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithLogBack({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} introduction={introduction} {...props} />;\n}\n\nexport default GettingStartedWithLogBack;\n"],"names":["introduction","tct","link","_jsx","ExternalLink","href","steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","t","configurations","children","language","code","additionalInfo","CONFIGURE","VERIFY","_jsxs","Fragment","GettingStartedWithLogBack","_ref","props","Layout","displayName"],"sourceRoot":""}