{"version":3,"file":"chunks/app_components_panels_panelHeader_tsx-app_views_settings_project_projectKeys_details_loaderSe-117f26.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/forms/fields/booleanField.tsx","webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/components/switchButton.tsx","webpack:///./app/views/settings/project/projectKeys/details/loaderSettings.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport Confirm from 'sentry/components/confirm';\nimport FormField from 'sentry/components/forms/formField';\nimport Switch from 'sentry/components/switchButton';\nimport {Tooltip} from 'sentry/components/tooltip';\n\n// XXX(epurkhiser): This is wrong, it should not be inheriting these props\nimport {InputFieldProps, OnEvent} from './inputField';\n\nexport interface BooleanFieldProps extends InputFieldProps {\n  confirm?: {\n    false?: React.ReactNode;\n    true?: React.ReactNode;\n  };\n}\n\nexport default class BooleanField extends Component<BooleanFieldProps> {\n  coerceValue(value: any) {\n    return !!value;\n  }\n\n  handleChange = (\n    value: any,\n    onChange: OnEvent,\n    onBlur: OnEvent,\n    e: React.FormEvent<HTMLInputElement>\n  ) => {\n    // We need to toggle current value because Switch is not an input\n    const newValue = this.coerceValue(!value);\n    onChange(newValue, e);\n    onBlur(newValue, e);\n  };\n\n  render() {\n    const {confirm, disabledReason, ...fieldProps} = this.props;\n\n    return (\n      <FormField {...fieldProps} resetOnError>\n        {({\n          children: _children,\n          onChange,\n          onBlur,\n          value,\n          disabled,\n          ...props\n        }: {\n          disabled: boolean;\n          onBlur: OnEvent;\n          onChange: OnEvent;\n          type: string;\n          value: any;\n          children?: React.ReactNode;\n        }) => {\n          // Create a function with required args bound\n          const handleChange = this.handleChange.bind(this, value, onChange, onBlur);\n\n          const {type: _, ...propsWithoutType} = props;\n          const switchProps = {\n            ...propsWithoutType,\n            size: 'lg' as React.ComponentProps<typeof Switch>['size'],\n            isActive: !!value,\n            isDisabled: disabled,\n            toggle: handleChange,\n          };\n\n          if (confirm) {\n            return (\n              <Confirm\n                renderMessage={() => confirm[(!value).toString()]}\n                onConfirm={() => handleChange({})}\n              >\n                {({open}) => (\n                  <Tooltip title={disabledReason} skipWrapper disabled={!disabled}>\n                    <Switch\n                      {...switchProps}\n                      toggle={(e: React.MouseEvent) => {\n                        // If we have a `confirm` prop and enabling switch\n                        // Then show confirm dialog, otherwise propagate change as normal\n                        if (confirm[(!value).toString()]) {\n                          // Open confirm modal\n                          open();\n                          return;\n                        }\n\n                        handleChange(e);\n                      }}\n                    />\n                  </Tooltip>\n                )}\n              </Confirm>\n            );\n          }\n\n          return (\n            <Tooltip title={disabledReason} skipWrapper disabled={!disabled}>\n              <Switch {...switchProps} />\n            </Tooltip>\n          );\n        }}\n      </FormField>\n    );\n  }\n}\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","import {forwardRef} from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  toggle: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n  /**\n   * Toggle color is always active.\n   */\n  forceActiveColor?: boolean;\n  forwardedRef?: React.Ref<HTMLButtonElement>;\n  id?: string;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n  name?: string;\n  size?: 'sm' | 'lg';\n};\n\nfunction Switch({\n  forwardedRef,\n  size = 'sm',\n  isActive,\n  forceActiveColor,\n  isLoading,\n  isDisabled,\n  toggle,\n  id,\n  name,\n  className,\n  ...props\n}: Props) {\n  return (\n    <SwitchButton\n      ref={forwardedRef}\n      id={id}\n      name={name}\n      type=\"button\"\n      className={className}\n      onClick={isDisabled ? undefined : toggle}\n      role=\"checkbox\"\n      aria-checked={isActive}\n      isLoading={isLoading}\n      disabled={isDisabled}\n      isActive={isActive}\n      size={size}\n      data-test-id=\"switch\"\n      {...props}\n    >\n      <Toggle\n        isDisabled={isDisabled}\n        isActive={isActive}\n        forceActiveColor={forceActiveColor}\n        size={size}\n      />\n    </SwitchButton>\n  );\n}\n\ntype StyleProps = Partial<Props>;\n\nconst getSize = (p: StyleProps) => (p.size === 'sm' ? 16 : 24);\nconst getToggleSize = (p: StyleProps) => getSize(p) - (p.size === 'sm' ? 4 : 8);\nconst getToggleTop = (p: StyleProps) => (p.size === 'sm' ? 1 : 3);\nconst getTranslateX = (p: StyleProps) =>\n  p.isActive ? getToggleTop(p) + getSize(p) * 0.875 : getToggleTop(p);\n\nconst SwitchButton = styled('button')<StyleProps>`\n  display: inline-block;\n  background: none;\n  padding: 0;\n  border: 1px solid ${p => p.theme.border};\n  position: relative;\n  box-shadow: inset ${p => p.theme.dropShadowMedium};\n  height: ${getSize}px;\n  width: ${p => getSize(p) * 1.875}px;\n  border-radius: ${getSize}px;\n  transition: border 0.1s, box-shadow 0.1s;\n\n  &[disabled] {\n    cursor: not-allowed;\n  }\n\n  &:focus,\n  &.focus-visible {\n    outline: none;\n    border-color: ${p => p.theme.focusBorder};\n    box-shadow: ${p => p.theme.focusBorder} 0 0 0 1px;\n  }\n`;\n\nconst Toggle = styled('span')<StyleProps>`\n  display: block;\n  position: absolute;\n  border-radius: 50%;\n  transition: 0.25s all ease;\n  top: ${getToggleTop}px;\n  transform: translateX(${getTranslateX}px);\n  width: ${getToggleSize}px;\n  height: ${getToggleSize}px;\n  background: ${p =>\n    p.isActive || p.forceActiveColor ? p.theme.active : p.theme.border};\n  opacity: ${p => (p.isDisabled ? 0.4 : null)};\n`;\n\nexport default forwardRef<HTMLButtonElement, Props>((props, ref) => (\n  <Switch {...props} forwardedRef={ref} />\n));\n","import {Fragment, useCallback, useState} from 'react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport Access from 'sentry/components/acl/access';\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport BooleanField from 'sentry/components/forms/fields/booleanField';\nimport SelectField from 'sentry/components/forms/fields/selectField';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {handleXhrErrorResponse} from 'sentry/utils/handleXhrErrorResponse';\nimport useApi from 'sentry/utils/useApi';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  keyId: string;\n  orgSlug: string;\n  project: Project;\n  updateData: (data: ProjectKey) => void;\n};\n\nexport function LoaderSettings({keyId, orgSlug, project, data, updateData}: Props) {\n  const api = useApi();\n\n  const [requestPending, setRequestPending] = useState(false);\n\n  const [optimisticState, setOptimisticState] = useState({\n    browserSdkVersion: data.browserSdkVersion,\n    hasDebug: data.dynamicSdkLoaderOptions.hasDebug,\n    hasPerformance: data.dynamicSdkLoaderOptions.hasPerformance,\n    hasReplay: data.dynamicSdkLoaderOptions.hasReplay,\n  });\n\n  const values = requestPending\n    ? optimisticState\n    : {\n        browserSdkVersion: data.browserSdkVersion,\n        hasDebug: data.dynamicSdkLoaderOptions.hasDebug,\n        hasPerformance: data.dynamicSdkLoaderOptions.hasPerformance,\n        hasReplay: data.dynamicSdkLoaderOptions.hasReplay,\n      };\n\n  const apiEndpoint = `/projects/${orgSlug}/${project.slug}/keys/${keyId}/`;\n  const loaderLink = getDynamicText({\n    value: data.dsn.cdn,\n    fixed: '__JS_SDK_LOADER_URL__',\n  });\n\n  const updateLoaderOption = useCallback(\n    async (changes: {\n      browserSdkVersion?: string;\n      hasDebug?: boolean;\n      hasPerformance?: boolean;\n      hasReplay?: boolean;\n    }) => {\n      setRequestPending(true);\n      setOptimisticState({\n        browserSdkVersion: data.browserSdkVersion,\n        hasDebug: data.dynamicSdkLoaderOptions.hasDebug,\n        hasPerformance: data.dynamicSdkLoaderOptions.hasPerformance,\n        hasReplay: data.dynamicSdkLoaderOptions.hasReplay,\n        ...changes,\n      });\n      addLoadingMessage();\n\n      const browserSdkVersion = changes.browserSdkVersion ?? data.browserSdkVersion;\n\n      let payload: any;\n      if (sdkVersionSupportsPerformanceAndReplay(browserSdkVersion)) {\n        payload = {\n          browserSdkVersion,\n          dynamicSdkLoaderOptions: {\n            hasDebug: changes.hasDebug ?? data.dynamicSdkLoaderOptions.hasDebug,\n            hasPerformance:\n              changes.hasPerformance ?? data.dynamicSdkLoaderOptions.hasPerformance,\n            hasReplay: changes.hasReplay ?? data.dynamicSdkLoaderOptions.hasReplay,\n          },\n        };\n      } else {\n        payload = {\n          browserSdkVersion,\n          dynamicSdkLoaderOptions: {\n            hasDebug: changes.hasDebug ?? data.dynamicSdkLoaderOptions.hasDebug,\n            hasPerformance: false,\n            hasReplay: false,\n          },\n        };\n      }\n\n      try {\n        const response = await api.requestPromise(apiEndpoint, {\n          method: 'PUT',\n          data: payload,\n        });\n\n        updateData(response);\n\n        addSuccessMessage(t('Successfully updated dynamic SDK loader configuration'));\n      } catch (error) {\n        const message = t('Unable to updated dynamic SDK loader configuration');\n        handleXhrErrorResponse(message, error);\n        addErrorMessage(message);\n      } finally {\n        setRequestPending(false);\n      }\n    },\n    [\n      api,\n      apiEndpoint,\n      data.browserSdkVersion,\n      data.dynamicSdkLoaderOptions.hasDebug,\n      data.dynamicSdkLoaderOptions.hasPerformance,\n      data.dynamicSdkLoaderOptions.hasReplay,\n      setRequestPending,\n      updateData,\n    ]\n  );\n\n  return (\n    <Access access={['project:write']} project={project}>\n      {({hasAccess}) => (\n        <Fragment>\n          <FieldGroup\n            help={tct(\n              'Copy this script into your website to setup your JavaScript SDK without any additional configuration. [link]',\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/install/lazy-load-sentry/\">\n                    {t(' What does the script provide?')}\n                  </ExternalLink>\n                ),\n              }\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput aria-label={t('Loader Script')}>\n              {`<script src='${loaderLink}' crossorigin=\"anonymous\"></script>`}\n            </TextCopyInput>\n          </FieldGroup>\n\n          <SelectField\n            name={`${keyId}-browserSdkVersion`}\n            label={t('SDK Version')}\n            options={\n              data.browserSdk\n                ? data.browserSdk.choices.map(([value, label]) => ({\n                    value,\n                    label,\n                  }))\n                : []\n            }\n            value={values.browserSdkVersion}\n            onChange={value => {\n              updateLoaderOption({browserSdkVersion: value});\n            }}\n            placeholder=\"7.x\"\n            allowClear={false}\n            disabled={!hasAccess || requestPending}\n          />\n\n          <BooleanField\n            label={t('Enable Performance Monitoring')}\n            name={`${keyId}-has-performance`}\n            value={\n              sdkVersionSupportsPerformanceAndReplay(data.browserSdkVersion)\n                ? values.hasPerformance\n                : false\n            }\n            onChange={value => {\n              updateLoaderOption({hasPerformance: value});\n            }}\n            disabled={\n              !hasAccess ||\n              requestPending ||\n              !sdkVersionSupportsPerformanceAndReplay(data.browserSdkVersion)\n            }\n            help={\n              !sdkVersionSupportsPerformanceAndReplay(data.browserSdkVersion)\n                ? t('Only available in SDK version 7.x and above')\n                : undefined\n            }\n            disabledReason={\n              !hasAccess\n                ? t('You do not have permission to edit this setting')\n                : undefined\n            }\n          />\n\n          <BooleanField\n            label={t('Enable Session Replay')}\n            name={`${keyId}-has-replay`}\n            value={\n              sdkVersionSupportsPerformanceAndReplay(data.browserSdkVersion)\n                ? values.hasReplay\n                : false\n            }\n            onChange={value => {\n              updateLoaderOption({hasReplay: value});\n            }}\n            disabled={\n              !hasAccess ||\n              requestPending ||\n              !sdkVersionSupportsPerformanceAndReplay(data.browserSdkVersion)\n            }\n            help={\n              !sdkVersionSupportsPerformanceAndReplay(data.browserSdkVersion)\n                ? t('Only available in SDK version 7.x and above')\n                : data.dynamicSdkLoaderOptions.hasReplay\n                ? t(\n                    'When using Replay, the loader will load the ES6 bundle instead of the ES5 bundle.'\n                  )\n                : undefined\n            }\n            disabledReason={\n              !hasAccess\n                ? t('You do not have permission to edit this setting')\n                : undefined\n            }\n          />\n\n          <BooleanField\n            label={t('Enable Debug Bundles & Logging')}\n            name={`${keyId}-has-logging`}\n            value={values.hasDebug}\n            onChange={value => {\n              updateLoaderOption({hasDebug: value});\n            }}\n            disabled={!hasAccess || requestPending}\n            disabledReason={\n              !hasAccess\n                ? t('You do not have permission to edit this setting')\n                : undefined\n            }\n          />\n        </Fragment>\n      )}\n    </Access>\n  );\n}\n\nfunction sdkVersionSupportsPerformanceAndReplay(sdkVersion: string): boolean {\n  return sdkVersion === 'latest' || sdkVersion === '7.x';\n}\n"],"names":["BooleanField","Component","constructor","arguments","_defineProperty","value","onChange","onBlur","e","newValue","this","coerceValue","render","confirm","disabledReason","fieldProps","props","_jsx","FormField","resetOnError","children","_ref","_children","disabled","handleChange","bind","type","_","propsWithoutType","switchProps","size","isActive","isDisabled","toggle","Confirm","renderMessage","toString","onConfirm","_ref2","open","Tooltip","title","skipWrapper","Switch","displayName","getPadding","disablePadding","hasButtons","css","space","_styled","target","p","lightText","theme","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary","forwardedRef","forceActiveColor","isLoading","id","name","className","SwitchButton","ref","onClick","undefined","role","Toggle","getSize","getToggleSize","getToggleTop","getTranslateX","dropShadowMedium","focusBorder","active","forwardRef","LoaderSettings","keyId","orgSlug","project","data","updateData","api","useApi","requestPending","setRequestPending","useState","optimisticState","setOptimisticState","browserSdkVersion","hasDebug","dynamicSdkLoaderOptions","hasPerformance","hasReplay","values","apiEndpoint","slug","loaderLink","getDynamicText","dsn","cdn","fixed","updateLoaderOption","useCallback","async","changes","addLoadingMessage","payload","sdkVersionSupportsPerformanceAndReplay","response","requestPromise","method","addSuccessMessage","t","error","message","handleXhrErrorResponse","addErrorMessage","Access","access","hasAccess","_jsxs","Fragment","FieldGroup","help","tct","link","ExternalLink","href","inline","flexibleControlStateSize","TextCopyInput","SelectField","label","options","browserSdk","choices","map","_ref3","placeholder","allowClear","sdkVersion"],"sourceRoot":""}