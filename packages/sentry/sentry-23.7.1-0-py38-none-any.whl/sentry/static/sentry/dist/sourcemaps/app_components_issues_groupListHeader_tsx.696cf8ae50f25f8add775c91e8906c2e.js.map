{"version":3,"file":"chunks/app_components_issues_groupListHeader_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"8dAcA,SAASA,EAAeC,GAId,IAJe,UACvBC,GAAY,EAAI,aAChBC,GAAe,EAAK,YACpBC,EAAc,CAAC,QAAS,QAAS,QAAS,WAAY,kBAChDH,EACN,OACEI,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAACC,gBAAc,EAAAC,SAAA,EACzBC,EAAAA,EAAAA,IAACC,EAAY,CAAAF,UAAEG,EAAAA,EAAAA,GAAE,WAChBT,GAAaE,EAAYQ,SAAS,WACjCH,EAAAA,EAAAA,IAACI,EAAY,CAACV,aAAcA,EAAaK,UAAEG,EAAAA,EAAAA,GAAE,WAE9CP,EAAYQ,SAAS,WACpBH,EAAAA,EAAAA,IAACK,EAAgB,CAAAN,UAAEG,EAAAA,EAAAA,GAAE,YAEtBP,EAAYQ,SAAS,WAAYH,EAAAA,EAAAA,IAACK,EAAgB,CAAAN,UAAEG,EAAAA,EAAAA,GAAE,WACtDP,EAAYQ,SAAS,cACpBH,EAAAA,EAAAA,IAACM,EAAe,CAACZ,aAAcA,EAAaK,UAAEG,EAAAA,EAAAA,GAAE,cAEjDP,EAAYQ,SAAS,mBACpBH,EAAAA,EAAAA,IAACK,EAAgB,CAAAN,UAAEG,EAAAA,EAAAA,GAAE,sBAI7B,CAvBSX,EAAegB,YAAA,kBAyBxB,UAEMC,GAAUC,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,YAAZD,CAAa,4CAGfE,EAAAA,EAAAA,GAAM,GAAE,WACXC,GAAKA,EAAEC,MAAMC,SAAO,KAGzBb,GAAeQ,EAAAA,EAAAA,GAAOD,EAAO,CAAAE,OAAA,YAAdD,CAAe,2CAIbG,GAAKA,EAAEC,MAAME,YAAYC,QAAM,iBAKhDX,GAAmBI,EAAAA,EAAAA,GAAOD,EAAO,CAAAE,OAAA,YAAdD,CAAe,8EAKjBG,GAAKA,EAAEC,MAAME,YAAYE,QAAM,kBAKhDb,GAAeK,EAAAA,EAAAA,GAAOD,EAAO,CAAAE,OAAA,YAAdD,CAAe,iEAIbG,GACjBA,EAAElB,aAAekB,EAAEC,MAAME,YAAYE,OAASL,EAAEC,MAAME,YAAYG,OAAK,oBAKvEZ,GAAkBG,EAAAA,EAAAA,GAAOD,EAAO,CAAAE,OAAA,YAAdD,CAAe,2DAIhBG,GACjBA,EAAElB,aAAekB,EAAEC,MAAME,YAAYG,MAAQN,EAAEC,MAAME,YAAYC,QAAM,mB,qQC5D7E,MAAMG,EAAa3B,IAAA,IAAC,eAACM,EAAc,WAAEsB,GAAkB5B,EAAA,OAAK6B,EAAAA,EAAAA,IAAG,WAClDD,GAAaT,EAAAA,EAAAA,GAAM,IAAKA,EAAAA,EAAAA,GAAM,GAAE,IAAIb,EAAiB,GAAIa,EAAAA,EAAAA,GAAM,GAAE,SAoB9E,GAjBoBF,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,wEAItBG,GAAMA,EAAEU,UAAYV,EAAEC,MAAMU,QAAUX,EAAEC,MAAMW,SAAQ,eAClDZ,GAAKA,EAAEC,MAAMY,eAAa,sEAGZb,GAAKA,EAAEC,MAAMa,QAAM,wBACxBd,GAAKA,EAAEC,MAAMc,mBAAiB,iBAC3Cf,GAAKA,EAAEC,MAAMc,mBAAiB,2BACzBf,GAAKA,EAAEC,MAAMe,qBAAmB,oCAG5CT,EAAU,I","sources":["webpack:///./app/components/issues/groupListHeader.tsx","webpack:///./app/components/panels/panelHeader.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\nimport {GroupListColumn} from './groupList';\n\ntype Props = {\n  withChart: boolean;\n  narrowGroups?: boolean;\n  withColumns?: GroupListColumn[];\n};\n\nfunction GroupListHeader({\n  withChart = true,\n  narrowGroups = false,\n  withColumns = ['graph', 'event', 'users', 'assignee', 'lastTriggered'],\n}: Props) {\n  return (\n    <PanelHeader disablePadding>\n      <IssueWrapper>{t('Issue')}</IssueWrapper>\n      {withChart && withColumns.includes('graph') && (\n        <ChartWrapper narrowGroups={narrowGroups}>{t('Graph')}</ChartWrapper>\n      )}\n      {withColumns.includes('event') && (\n        <EventUserWrapper>{t('events')}</EventUserWrapper>\n      )}\n      {withColumns.includes('users') && <EventUserWrapper>{t('users')}</EventUserWrapper>}\n      {withColumns.includes('assignee') && (\n        <AssigneeWrapper narrowGroups={narrowGroups}>{t('Assignee')}</AssigneeWrapper>\n      )}\n      {withColumns.includes('lastTriggered') && (\n        <EventUserWrapper>{t('Last Triggered')}</EventUserWrapper>\n      )}\n    </PanelHeader>\n  );\n}\n\nexport default GroupListHeader;\n\nconst Heading = styled('div')`\n  display: flex;\n  align-self: center;\n  margin: 0 ${space(2)};\n  color: ${p => p.theme.subText};\n`;\n\nconst IssueWrapper = styled(Heading)`\n  flex: 1;\n  width: 66.66%;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    width: 50%;\n  }\n`;\n\nconst EventUserWrapper = styled(Heading)`\n  justify-content: flex-end;\n  width: 60px;\n  white-space: nowrap;\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    width: 80px;\n  }\n`;\n\nconst ChartWrapper = styled(Heading)<{narrowGroups: boolean}>`\n  justify-content: space-between;\n  width: 160px;\n\n  @media (max-width: ${p =>\n      p.narrowGroups ? p.theme.breakpoints.xlarge : p.theme.breakpoints.large}) {\n    display: none;\n  }\n`;\n\nconst AssigneeWrapper = styled(Heading)<{narrowGroups: boolean}>`\n  justify-content: flex-end;\n  width: 80px;\n\n  @media (max-width: ${p =>\n      p.narrowGroups ? p.theme.breakpoints.large : p.theme.breakpoints.medium}) {\n    display: none;\n  }\n`;\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n"],"names":["GroupListHeader","_ref","withChart","narrowGroups","withColumns","_jsxs","PanelHeader","disablePadding","children","_jsx","IssueWrapper","t","includes","ChartWrapper","EventUserWrapper","AssigneeWrapper","displayName","Heading","_styled","target","space","p","theme","subText","breakpoints","medium","xlarge","large","getPadding","hasButtons","css","lightText","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary"],"sourceRoot":""}