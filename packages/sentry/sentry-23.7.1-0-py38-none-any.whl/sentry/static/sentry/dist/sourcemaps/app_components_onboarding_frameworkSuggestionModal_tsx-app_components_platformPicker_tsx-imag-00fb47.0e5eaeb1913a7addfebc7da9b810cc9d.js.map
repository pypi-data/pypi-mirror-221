{"version":3,"file":"chunks/app_components_onboarding_frameworkSuggestionModal_tsx-app_components_platformPicker_tsx-imag-00fb47.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/onboarding/frameworkSuggestionModal.tsx","webpack:///./app/components/platformPicker.tsx"],"sourcesContent":["import {Link as RouterLink} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport * as qs from 'query-string';\n\nimport useRouter from 'sentry/utils/useRouter';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = LinkProps & {\n  /**\n   * Link target. We don't want to expose the ToLocationFunction on this component.\n   */\n  to: LocationDescriptor;\n  /**\n   * The class to apply when the link is 'active'\n   */\n  activeClassName?: string;\n  disabled?: boolean;\n  index?: boolean;\n  /**\n   * Should be should be supplied by the parent component\n   */\n  isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n  query?: string;\n};\n\nfunction ListLink({\n  children,\n  className,\n  isActive,\n  query,\n  to,\n  activeClassName = 'active',\n  index = false,\n  disabled = false,\n  ...props\n}: Props) {\n  const router = useRouter();\n  const queryData = query ? qs.parse(query) : undefined;\n  const targetLocation = typeof to === 'string' ? {pathname: to, query: queryData} : to;\n  const target = normalizeUrl(targetLocation);\n\n  const active = isActive?.(target, index) ?? router.isActive(target, index);\n\n  return (\n    <StyledLi\n      className={classNames({[activeClassName]: active}, className)}\n      disabled={disabled}\n    >\n      <RouterLink {...props} onlyActiveOnIndex={index} to={disabled ? '' : target}>\n        {children}\n      </RouterLink>\n    </StyledLi>\n  );\n}\n\nexport default ListLink;\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {Fragment, useCallback, useEffect, useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport partition from 'lodash/partition';\nimport sortBy from 'lodash/sortBy';\nimport {PlatformIcon} from 'platformicons';\n\nimport onboardingFrameworkSelectionDotnet from 'sentry-images/spot/onboarding-framework-selection-dotnet.svg';\nimport onboardingFrameworkSelectionJava from 'sentry-images/spot/onboarding-framework-selection-java.svg';\nimport onboardingFrameworkSelectionJavascript from 'sentry-images/spot/onboarding-framework-selection-javascript.svg';\nimport onboardingFrameworkSelectionNode from 'sentry-images/spot/onboarding-framework-selection-node.svg';\nimport onboardingFrameworkSelectionPython from 'sentry-images/spot/onboarding-framework-selection-python.svg';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Button} from 'sentry/components/button';\nimport {RadioLineItem} from 'sentry/components/forms/controls/radioGroup';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport Radio from 'sentry/components/radio';\nimport categoryList from 'sentry/data/platformCategories';\nimport platforms from 'sentry/data/platforms';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {OnboardingSelectedSDK, Organization} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nexport enum SupportedLanguages {\n  JAVASCRIPT = 'javascript',\n  PYTHON = 'python',\n  NODE = 'node',\n  DOTNET = 'dotnet',\n  JAVA = 'java',\n}\n\nexport const topJavascriptFrameworks = [\n  'javascript-react',\n  'javascript-nextjs',\n  'javascript-vue',\n  'javascript-angular',\n  'javascript-svelte',\n  'javascript-sveltekit',\n  'javascript-remix',\n];\n\nconst topPythonFrameworks = [\n  'python-django',\n  'python-flask',\n  'python-fastapi',\n  'python-awslambda',\n  'python-aiohttp',\n];\n\nconst topNodeFrameworks = [\n  'node-express',\n  'node-awslambda',\n  'node-gcpfunctions',\n  'node-serverlesscloud',\n  'node-koa',\n];\n\nconst topDotNetFrameworks = [\n  'dotnet-aspnetcore',\n  'dotnet-aspnet',\n  'dotnet-maui',\n  'dotnet-wpf',\n  'dotnet-winforms',\n  'dotnet-xamarin',\n  'dotnet-uwp',\n  'dotnet-gcpfunctions',\n  'dotnet-awslambda',\n];\n\nconst topJavaFrameworks = [\n  'java-spring-boot',\n  'java-spring',\n  'java-logback',\n  'java-log4j2',\n];\n\nexport const languageDetails = {\n  [SupportedLanguages.JAVASCRIPT]: {\n    description: t(\n      'Our JavaScript framework SDKs include all the features of our Browser Javascript SDK with additional features specific to that framework'\n    ),\n    topFrameworksImage: onboardingFrameworkSelectionJavascript,\n  },\n  [SupportedLanguages.NODE]: {\n    description: t(\n      'Our Node framework SDKs include all the features of our Node SDK with instructions specific to that framework'\n    ),\n    topFrameworksImage: onboardingFrameworkSelectionNode,\n  },\n  [SupportedLanguages.PYTHON]: {\n    description: t(\n      'Our Python framework SDKs include all the features of our Python SDK with instructions specific to that framework'\n    ),\n    topFrameworksImage: onboardingFrameworkSelectionPython,\n  },\n  [SupportedLanguages.DOTNET]: {\n    description: t(\n      'Our Dotnet framework SDKs include all the features of our Dotnet SDK with instructions specific to that framework'\n    ),\n    topFrameworksImage: onboardingFrameworkSelectionDotnet,\n  },\n  [SupportedLanguages.JAVA]: {\n    description: t(\n      'Our Java framework SDKs include all the features of our Java SDK with instructions specific to that framework'\n    ),\n    topFrameworksImage: onboardingFrameworkSelectionJava,\n  },\n};\n\ntype Props = ModalRenderProps & {\n  onConfigure: (selectedFramework: OnboardingSelectedSDK) => void;\n  onSkip: () => void;\n  organization: Organization;\n  selectedPlatform: OnboardingSelectedSDK;\n  newOrg?: boolean;\n};\n\nexport function FrameworkSuggestionModal({\n  Body,\n  Footer,\n  selectedPlatform,\n  onSkip,\n  onConfigure,\n  closeModal,\n  CloseButton,\n  organization,\n  newOrg,\n}: Props) {\n  const [selectedFramework, setSelectedFramework] = useState<\n    OnboardingSelectedSDK | undefined\n  >(undefined);\n\n  const frameworks = platforms.filter(\n    platform =>\n      platform.type === 'framework' && platform.language === selectedPlatform.key\n  );\n\n  const [topFrameworks, otherFrameworks] = partition(frameworks, framework => {\n    if (selectedPlatform.key === SupportedLanguages.NODE) {\n      return topNodeFrameworks.includes(framework.id);\n    }\n    if (selectedPlatform.key === SupportedLanguages.PYTHON) {\n      return topPythonFrameworks.includes(framework.id);\n    }\n    if (selectedPlatform.key === SupportedLanguages.DOTNET) {\n      return topDotNetFrameworks.includes(framework.id);\n    }\n    if (selectedPlatform.key === SupportedLanguages.JAVA) {\n      return topJavaFrameworks.includes(framework.id);\n    }\n    return topJavascriptFrameworks.includes(framework.id);\n  });\n\n  const otherFrameworksSortedAlphabetically = sortBy(otherFrameworks);\n  const topFrameworksOrdered = sortBy(topFrameworks, framework => {\n    if (selectedPlatform.key === SupportedLanguages.NODE) {\n      return topNodeFrameworks.indexOf(framework.id);\n    }\n    if (selectedPlatform.key === SupportedLanguages.PYTHON) {\n      return topPythonFrameworks.indexOf(framework.id);\n    }\n    if (selectedPlatform.key === SupportedLanguages.DOTNET) {\n      return topDotNetFrameworks.indexOf(framework.id);\n    }\n    if (selectedPlatform.key === SupportedLanguages.JAVA) {\n      return topJavaFrameworks.indexOf(framework.id);\n    }\n    return topJavascriptFrameworks.indexOf(framework.id);\n  });\n\n  useEffect(() => {\n    trackAnalytics(\n      newOrg\n        ? 'onboarding.select_framework_modal_rendered'\n        : 'project_creation.select_framework_modal_rendered',\n      {\n        platform: selectedPlatform.key,\n        organization,\n      }\n    );\n  }, [selectedPlatform.key, organization, newOrg]);\n\n  const handleConfigure = useCallback(() => {\n    if (!selectedFramework) {\n      return;\n    }\n\n    trackAnalytics(\n      newOrg\n        ? 'onboarding.select_framework_modal_configure_sdk_button_clicked'\n        : 'project_creation.select_framework_modal_configure_sdk_button_clicked',\n      {\n        platform: selectedPlatform.key,\n        framework: selectedFramework.key,\n        organization,\n      }\n    );\n\n    onConfigure(selectedFramework);\n    closeModal();\n  }, [\n    selectedPlatform,\n    selectedFramework,\n    organization,\n    onConfigure,\n    closeModal,\n    newOrg,\n  ]);\n\n  const handleSkip = useCallback(() => {\n    trackAnalytics(\n      newOrg\n        ? 'onboarding.select_framework_modal_skip_button_clicked'\n        : 'project_creation.select_framework_modal_skip_button_clicked',\n      {\n        platform: selectedPlatform.key,\n        organization,\n      }\n    );\n    onSkip();\n    closeModal();\n  }, [selectedPlatform, organization, closeModal, onSkip, newOrg]);\n\n  return (\n    <Fragment>\n      <Header>\n        <CloseButton onClick={closeModal} />\n      </Header>\n      <Body>\n        <TopFrameworksImage\n          src={languageDetails[selectedPlatform.key].topFrameworksImage}\n        />\n        <Heading>{t('Do you use a framework?')}</Heading>\n        <Description>{languageDetails[selectedPlatform.key].description}</Description>\n        <Panel>\n          <PanelBody>\n            <Frameworks>\n              {[...topFrameworksOrdered, ...otherFrameworksSortedAlphabetically].map(\n                (framework, index) => {\n                  const frameworkCategory =\n                    categoryList.find(category => {\n                      return category.platforms.includes(framework.id as never);\n                    })?.id ?? 'all';\n\n                  return (\n                    <Framework key={framework.id}>\n                      <RadioLabel\n                        index={index}\n                        onClick={() =>\n                          setSelectedFramework({\n                            key: framework.id,\n                            type: framework.type,\n                            language: framework.language,\n                            category: frameworkCategory,\n                          })\n                        }\n                      >\n                        <RadioBox\n                          radioSize=\"small\"\n                          checked={selectedFramework?.key === framework.id}\n                          readOnly\n                        />\n                        <FrameworkIcon size={24} platform={framework.id} />\n                        {framework.name}\n                      </RadioLabel>\n                    </Framework>\n                  );\n                }\n              )}\n            </Frameworks>\n          </PanelBody>\n        </Panel>\n      </Body>\n      <Footer>\n        <Actions>\n          <Button size=\"md\" onClick={handleSkip}>\n            {t('Skip')}\n          </Button>\n          <Button\n            size=\"md\"\n            priority=\"primary\"\n            onClick={handleConfigure}\n            disabled={!selectedFramework}\n            title={!selectedFramework ? t('Select a framework to configure') : undefined}\n          >\n            {t('Configure SDK')}\n          </Button>\n        </Actions>\n      </Footer>\n    </Fragment>\n  );\n}\n\nconst Header = styled('header')`\n  position: relative;\n  height: 30px;\n\n  margin: -${space(4)} -${space(2)} 0 -${space(3)};\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    margin: -${space(4)} -${space(4)} 0 -${space(4)};\n  }\n`;\n\nconst TopFrameworksImage = styled('img')`\n  margin-bottom: ${space(2)};\n`;\n\nconst Heading = styled('h6')`\n  margin-bottom: ${space(1)};\n  text-align: center;\n`;\n\nconst Description = styled(TextBlock)`\n  margin-bottom: ${space(2)};\n  text-align: center;\n`;\n\nconst Frameworks = styled(List)`\n  max-height: 240px;\n  overflow-y: auto;\n`;\n\nconst Framework = styled(ListItem)`\n  height: 40px;\n  display: grid;\n  text-align: left;\n  cursor: pointer;\n  :not(:last-child) {\n    border-bottom: 1px solid ${p => p.theme.border};\n  }\n`;\n\nconst FrameworkIcon = styled(PlatformIcon)`\n  border: 1px solid ${p => p.theme.innerBorder};\n`;\n\nconst RadioLabel = styled(RadioLineItem)`\n  display: inline-grid;\n  grid-template-columns: max-content max-content 1fr;\n  align-items: center;\n  padding: ${space(1)} ${space(1.5)};\n  gap: ${space(1.5)};\n  input {\n    cursor: pointer;\n  }\n`;\n\nconst RadioBox = styled(Radio)`\n  padding: ${space(0.5)};\n`;\n\nconst Actions = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${space(1)};\n  width: 100%;\n`;\n\nexport const modalCss = css`\n  max-width: 400px;\n  width: 100%;\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport {PlatformIcon} from 'platformicons';\n\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport SearchBar from 'sentry/components/searchBar';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport categoryList, {filterAliases, PlatformKey} from 'sentry/data/platformCategories';\nimport platforms from 'sentry/data/platforms';\nimport {IconClose, IconProject} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, PlatformIntegration} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\n\nexport const PLATFORM_CATEGORIES: {\n  id: string;\n  name: string;\n  platforms?: PlatformKey[];\n}[] = [...JSON.parse(JSON.stringify(categoryList)), {id: 'all', name: t('All')}];\n\nconst PlatformList = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 112px);\n  margin-bottom: ${space(2)};\n`;\n\nexport type Category = (typeof PLATFORM_CATEGORIES)[number]['id'];\n\nexport type Platform = PlatformIntegration & {\n  category: Category;\n};\n\ninterface PlatformPickerProps {\n  setPlatform: (props: Platform | null) => void;\n  defaultCategory?: Category;\n  listClassName?: string;\n  listProps?: React.HTMLAttributes<HTMLDivElement>;\n  noAutoFilter?: boolean;\n  organization?: Organization;\n  platform?: string | null;\n  showOther?: boolean;\n  source?: string;\n}\n\ntype State = {\n  category: Category;\n  filter: string;\n};\n\nclass PlatformPicker extends Component<PlatformPickerProps, State> {\n  static defaultProps = {\n    showOther: true,\n  };\n\n  state: State = {\n    category: this.props.defaultCategory ?? PLATFORM_CATEGORIES[0].id,\n    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],\n  };\n\n  get platformList() {\n    const {category} = this.state;\n\n    const currentCategory = categoryList.find(({id}) => id === category);\n\n    const filter = this.state.filter.toLowerCase();\n\n    const subsetMatch = (platform: PlatformIntegration) =>\n      platform.id.includes(filter) ||\n      platform.name.toLowerCase().includes(filter) ||\n      filterAliases[platform.id as PlatformKey]?.some(alias => alias.includes(filter));\n\n    const categoryMatch = (platform: PlatformIntegration) => {\n      if (category === 'all') {\n        return true;\n      }\n\n      // Symfony was no appering under the server category\n      // because the php-symfony entry in src/sentry/integration-docs/_platforms.json\n      // does not contain the suffix 2.\n      // This is a temporary fix until we can update that file or completly remove the php-symfony2 occurrences\n      if (\n        (platform.id as any) === 'php-symfony' &&\n        (currentCategory?.platforms as undefined | string[])?.includes('php-symfony2')\n      ) {\n        return true;\n      }\n      return (currentCategory?.platforms as undefined | string[])?.includes(platform.id);\n    };\n\n    const filtered = platforms\n      .filter(this.state.filter ? subsetMatch : categoryMatch)\n      .sort((a, b) => a.id.localeCompare(b.id));\n\n    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');\n  }\n\n  logSearch = debounce(() => {\n    if (this.state.filter) {\n      trackAnalytics('growth.platformpicker_search', {\n        search: this.state.filter.toLowerCase(),\n        num_results: this.platformList.length,\n        source: this.props.source,\n        organization: this.props.organization ?? null,\n      });\n    }\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  render() {\n    const platformList = this.platformList;\n    const {setPlatform, listProps, listClassName} = this.props;\n    const {filter, category} = this.state;\n\n    return (\n      <Fragment>\n        <NavContainer>\n          <CategoryNav>\n            {PLATFORM_CATEGORIES.map(({id, name}) => (\n              <ListLink\n                key={id}\n                onClick={(e: React.MouseEvent) => {\n                  trackAnalytics('growth.platformpicker_category', {\n                    category: id,\n                    source: this.props.source,\n                    organization: this.props.organization ?? null,\n                  });\n                  this.setState({category: id, filter: ''});\n                  e.preventDefault();\n                }}\n                to=\"\"\n                isActive={() => id === (filter ? 'all' : category)}\n              >\n                {name}\n              </ListLink>\n            ))}\n          </CategoryNav>\n          <StyledSearchBar\n            size=\"sm\"\n            query={filter}\n            placeholder={t('Filter Platforms')}\n            onChange={val => this.setState({filter: val}, this.logSearch)}\n          />\n        </NavContainer>\n        <PlatformList className={listClassName} {...listProps}>\n          {platformList.map(platform => {\n            return (\n              <PlatformCard\n                data-test-id={`platform-${platform.id}`}\n                key={platform.id}\n                platform={platform}\n                selected={this.props.platform === platform.id}\n                onClear={(e: React.MouseEvent) => {\n                  setPlatform(null);\n                  e.stopPropagation();\n                }}\n                onClick={() => {\n                  trackAnalytics('growth.select_platform', {\n                    platform_id: platform.id,\n                    source: this.props.source,\n                    organization: this.props.organization ?? null,\n                  });\n                  setPlatform({...platform, category});\n                }}\n              />\n            );\n          })}\n        </PlatformList>\n        {platformList.length === 0 && (\n          <EmptyMessage\n            icon={<IconProject size=\"xl\" />}\n            title={t(\"We don't have an SDK for that yet!\")}\n          >\n            {t(\n              \"Make sure you've typed the platform correctly. If that doesn't help, we have several SDKs that are still useful if you use a lesser-known platform. For example, Browser JavaScript, Python, Node, .NET & Java.\"\n            )}\n          </EmptyMessage>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst NavContainer = styled('div')`\n  margin-bottom: ${space(2)};\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: 1fr minmax(0, 300px);\n  align-items: start;\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  min-width: 6rem;\n  max-width: 12rem;\n  margin-top: -${space(0.25)};\n  margin-left: auto;\n  flex-shrink: 0;\n  flex-basis: 0;\n  flex-grow: 1;\n`;\n\nconst CategoryNav = styled(NavTabs)`\n  margin: 0;\n  margin-top: 4px;\n  white-space: nowrap;\n\n  > li {\n    float: none;\n    display: inline-block;\n  }\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin: ${space(2)};\n`;\n\nconst ClearButton = styled(Button)`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  min-height: 0;\n  height: 22px;\n  width: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n`;\n\nClearButton.defaultProps = {\n  icon: <IconClose isCircled size=\"xs\" />,\n  borderless: true,\n  size: 'xs',\n};\n\nconst PlatformCard = styled(({platform, selected, onClear, ...props}) => (\n  <div {...props}>\n    <StyledPlatformIcon\n      platform={platform.id}\n      size={56}\n      radius={5}\n      withLanguageIcon\n      format=\"lg\"\n    />\n    <h3>{platform.name}</h3>\n    {selected && <ClearButton onClick={onClear} aria-label={t('Clear')} />}\n  </div>\n))`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 14px;\n  border-radius: 4px;\n  background: ${p => p.selected && p.theme.alert.info.backgroundLight};\n  cursor: pointer;\n\n  &:hover {\n    background: ${p => p.theme.alert.muted.backgroundLight};\n  }\n\n  h3 {\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    color: ${p => (p.selected ? p.theme.textColor : p.theme.subText)};\n    text-align: center;\n    font-size: ${p => p.theme.fontSizeExtraSmall};\n    text-transform: uppercase;\n    margin: 0;\n    padding: 0 ${space(0.5)};\n    line-height: 1.2;\n  }\n`;\n\nexport default PlatformPicker;\n"],"names":["ListLink","_ref","children","className","isActive","query","to","activeClassName","index","disabled","props","router","useRouter","queryData","qs","undefined","targetLocation","pathname","target","normalizeUrl","active","_jsx","StyledLi","classNames","RouterLink","onlyActiveOnIndex","displayName","_styled","shouldForwardProp","prop","p","theme","SupportedLanguages","topJavascriptFrameworks","topPythonFrameworks","topNodeFrameworks","topDotNetFrameworks","topJavaFrameworks","languageDetails","JAVASCRIPT","description","t","topFrameworksImage","NODE","onboardingFrameworkSelectionNode","PYTHON","DOTNET","JAVA","onboardingFrameworkSelectionJava","FrameworkSuggestionModal","Body","Footer","selectedPlatform","onSkip","onConfigure","closeModal","CloseButton","organization","newOrg","selectedFramework","setSelectedFramework","useState","frameworks","platforms","filter","platform","type","language","key","topFrameworks","otherFrameworks","partition","framework","includes","id","otherFrameworksSortedAlphabetically","sortBy","topFrameworksOrdered","indexOf","useEffect","trackAnalytics","handleConfigure","useCallback","handleSkip","_jsxs","Fragment","Header","onClick","TopFrameworksImage","src","Heading","Description","Panel","PanelBody","Frameworks","map","frameworkCategory","categoryList","find","category","Framework","RadioLabel","RadioBox","radioSize","checked","readOnly","FrameworkIcon","size","name","Actions","Button","priority","title","space","breakpoints","medium","TextBlock","List","styles","ListItem","border","PlatformIcon","innerBorder","RadioLineItem","Radio","modalCss","PLATFORM_CATEGORIES","JSON","parse","stringify","PlatformList","PlatformPicker","Component","constructor","arguments","_defineProperty","this","defaultCategory","noAutoFilter","split","debounce","state","search","toLowerCase","num_results","platformList","length","source","DEFAULT_DEBOUNCE_DURATION","currentCategory","filtered","filterAliases","some","alias","sort","a","b","localeCompare","showOther","_ref2","render","setPlatform","listProps","listClassName","NavContainer","CategoryNav","_ref3","e","setState","preventDefault","StyledSearchBar","placeholder","onChange","val","logSearch","PlatformCard","selected","onClear","stopPropagation","platform_id","EmptyMessage","icon","IconProject","SearchBar","NavTabs","StyledPlatformIcon","ClearButton","background","textColor","defaultProps","IconClose","isCircled","borderless","_ref4","radius","withLanguageIcon","format","alert","info","backgroundLight","muted","subText","fontSizeExtraSmall"],"sourceRoot":""}