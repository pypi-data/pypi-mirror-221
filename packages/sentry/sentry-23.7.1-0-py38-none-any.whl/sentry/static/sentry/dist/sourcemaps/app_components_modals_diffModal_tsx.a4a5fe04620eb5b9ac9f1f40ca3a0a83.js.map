{"version":3,"file":"chunks/app_components_modals_diffModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/interfaces/crashContent/stackTrace/rawContent.tsx","webpack:///./app/components/events/interfaces/frame/utils.tsx","webpack:///./app/components/events/interfaces/types.tsx","webpack:///./app/components/issueDiff/index.tsx","webpack:///./app/components/modals/diffModal.tsx","webpack:///./app/utils/getStacktraceBody.tsx","webpack:///./app/utils/useApi.tsx","webpack:///./app/utils/withApi.tsx"],"sourcesContent":["import {trimPackage} from 'sentry/components/events/interfaces/frame/utils';\nimport {ExceptionValue, Frame} from 'sentry/types';\nimport {StacktraceType} from 'sentry/types/stacktrace';\nimport {defined, trim} from 'sentry/utils';\n\nfunction getJavaScriptFrame(frame: Frame): string {\n  let result = '';\n  if (defined(frame.function)) {\n    result += '  at ' + frame.function + '(';\n  } else {\n    result += '  at ? (';\n  }\n  if (defined(frame.filename)) {\n    result += frame.filename;\n  } else if (defined(frame.module)) {\n    result += frame.module;\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ':' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ':' + frame.colNo;\n  }\n  result += ')';\n  return result;\n}\n\nfunction getRubyFrame(frame: Frame): string {\n  let result = '  from ';\n  if (defined(frame.filename)) {\n    result += frame.filename;\n  } else if (defined(frame.module)) {\n    result += '(' + frame.module + ')';\n  } else {\n    result += '?';\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ':' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ':' + frame.colNo;\n  }\n  if (defined(frame.function)) {\n    result += ':in `' + frame.function + \"'\";\n  }\n  return result;\n}\n\nexport function getPHPFrame(frame: Frame, idx: number): string {\n  const funcName = frame.function === 'null' ? '{main}' : frame.function;\n  return `#${idx} ${frame.filename || frame.module}(${frame.lineNo}): ${funcName}`;\n}\n\nexport function getPythonFrame(frame: Frame): string {\n  let result = '';\n  if (defined(frame.filename)) {\n    result += '  File \"' + frame.filename + '\"';\n  } else if (defined(frame.module)) {\n    result += '  Module \"' + frame.module + '\"';\n  } else {\n    result += '  ?';\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ', line ' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ', col ' + frame.colNo;\n  }\n  if (defined(frame.function)) {\n    result += ', in ' + frame.function;\n  }\n  if (defined(frame.context)) {\n    frame.context.forEach(item => {\n      if (item[0] === frame.lineNo) {\n        result += '\\n    ' + trim(item[1]);\n      }\n    });\n  }\n  return result;\n}\n\nexport function getJavaFrame(frame: Frame): string {\n  let result = '    at';\n\n  if (defined(frame.module)) {\n    result += ' ' + frame.module + '.';\n  }\n  if (defined(frame.function)) {\n    result += frame.function;\n  }\n  if (defined(frame.filename)) {\n    result += '(' + frame.filename;\n    if (defined(frame.lineNo) && frame.lineNo >= 0) {\n      result += ':' + frame.lineNo;\n    }\n    result += ')';\n  }\n  return result;\n}\n\nfunction ljust(str: string, len: number) {\n  return str + Array(Math.max(0, len - str.length) + 1).join(' ');\n}\n\nexport function getNativeFrame(frame: Frame): string {\n  let result = '  ';\n  if (defined(frame.package)) {\n    result += ljust(trimPackage(frame.package), 20);\n  }\n  if (defined(frame.instructionAddr)) {\n    result += ljust(frame.instructionAddr, 12);\n  }\n  result += ' ' + (frame.function || frame.symbolAddr);\n  if (defined(frame.filename)) {\n    result += ' (' + frame.filename;\n    if (defined(frame.lineNo) && frame.lineNo >= 0) {\n      result += ':' + frame.lineNo;\n    }\n    result += ')';\n  }\n  return result;\n}\n\nexport function getJavaPreamble(exception: ExceptionValue): string {\n  let result = `${exception.type}: ${exception.value}`;\n  if (exception.module) {\n    result = `${exception.module}.${result}`;\n  }\n  return result;\n}\n\nfunction getPreamble(exception: ExceptionValue, platform: string | undefined): string {\n  switch (platform) {\n    case 'java':\n      return getJavaPreamble(exception);\n    default:\n      return exception.type + ': ' + exception.value;\n  }\n}\n\nfunction getFrame(frame: Frame, frameIdx: number, platform: string | undefined): string {\n  if (frame.platform) {\n    platform = frame.platform;\n  }\n  switch (platform) {\n    case 'javascript':\n      return getJavaScriptFrame(frame);\n    case 'ruby':\n      return getRubyFrame(frame);\n    case 'php':\n      return getPHPFrame(frame, frameIdx);\n    case 'python':\n      return getPythonFrame(frame);\n    case 'java':\n      return getJavaFrame(frame);\n    case 'objc':\n    // fallthrough\n    case 'cocoa':\n    // fallthrough\n    case 'native':\n      return getNativeFrame(frame);\n    default:\n      return getPythonFrame(frame);\n  }\n}\n\nexport default function displayRawContent(\n  data: StacktraceType,\n  platform?: string,\n  exception?: ExceptionValue\n) {\n  const frames: string[] = [];\n\n  (data?.frames ?? []).forEach((frame, frameIdx) => {\n    frames.push(getFrame(frame, frameIdx, platform));\n  });\n\n  if (platform !== 'python') {\n    frames.reverse();\n  }\n\n  if (exception) {\n    frames.unshift(getPreamble(exception, platform));\n  }\n\n  return frames.join('\\n');\n}\n","import {IconQuestion, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Event, EventOrGroupType, Frame, PlatformType} from 'sentry/types';\nimport {defined, objectIsEmpty} from 'sentry/utils';\n\nimport {SymbolicatorStatus} from '../types';\n\nexport function trimPackage(pkg: string) {\n  const pieces = pkg.split(/^([a-z]:\\\\|\\\\\\\\)/i.test(pkg) ? '\\\\' : '/');\n  const filename = pieces[pieces.length - 1] || pieces[pieces.length - 2] || pkg;\n  return filename.replace(/\\.(dylib|so|a|dll|exe)$/, '');\n}\n\nexport function getPlatform(dataPlatform: PlatformType | null, platform: string) {\n  // prioritize the frame platform but fall back to the platform\n  // of the stack trace / exception\n  return dataPlatform || platform;\n}\n\nexport function getFrameHint(frame: Frame) {\n  // returning [hintText, hintIcon]\n  const {symbolicatorStatus} = frame;\n  const func = frame.function || '<unknown>';\n  // Custom color used to match adjacent text.\n  const warningIcon = <IconQuestion size=\"xs\" color={'#2c45a8' as any} />;\n  const errorIcon = <IconWarning size=\"xs\" color=\"red300\" />;\n\n  if (func.match(/^@objc\\s/)) {\n    return [t('Objective-C -> Swift shim frame'), warningIcon];\n  }\n  if (func.match(/^__?hidden#\\d+/)) {\n    return [t('Hidden function from bitcode build'), errorIcon];\n  }\n  if (!symbolicatorStatus && func === '<unknown>') {\n    // Only render this if the event was not symbolicated.\n    return [t('No function name was supplied by the client SDK.'), warningIcon];\n  }\n\n  if (\n    func === '<unknown>' ||\n    (func === '<redacted>' && symbolicatorStatus === SymbolicatorStatus.MISSING_SYMBOL)\n  ) {\n    switch (symbolicatorStatus) {\n      case SymbolicatorStatus.MISSING_SYMBOL:\n        return [t('The symbol was not found within the debug file.'), warningIcon];\n      case SymbolicatorStatus.UNKNOWN_IMAGE:\n        return [t('No image is specified for the address of the frame.'), warningIcon];\n      case SymbolicatorStatus.MISSING:\n        return [\n          t('The debug file could not be retrieved from any of the sources.'),\n          errorIcon,\n        ];\n      case SymbolicatorStatus.MALFORMED:\n        return [t('The retrieved debug file could not be processed.'), errorIcon];\n      default:\n    }\n  }\n\n  if (func === '<redacted>') {\n    return [t('Unknown system frame. Usually from beta SDKs'), warningIcon];\n  }\n\n  return [null, null];\n}\n\nexport function isDotnet(platform: string) {\n  // csharp platform represents .NET and can be F#, VB or any language targeting CLS (the Common Language Specification)\n  return platform === 'csharp';\n}\n\nexport function hasContextSource(frame: Frame) {\n  return defined(frame.context) && !!frame.context.length;\n}\n\nexport function hasContextVars(frame: Frame) {\n  return !objectIsEmpty(frame.vars || {});\n}\n\nexport function hasContextRegisters(registers: Record<string, string>) {\n  return !objectIsEmpty(registers);\n}\n\nexport function hasAssembly(frame: Frame, platform?: string) {\n  return (\n    isDotnet(getPlatform(frame.platform, platform ?? 'other')) && defined(frame.package)\n  );\n}\n\nexport function isExpandable({\n  frame,\n  registers,\n  emptySourceNotation,\n  platform,\n  isOnlyFrame,\n}: {\n  frame: Frame;\n  registers: Record<string, string>;\n  emptySourceNotation?: boolean;\n  isOnlyFrame?: boolean;\n  platform?: string;\n}) {\n  return (\n    (!isOnlyFrame && emptySourceNotation) ||\n    hasContextSource(frame) ||\n    hasContextVars(frame) ||\n    hasContextRegisters(registers) ||\n    hasAssembly(frame, platform)\n  );\n}\n\nexport function getLeadHint({\n  event,\n  hasNextFrame,\n}: {\n  event: Event;\n  hasNextFrame: boolean;\n}) {\n  if (hasNextFrame) {\n    return t('Called from');\n  }\n\n  switch (event.type) {\n    case EventOrGroupType.ERROR:\n      // ANRs/AppHangs are errors, but not crashes, so \"Crashed in non-app\" might be confusing as if\n      // there was a crash prior to ANR, hence special-casing them\n      return isAnrEvent(event) ? t('Occurred in non-app') : t('Crashed in non-app');\n    default:\n      return t('Occurred in non-app');\n  }\n}\n\nfunction isAnrEvent(event: Event) {\n  const mechanismTag = event.tags?.find(({key}) => key === 'mechanism')?.value;\n  const isANR =\n    mechanismTag === 'ANR' ||\n    mechanismTag === 'AppExitInfo' ||\n    mechanismTag === 'AppHang' ||\n    mechanismTag === 'mx_hang_diagnostic';\n  return isANR;\n}\n","export enum SymbolicatorStatus {\n  SYMBOLICATED = 'symbolicated',\n  MISSING_SYMBOL = 'missing_symbol',\n  UNKNOWN_IMAGE = 'unknown_image',\n  MISSING = 'missing',\n  MALFORMED = 'malformed',\n}\n","import {Component} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport SplitDiff from 'sentry/components/splitDiff';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport getStacktraceBody from 'sentry/utils/getStacktraceBody';\nimport withApi from 'sentry/utils/withApi';\n\nconst defaultProps = {\n  baseEventId: 'latest',\n  targetEventId: 'latest',\n};\n\ntype DefaultProps = typeof defaultProps;\n\ntype Props = {\n  api: Client;\n  baseIssueId: string;\n  orgId: string;\n  project: Project;\n  targetIssueId: string;\n  baseEventId?: string;\n  className?: string;\n  targetEventId?: string;\n};\n\ntype State = {\n  baseEvent: Array<string>;\n  loading: boolean;\n  targetEvent: Array<string>;\n  SplitDiffAsync?: typeof SplitDiff;\n};\n\nclass IssueDiff extends Component<Props, State> {\n  static defaultProps: DefaultProps = defaultProps;\n\n  state: State = {\n    loading: true,\n    baseEvent: [],\n    targetEvent: [],\n\n    // `SplitDiffAsync` is an async-loaded component\n    // This will eventually contain a reference to the exported component from `./splitDiff`\n    SplitDiffAsync: undefined,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    const {baseIssueId, targetIssueId, baseEventId, targetEventId} = this.props;\n\n    // Fetch component and event data\n    Promise.all([\n      import('../splitDiff'),\n      this.fetchEventData(baseIssueId, baseEventId ?? 'latest'),\n      this.fetchEventData(targetIssueId, targetEventId ?? 'latest'),\n    ])\n      .then(([{default: SplitDiffAsync}, baseEvent, targetEvent]) => {\n        this.setState({\n          SplitDiffAsync,\n          baseEvent,\n          targetEvent,\n          loading: false,\n        });\n      })\n      .catch(() => {\n        addErrorMessage(t('Error loading events'));\n      });\n  }\n\n  fetchEventData = async (issueId: string, eventId: string) => {\n    const {orgId, project, api} = this.props;\n\n    let paramEventId = eventId;\n\n    if (eventId === 'latest') {\n      const event = await api.requestPromise(`/issues/${issueId}/events/latest/`);\n      paramEventId = event.eventID;\n    }\n\n    const event = await api.requestPromise(\n      `/projects/${orgId}/${project.slug}/events/${paramEventId}/`\n    );\n    return getStacktraceBody(event);\n  };\n\n  render() {\n    const {className} = this.props;\n    const {SplitDiffAsync: DiffComponent, loading, baseEvent, targetEvent} = this.state;\n\n    return (\n      <StyledIssueDiff className={className} loading={loading}>\n        {loading && <LoadingIndicator />}\n        {!loading &&\n          DiffComponent &&\n          baseEvent.map((value, i) => (\n            <DiffComponent\n              key={i}\n              base={value}\n              target={targetEvent[i] ?? ''}\n              type=\"words\"\n            />\n          ))}\n      </StyledIssueDiff>\n    );\n  }\n}\n\nexport default withApi(IssueDiff);\n\n// required for tests which do not provide API as context\nexport {IssueDiff};\n\nconst StyledIssueDiff = styled('div', {\n  shouldForwardProp: p => typeof p === 'string' && isPropValid(p) && p !== 'loading',\n})<Pick<State, 'loading'>>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  overflow: auto;\n  padding: ${space(1)};\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  ${p =>\n    p.loading &&\n    `\n        background-color: ${p.theme.background};\n        justify-content: center;\n        align-items: center;\n      `};\n`;\n","import {css} from '@emotion/react';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport IssueDiff from 'sentry/components/issueDiff';\n\ntype Props = ModalRenderProps & React.ComponentProps<typeof IssueDiff>;\n\nfunction DiffModal({className, Body, CloseButton, ...props}: Props) {\n  return (\n    <Body>\n      <CloseButton />\n      <IssueDiff className={className} {...props} />\n    </Body>\n  );\n}\n\nconst modalCss = css`\n  position: absolute;\n  left: 20px;\n  right: 20px;\n  top: 20px;\n  bottom: 20px;\n  display: flex;\n  padding: 0;\n  width: auto;\n\n  [role='document'] {\n    height: 100%;\n    display: flex;\n    flex: 1;\n  }\n\n  section {\n    display: flex;\n    width: 100%;\n  }\n`;\n\nexport {modalCss};\n\nexport default DiffModal;\n","import rawStacktraceContent from 'sentry/components/events/interfaces/crashContent/stackTrace/rawContent';\nimport {Event} from 'sentry/types/event';\n\nexport default function getStacktraceBody(event: Event) {\n  if (!event || !event.entries) {\n    return [];\n  }\n\n  // TODO(billyvg): This only accounts for the first exception, will need navigation to be able to\n  // diff multiple exceptions\n  //\n  // See: https://github.com/getsentry/sentry/issues/6055\n  const exc = event.entries.find(({type}) => type === 'exception');\n\n  if (!exc) {\n    // Look for a message if not an exception\n    const msg = event.entries.find(({type}) => type === 'message');\n    if (!msg) {\n      return [];\n    }\n    return msg?.data?.formatted && [msg.data.formatted];\n  }\n\n  if (!exc.data) {\n    return [];\n  }\n\n  // TODO(ts): This should be verified when EntryData has the correct type\n  return exc.data.values\n    .filter(value => !!value.stacktrace)\n    .map(value => rawStacktraceContent(value.stacktrace, event.platform, value))\n    .reduce((acc, value) => acc.concat(value), []);\n}\n","import {useCallback, useEffect, useRef} from 'react';\n\nimport {Client} from 'sentry/api';\n\ntype Options = {\n  /**\n   * An existing API client may be provided.\n   *\n   * This is a continent way to re-use clients and still inherit the\n   * persistInFlight configuration.\n   */\n  api?: Client;\n  /**\n   * Enabling this option will disable clearing in-flight requests when the\n   * component is unmounted.\n   *\n   * This may be useful in situations where your component needs to finish up\n   * somewhere the client was passed into some type of action creator and the\n   * component is unmounted.\n   */\n  persistInFlight?: boolean;\n};\n\n/**\n * Returns an API client that will have it's requests canceled when the owning\n * React component is unmounted (may be disabled via options).\n */\nfunction useApi({persistInFlight, api: providedApi}: Options = {}) {\n  const localApi = useRef<Client>();\n\n  // Lazily construct the client if we weren't provided with one\n  if (localApi.current === undefined && providedApi === undefined) {\n    localApi.current = new Client();\n  }\n\n  // Use the provided client if available\n  const api = providedApi ?? localApi.current!;\n\n  // Clear API calls on unmount (if persistInFlight is disabled\n  const clearOnUnmount = useCallback(() => {\n    if (!persistInFlight) {\n      api.clear();\n    }\n  }, [api, persistInFlight]);\n\n  useEffect(() => clearOnUnmount, [clearOnUnmount]);\n\n  return api;\n}\n\nexport default useApi;\n","import {Client} from 'sentry/api';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport useApi from 'sentry/utils/useApi';\n\ntype InjectedApiProps = {\n  api: Client;\n};\n\ntype WrappedProps<P> = Omit<P, keyof InjectedApiProps> & Partial<InjectedApiProps>;\n\n/**\n * XXX: Prefer useApi if you are wrapping a Function Component!\n *\n * React Higher-Order Component (HoC) that provides \"api\" client when mounted,\n * and clears API requests when component is unmounted.\n *\n * If an `api` prop is provided when the component is invoked it will be passed\n * through.\n */\nconst withApi = <P extends InjectedApiProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: Parameters<typeof useApi>[0] = {}\n) => {\n  function WithApi({api: propsApi, ...props}: WrappedProps<P>) {\n    const api = useApi({api: propsApi, ...options});\n\n    return <WrappedComponent {...(props as P)} api={api} />;\n  }\n\n  WithApi.displayName = `withApi(${getDisplayName(WrappedComponent)})`;\n\n  return WithApi;\n};\n\nexport default withApi;\n"],"names":["ljust","str","len","Array","Math","max","length","join","getFrame","frame","frameIdx","platform","result","defined","function","filename","module","lineNo","colNo","getJavaScriptFrame","getRubyFrame","idx","funcName","getPHPFrame","context","forEach","item","trim","getPythonFrame","getJavaFrame","package","trimPackage","instructionAddr","symbolAddr","getNativeFrame","displayRawContent","data","exception","frames","push","reverse","unshift","type","value","getJavaPreamble","getPreamble","pkg","pieces","split","test","replace","getPlatform","dataPlatform","getFrameHint","symbolicatorStatus","func","warningIcon","_jsx","IconQuestion","size","color","errorIcon","IconWarning","match","t","SymbolicatorStatus","MISSING_SYMBOL","UNKNOWN_IMAGE","MISSING","MALFORMED","isDotnet","hasContextSource","hasContextVars","objectIsEmpty","vars","hasContextRegisters","registers","hasAssembly","isExpandable","_ref","emptySourceNotation","isOnlyFrame","getLeadHint","_ref2","event","hasNextFrame","EventOrGroupType","ERROR","mechanismTag","tags","find","_ref3","key","isAnrEvent","IssueDiff","Component","constructor","arguments","_defineProperty","loading","baseEvent","targetEvent","SplitDiffAsync","undefined","async","issueId","eventId","orgId","project","api","this","props","paramEventId","requestPromise","eventID","slug","getStacktraceBody","componentDidMount","fetchData","baseIssueId","targetIssueId","baseEventId","targetEventId","Promise","all","fetchEventData","then","default","setState","catch","addErrorMessage","render","className","DiffComponent","state","_jsxs","StyledIssueDiff","children","LoadingIndicator","map","i","base","target","displayName","withApi","_styled","shouldForwardProp","p","isPropValid","theme","backgroundSecondary","space","background","DiffModal","Body","CloseButton","modalCss","name","styles","entries","exc","msg","formatted","values","filter","stacktrace","rawStacktraceContent","reduce","acc","concat","persistInFlight","providedApi","localApi","useRef","current","Client","clearOnUnmount","useCallback","clear","useEffect","WrappedComponent","options","WithApi","propsApi","useApi","getDisplayName"],"sourceRoot":""}