{"version":3,"file":"chunks/app_gettingStartedDocs_java_log4j2_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"kkBASA,MAAMA,GAAeC,EAAAA,EAAAA,IACnB,4JACA,CACEC,WAAWC,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,2CAC9BC,cACEH,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,+DAErBE,MAAMJ,EAAAA,EAAAA,IAAA,aAIGK,EAAQ,eAAC,IACpBC,GAGDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAA2B,CAC/B,CACEG,KAAMC,EAAAA,GAASC,QACfC,aAAaC,EAAAA,EAAAA,GACX,6EAEFC,eAAgB,CACd,CACEF,aAAab,EAAAA,EAAAA,IAAA,MAAAgB,UAAKF,EAAAA,EAAAA,GAAE,WACpBC,eAAgB,CACd,CACEE,SAAU,MACVb,KAAO,oJAQT,CACEa,SAAU,MACVJ,aAAaC,EAAAA,EAAAA,GACX,kGAEFV,KAAO,+yCA2Cb,CACES,aAAab,EAAAA,EAAAA,IAAA,MAAAgB,UAAKF,EAAAA,EAAAA,GAAE,aACpBC,eAAgB,CACd,CACEE,SAAU,SACVb,KAAM,mDAER,CACES,aAAaC,EAAAA,EAAAA,GACX,mGAEFG,SAAU,SACVb,KAAO,ggBA2BjB,CACEM,KAAMC,EAAAA,GAASO,UACfL,aAAaC,EAAAA,EAAAA,GACX,yEAEFC,eAAgB,CACd,CACEE,SAAU,MACVJ,aACEb,EAAAA,EAAAA,IAAA,KAAAgB,UACGlB,EAAAA,EAAAA,IACC,sQACA,CACEqB,YAAYnB,EAAAA,EAAAA,IAAA,WACZoB,2BAA2BpB,EAAAA,EAAAA,IAAA,WAC3BqB,oBAAoBrB,EAAAA,EAAAA,IAAA,eAK5BI,KAAO,gXAQOE,mNAUdgB,gBACEtB,EAAAA,EAAAA,IAAA,KAAAgB,UACGlB,EAAAA,EAAAA,IACC,gLACA,CACEM,MAAMJ,EAAAA,EAAAA,IAAA,WACNuB,MACEvB,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,gFAO/B,CACEW,aACEb,EAAAA,EAAAA,IAAA,KAAAgB,UACGlB,EAAAA,EAAAA,IACC,8IACA,CACEyB,MACEvB,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,uEAM7Ba,eAAgB,CACd,CACEE,SAAU,MACVb,KAAO,8QAIJE,oGAUb,CACEI,KAAMC,EAAAA,GAASa,OACfX,aAAaC,EAAAA,EAAAA,GACX,kFAEFC,eAAgB,CACd,CACEF,aAAab,EAAAA,EAAAA,IAAA,MAAAgB,SAAI,SACjBC,SAAU,OACVb,KAAO,oLAWT,CACES,aAAab,EAAAA,EAAAA,IAAA,MAAAgB,SAAI,WACjBC,SAAU,OACVb,KAAO,8KAYXkB,gBACEG,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAV,SAAA,EACPhB,EAAAA,EAAAA,IAAA,KAAAgB,UACGF,EAAAA,EAAAA,GACC,uGAGJd,EAAAA,EAAAA,IAAA,KAAAgB,UACGF,EAAAA,EAAAA,GACC,4FAMX,EAGM,SAASa,EAAwBC,GAA+B,IAA9B,IAACtB,KAAQuB,GAAmBD,EACnE,OAAO5B,EAAAA,EAAAA,IAAC8B,EAAAA,EAAM,CAACzB,MAAOA,EAAM,CAACC,QAAOT,aAAcA,KAAkBgC,GACtE,CAFgBF,EAAwBI,YAAA,2BAIxC,S","sources":["webpack:///./app/gettingStartedDocs/java/log4j2.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nconst introduction = tct(\n  'The [code:sentry-log4j2] library provides [log4jLink:Log4j 2.x] support for Sentry via an [appenderLink:Appender] that sends logged exceptions to Sentry.',\n  {\n    log4jLink: <ExternalLink href=\"https://logging.apache.org/log4j/2.x//\" />,\n    appenderLink: (\n      <ExternalLink href=\"https://logging.apache.org/log4j/2.x/manual/appenders.html\" />\n    ),\n    code: <code />,\n  }\n);\n\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: t(\n      \"Install Sentry's integration with Log4j 2.x using either Maven or Gradle:\"\n    ),\n    configurations: [\n      {\n        description: <h5>{t('Maven')}</h5>,\n        configurations: [\n          {\n            language: 'xml',\n            code: `\n<dependency>\n  <groupId>io.sentry</groupId>\n  <artifactId>sentry-log4j2</artifactId>\n  <version>6.25.2</version>\n</dependency>\n          `,\n          },\n          {\n            language: 'xml',\n            description: t(\n              'To upload your source code to Sentry so it can be shown in stack traces, use our Maven plugin.'\n            ),\n            code: `\n<build>\n  <plugins>\n    <plugin>\n      <groupId>io.sentry</groupId>\n      <artifactId>sentry-maven-plugin</artifactId>\n      <version>0.0.2</version>\n      <configuration>\n      <!-- for showing output of sentry-cli -->\n      <debugSentryCli>true</debugSentryCli>\n\n      <!-- download the latest sentry-cli and provide path to it here -->\n      <!-- download it here: https://github.com/getsentry/sentry-cli/releases -->\n      <!-- minimum required version is 2.17.3 -->\n      <sentryCliExecutablePath>/path/to/sentry-cli</sentryCliExecutablePath>\n\n      <org>___ORG_SLUG___</org>\n\n      <project>___PROJECT_SLUG___</project>\n\n      <!-- in case you're self hosting, provide the URL here -->\n      <!--<url>http://localhost:8000/</url>-->\n\n      <!-- provide your auth token via SENTRY_AUTH_TOKEN environment variable -->\n      <!-- you can find it in Sentry UI: Settings > Account > API > Auth Tokens -->\n      <authToken>env.SENTRY_AUTH_TOKEN</authToken>\n      </configuration>\n      <executions>\n        <execution>\n          <phase>generate-resources</phase>\n          <goals>\n          <goal>uploadSourceBundle</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n  ...\n</build>\n        `,\n          },\n        ],\n      },\n      {\n        description: <h5>{t('Graddle')}</h5>,\n        configurations: [\n          {\n            language: 'groovy',\n            code: \"implementation 'io.sentry:sentry-log4j2:6.25.2'\",\n          },\n          {\n            description: t(\n              'To upload your source code to Sentry so it can be shown in stack traces, use our Gradle plugin.'\n            ),\n            language: 'groovy',\n            code: `\nbuildscript {\n  repositories {\n    mavenCentral()\n  }\n}\n\nplugins {\n  id \"io.sentry.jvm.gradle\" version \"3.11.1\"\n}\n\nsentry {\n  // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.\n  // This enables source context, allowing you to see your source\n  // code as part of your stack traces in Sentry.\n  includeSourceContext = true\n\n  org = \"___ORG_SLUG___\"\n  projectName = \"___PROJECT_SLUG___\"\n  authToken = \"your-sentry-auth-token\"\n}\n            `,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: t(\n      \"Configure Sentry as soon as possible in your application's lifecycle:\"\n    ),\n    configurations: [\n      {\n        language: 'xml',\n        description: (\n          <p>\n            {tct(\n              'The following example using the [log4j2Code:log4j2.xml] format to configure a [sentryConsoleAppenderCode:ConsoleAppender] that logs to standard out at the INFO level, and a [sentryAppenderCode:SentryAppender] that logs to the Sentry server at the ERROR level.',\n              {\n                log4j2Code: <code />,\n                sentryConsoleAppenderCode: <code />,\n                sentryAppenderCode: <code />,\n              }\n            )}\n          </p>\n        ),\n        code: `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Configuration status=\"warn\" packages=\"org.apache.logging.log4j.core,io.sentry.log4j2\">\n    <Appenders>\n        <Console name=\"Console\" target=\"SYSTEM_OUT\">\n            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n\"/>\n        </Console>\n        <Sentry name=\"Sentry\"\n                dsn=${dsn}>\n    </Appenders>\n    <Loggers>\n        <Root level=\"info\">\n            <AppenderRef ref=\"Sentry\"/>\n            <AppenderRef ref=\"Console\"/>\n        </Root>\n    </Loggers>\n</Configuration>\n        `,\n        additionalInfo: (\n          <p>\n            {tct(\n              \"You'll also need to configure your DSN (client key) if it's not already in the [code:log4j2.xml] configuration. Learn more in [link:our documentation for DSN configuration].\",\n              {\n                code: <code />,\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platforms/java/guides/log4j2/#dsn-configuration\" />\n                ),\n              }\n            )}\n          </p>\n        ),\n      },\n      {\n        description: (\n          <p>\n            {tct(\n              \"Next, you'll need to set your log levels, as illustrated here. You can learn more about [link:configuring log levels] in our documentation.\",\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platforms/java/guides/log4j2/#configure\" />\n                ),\n              }\n            )}\n          </p>\n        ),\n        configurations: [\n          {\n            language: 'xml',\n            code: `\n<!-- Setting minimumBreadcrumbLevel modifies the default minimum level to add breadcrumbs from INFO to DEBUG  -->\n<!-- Setting minimumEventLevel the default minimum level to capture an event from ERROR to WARN  -->\n<Sentry name=\"Sentry\"\n        dsn=\"${dsn}\"\n        minimumBreadcrumbLevel=\"DEBUG\"\n        minimumEventLevel=\"WARN\"\n/>\n          `,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    type: StepType.VERIFY,\n    description: t(\n      'Last, create an intentional error, so you can test that everything is working:'\n    ),\n    configurations: [\n      {\n        description: <h5>Java</h5>,\n        language: 'java',\n        code: `\nimport java.lang.Exception;\nimport io.sentry.Sentry;\n\ntry {\n  throw new Exception(\"This is a test.\");\n} catch (Exception e) {\n  Sentry.captureException(e);\n}\n        `,\n      },\n      {\n        description: <h5>Kotlin</h5>,\n        language: 'java',\n        code: `\nimport java.lang.Exception\nimport io.sentry.Sentry\n\ntry {\n  throw Exception(\"This is a test.\")\n} catch (e: Exception) {\n  Sentry.captureException(e)\n}\n        `,\n      },\n    ],\n    additionalInfo: (\n      <Fragment>\n        <p>\n          {t(\n            \"If you're new to Sentry, use the email alert to access your account and complete a product tour.\"\n          )}\n        </p>\n        <p>\n          {t(\n            \"If you're an existing user and have disabled alerts, you won't receive this email.\"\n          )}\n        </p>\n      </Fragment>\n    ),\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithLog4j2({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} introduction={introduction} {...props} />;\n}\n\nexport default GettingStartedWithLog4j2;\n"],"names":["introduction","tct","log4jLink","_jsx","ExternalLink","href","appenderLink","code","steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","t","configurations","children","language","CONFIGURE","log4j2Code","sentryConsoleAppenderCode","sentryAppenderCode","additionalInfo","link","VERIFY","_jsxs","Fragment","GettingStartedWithLog4j2","_ref","props","Layout","displayName"],"sourceRoot":""}