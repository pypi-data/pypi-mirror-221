{"version":3,"file":"chunks/app_views_settings_account_accountSecurity_accountSecurityDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/account/accountSecurity/components/recoveryCodes.tsx","webpack:///./app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.tsx","webpack:///./app/views/settings/account/accountSecurity/accountSecurityDetails.tsx","webpack:///./app/views/settings/account/accountSecurity/components/confirmHeader.tsx","webpack:///./app/views/settings/account/accountSecurity/components/removeConfirm.tsx"],"sourcesContent":["import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport {CopyToClipboardButton} from 'sentry/components/copyToClipboardButton';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelAlert from 'sentry/components/panels/panelAlert';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport PanelItem from 'sentry/components/panels/panelItem';\nimport {IconDownload, IconPrint} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  codes: string[];\n  isEnrolled: boolean;\n  onRegenerateBackupCodes: () => void;\n  className?: string;\n};\n\nfunction RecoveryCodes({className, isEnrolled, codes, onRegenerateBackupCodes}: Props) {\n  const printCodes = () => {\n    // eslint-disable-next-line dot-notation\n    const iframe = window.frames['printable'];\n    iframe.document.write(codes.join('<br>'));\n    iframe.print();\n    iframe.document.close();\n  };\n\n  if (!isEnrolled || !codes) {\n    return null;\n  }\n\n  const formattedCodes = codes.join(' \\n');\n\n  return (\n    <CodeContainer className={className}>\n      <PanelHeader hasButtons>\n        {t('Unused Codes')}\n\n        <Actions>\n          <CopyToClipboardButton text={formattedCodes} size=\"sm\" />\n          <Button size=\"sm\" onClick={printCodes} aria-label={t('print')}>\n            <IconPrint />\n          </Button>\n          <Button\n            size=\"sm\"\n            download=\"sentry-recovery-codes.txt\"\n            href={`data:text/plain;charset=utf-8,${formattedCodes}`}\n            aria-label={t('download')}\n          >\n            <IconDownload />\n          </Button>\n          <Confirm\n            onConfirm={onRegenerateBackupCodes}\n            message={t(\n              'Are you sure you want to regenerate recovery codes? Your old codes will no longer work.'\n            )}\n          >\n            <Button priority=\"danger\" size=\"sm\">\n              {t('Regenerate Codes')}\n            </Button>\n          </Confirm>\n        </Actions>\n      </PanelHeader>\n      <PanelBody>\n        <PanelAlert type=\"warning\">\n          {t(\n            'Make sure to save a copy of your recovery codes and store them in a safe place.'\n          )}\n        </PanelAlert>\n        <div>{!!codes.length && codes.map(code => <Code key={code}>{code}</Code>)}</div>\n        {!codes.length && (\n          <EmptyMessage>{t('You have no more recovery codes to use')}</EmptyMessage>\n        )}\n      </PanelBody>\n      <iframe data-test-id=\"frame\" name=\"printable\" style={{display: 'none'}} />\n    </CodeContainer>\n  );\n}\n\nexport default RecoveryCodes;\n\nconst CodeContainer = styled(Panel)`\n  margin-top: ${space(4)};\n`;\n\nconst Actions = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n`;\n\nconst Code = styled(PanelItem)`\n  font-family: ${p => p.theme.text.familyMono};\n  padding: ${space(2)};\n`;\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport Input from 'sentry/components/input';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport PanelItem from 'sentry/components/panels/panelItem';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconClose, IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport ConfirmHeader from 'sentry/views/settings/account/accountSecurity/components/confirmHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nfunction U2fEnrolledDetails(props) {\n  const {className, isEnrolled, devices, id, onRemoveU2fDevice, onRenameU2fDevice} =\n    props;\n\n  if (id !== 'u2f' || !isEnrolled) {\n    return null;\n  }\n\n  const hasDevices = devices?.length;\n  // Note Tooltip doesn't work because of bootstrap(?) pointer events for disabled buttons\n  const isLastDevice = hasDevices === 1;\n  return (\n    <Panel className={className}>\n      <PanelHeader>{t('Device name')}</PanelHeader>\n\n      <PanelBody>\n        {!hasDevices && (\n          <EmptyMessage>{t('You have not added any U2F devices')}</EmptyMessage>\n        )}\n        {hasDevices &&\n          devices?.map((device, i) => (\n            <Device\n              key={i}\n              device={device}\n              isLastDevice={isLastDevice}\n              onRenameU2fDevice={onRenameU2fDevice}\n              onRemoveU2fDevice={onRemoveU2fDevice}\n            />\n          ))}\n        <AddAnotherPanelItem>\n          <Button to=\"/settings/account/security/mfa/u2f/enroll/\" size=\"sm\">\n            {t('Add Another Device')}\n          </Button>\n        </AddAnotherPanelItem>\n      </PanelBody>\n    </Panel>\n  );\n}\n\nfunction Device(props) {\n  const {device, isLastDevice, onRenameU2fDevice, onRemoveU2fDevice} = props;\n  const [deviceName, setDeviceName] = useState(device.name);\n  const [isEditing, setEditting] = useState(false);\n\n  if (!isEditing) {\n    return (\n      <DevicePanelItem key={device.name}>\n        <DeviceInformation>\n          <Name>{device.name}</Name>\n          <FadedDateTime date={device.timestamp} />\n        </DeviceInformation>\n        <Actions>\n          <Button size=\"sm\" onClick={() => setEditting(true)}>\n            {t('Rename Device')}\n          </Button>\n        </Actions>\n        <Actions>\n          <Confirm\n            onConfirm={() => onRemoveU2fDevice(device)}\n            disabled={isLastDevice}\n            message={\n              <Fragment>\n                <ConfirmHeader>{t('Do you want to remove U2F device?')}</ConfirmHeader>\n                <TextBlock>\n                  {t('Are you sure you want to remove the U2F device \"%s\"?', device.name)}\n                </TextBlock>\n              </Fragment>\n            }\n          >\n            <Button size=\"sm\" priority=\"danger\">\n              <Tooltip\n                disabled={!isLastDevice}\n                title={t('Can not remove last U2F device')}\n              >\n                <IconDelete size=\"xs\" />\n              </Tooltip>\n            </Button>\n          </Confirm>\n        </Actions>\n      </DevicePanelItem>\n    );\n  }\n\n  return (\n    <DevicePanelItem key={device.name}>\n      <DeviceInformation>\n        <DeviceNameInput\n          type=\"text\"\n          value={deviceName}\n          onChange={e => {\n            setDeviceName(e.target.value);\n          }}\n        />\n        <FadedDateTime date={device.timestamp} />\n      </DeviceInformation>\n      <Actions>\n        <Button\n          priority=\"primary\"\n          size=\"sm\"\n          onClick={() => {\n            onRenameU2fDevice(device, deviceName);\n            setEditting(false);\n          }}\n        >\n          Rename Device\n        </Button>\n      </Actions>\n\n      <Actions>\n        <Button\n          size=\"sm\"\n          title=\"Cancel rename\"\n          onClick={() => {\n            setDeviceName(device.name);\n            setEditting(false);\n          }}\n        >\n          <IconClose size=\"xs\" />\n        </Button>\n      </Actions>\n    </DevicePanelItem>\n  );\n}\n\nconst DeviceNameInput = styled(Input)`\n  width: 50%;\n  margin-right: ${space(2)};\n`;\n\nconst DevicePanelItem = styled(PanelItem)`\n  padding: 0;\n`;\n\nconst DeviceInformation = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1 1;\n  height: 72px;\n\n  padding: ${space(2)};\n  padding-right: 0;\n`;\n\nconst FadedDateTime = styled(DateTime)`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  opacity: 0.6;\n`;\n\nconst Name = styled('div')`\n  flex: 1;\n`;\n\nconst Actions = styled('div')`\n  margin: ${space(2)};\n`;\n\nconst AddAnotherPanelItem = styled(PanelItem)`\n  justify-content: flex-end;\n  padding: ${space(2)};\n`;\n\nexport default styled(U2fEnrolledDetails)`\n  margin-top: ${space(4)};\n`;\n","/**\n * AccountSecurityDetails is only displayed when user is enrolled in the 2fa method.\n * It displays created + last used time of the 2fa method.\n *\n * Also displays 2fa method specific details.\n */\nimport {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Button} from 'sentry/components/button';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport DateTime from 'sentry/components/dateTime';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Authenticator, AuthenticatorDevice} from 'sentry/types';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport RecoveryCodes from 'sentry/views/settings/account/accountSecurity/components/recoveryCodes';\nimport RemoveConfirm from 'sentry/views/settings/account/accountSecurity/components/removeConfirm';\nimport U2fEnrolledDetails from 'sentry/views/settings/account/accountSecurity/components/u2fEnrolledDetails';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst ENDPOINT = '/users/me/authenticators/';\n\ntype AuthenticatorDateProps = {\n  /**\n   * Can be null or a Date object.\n   * Component will have value \"never\" if it is null\n   */\n  date: string | null;\n  label: string;\n};\n\nfunction AuthenticatorDate({label, date}: AuthenticatorDateProps) {\n  return (\n    <Fragment>\n      <DateLabel>{label}</DateLabel>\n      <div>{date ? <DateTime date={date} /> : t('never')}</div>\n    </Fragment>\n  );\n}\n\ntype Props = {\n  deleteDisabled: boolean;\n  onRegenerateBackupCodes: () => void;\n} & RouteComponentProps<{authId: string}, {}>;\n\ntype State = {\n  authenticator: Authenticator | null;\n} & DeprecatedAsyncView['state'];\n\nclass AccountSecurityDetails extends DeprecatedAsyncView<Props, State> {\n  getTitle() {\n    return t('Security');\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    const {params} = this.props;\n    const {authId} = params;\n\n    return [['authenticator', `${ENDPOINT}${authId}/`]];\n  }\n\n  handleRemove = async (device?: AuthenticatorDevice) => {\n    const {authenticator} = this.state;\n\n    if (!authenticator || !authenticator.authId) {\n      return;\n    }\n\n    // if the device is defined, it means that U2f is being removed\n    // reason for adding a trailing slash is a result of the endpoint on line 109 needing it but it can't be set there as if deviceId is None, the route will end with '//'\n    const deviceId = device ? `${device.key_handle}/` : '';\n    const deviceName = device ? device.name : t('Authenticator');\n\n    this.setState({loading: true});\n\n    try {\n      await this.api.requestPromise(`${ENDPOINT}${authenticator.authId}/${deviceId}`, {\n        method: 'DELETE',\n      });\n      this.props.router.push('/settings/account/security');\n      addSuccessMessage(t('%s has been removed', deviceName));\n    } catch {\n      // Error deleting authenticator\n      this.setState({loading: false});\n      addErrorMessage(t('Error removing %s', deviceName));\n    }\n  };\n\n  handleRename = async (device: AuthenticatorDevice, deviceName: string) => {\n    const {authenticator} = this.state;\n\n    if (!authenticator?.authId) {\n      return;\n    }\n    // if the device is defined, it means that U2f is being renamed\n    // reason for adding a trailing slash is a result of the endpoint on line 109 needing it but it can't be set there as if deviceId is None, the route will end with '//'\n    const deviceId = device ? `${device.key_handle}/` : '';\n\n    this.setState({loading: true});\n    const data = {\n      name: deviceName,\n    };\n\n    try {\n      await this.api.requestPromise(`${ENDPOINT}${authenticator.authId}/${deviceId}`, {\n        method: 'PUT',\n        data,\n      });\n      this.props.router.push(`/settings/account/security/mfa/${authenticator.authId}`);\n      addSuccessMessage(t('Device was renamed'));\n    } catch {\n      this.setState({loading: false});\n      addErrorMessage(t('Error renaming the device'));\n    }\n  };\n\n  renderBody() {\n    const {authenticator} = this.state;\n\n    if (!authenticator) {\n      return null;\n    }\n\n    const {deleteDisabled, onRegenerateBackupCodes} = this.props;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={\n            <Fragment>\n              <span>{authenticator.name}</span>\n              <AuthenticatorStatus\n                data-test-id={`auth-status-${\n                  authenticator.isEnrolled ? 'enabled' : 'disabled'\n                }`}\n                enabled={authenticator.isEnrolled}\n              />\n            </Fragment>\n          }\n          action={\n            <AuthenticatorActions>\n              {authenticator.isEnrolled && authenticator.allowRotationInPlace && (\n                <Button to={`/settings/account/security/mfa/${authenticator.id}/enroll/`}>\n                  {t('Rotate Secret Key')}\n                </Button>\n              )}\n              {authenticator.isEnrolled && authenticator.removeButton && (\n                <Tooltip\n                  title={t(\n                    \"Two-factor authentication is required for at least one organization you're a member of.\"\n                  )}\n                  disabled={!deleteDisabled}\n                >\n                  <RemoveConfirm onConfirm={this.handleRemove} disabled={deleteDisabled}>\n                    <Button priority=\"danger\">{authenticator.removeButton}</Button>\n                  </RemoveConfirm>\n                </Tooltip>\n              )}\n            </AuthenticatorActions>\n          }\n        />\n\n        <TextBlock>{authenticator.description}</TextBlock>\n\n        <AuthenticatorDates>\n          <AuthenticatorDate label={t('Created at')} date={authenticator.createdAt} />\n          <AuthenticatorDate label={t('Last used')} date={authenticator.lastUsedAt} />\n        </AuthenticatorDates>\n\n        <U2fEnrolledDetails\n          isEnrolled={authenticator.isEnrolled}\n          id={authenticator.id}\n          devices={authenticator.devices}\n          onRemoveU2fDevice={this.handleRemove}\n          onRenameU2fDevice={this.handleRename}\n        />\n\n        {authenticator.isEnrolled && authenticator.phone && (\n          <PhoneWrapper>\n            {t('Confirmation codes are sent to the following phone number')}:\n            <Phone>{authenticator.phone}</Phone>\n          </PhoneWrapper>\n        )}\n\n        <RecoveryCodes\n          onRegenerateBackupCodes={onRegenerateBackupCodes}\n          isEnrolled={authenticator.isEnrolled}\n          codes={authenticator.codes}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default AccountSecurityDetails;\n\nconst AuthenticatorStatus = styled(CircleIndicator)`\n  margin-left: ${space(1)};\n`;\n\nconst AuthenticatorActions = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  > * {\n    margin-left: ${space(1)};\n  }\n`;\n\nconst AuthenticatorDates = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: max-content auto;\n`;\n\nconst DateLabel = styled('span')`\n  font-weight: bold;\n`;\n\nconst PhoneWrapper = styled('div')`\n  margin-top: ${space(4)};\n`;\n\nconst Phone = styled('span')`\n  font-weight: bold;\n  margin-left: ${space(1)};\n`;\n","import styled from '@emotion/styled';\n\nconst ConfirmHeader = styled('div')`\n  font-size: 1.2em;\n  margin-bottom: 10px;\n`;\n\nexport default ConfirmHeader;\n","import {Fragment} from 'react';\n\nimport Confirm from 'sentry/components/confirm';\nimport {t} from 'sentry/locale';\nimport ConfirmHeader from 'sentry/views/settings/account/accountSecurity/components/confirmHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = React.ComponentProps<typeof Confirm>;\n\nconst message = (\n  <Fragment>\n    <ConfirmHeader>{t('Do you want to remove this method?')}</ConfirmHeader>\n    <TextBlock>\n      {t(\n        'Removing the last authentication method will disable two-factor authentication completely.'\n      )}\n    </TextBlock>\n  </Fragment>\n);\n\nfunction RemoveConfirm(props: Props) {\n  return <Confirm {...props} message={message} />;\n}\n\nexport default RemoveConfirm;\n"],"names":["getPadding","_ref","disablePadding","hasButtons","css","space","_styled","target","p","lightText","theme","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","RecoveryCodes","className","isEnrolled","codes","onRegenerateBackupCodes","formattedCodes","join","_jsxs","CodeContainer","PanelHeader","t","Actions","CopyToClipboardButton","text","size","Button","onClick","printCodes","iframe","window","frames","document","write","print","close","IconPrint","download","href","IconDownload","Confirm","onConfirm","message","priority","PanelBody","PanelAlert","type","length","map","code","Code","EmptyMessage","name","style","display","Panel","PanelItem","familyMono","U2fEnrolledDetails","props","devices","id","onRemoveU2fDevice","onRenameU2fDevice","hasDevices","isLastDevice","device","i","Device","AddAnotherPanelItem","to","deviceName","setDeviceName","useState","isEditing","setEditting","DevicePanelItem","DeviceInformation","DeviceNameInput","value","onChange","e","FadedDateTime","date","timestamp","IconClose","Name","disabled","Fragment","ConfirmHeader","TextBlock","Tooltip","IconDelete","Input","styles","DateTime","fontSizeRelativeSmall","ENDPOINT","AuthenticatorDate","label","DateLabel","AccountSecurityDetails","constructor","arguments","_defineProperty","async","authenticator","state","authId","deviceId","key_handle","setState","loading","api","requestPromise","method","router","push","addSuccessMessage","addErrorMessage","data","getEndpoints","params","renderBody","deleteDisabled","SettingsPageHeader","AuthenticatorStatus","enabled","action","AuthenticatorActions","allowRotationInPlace","removeButton","RemoveConfirm","handleRemove","description","AuthenticatorDates","createdAt","lastUsedAt","handleRename","phone","PhoneWrapper","Phone","CircleIndicator"],"sourceRoot":""}