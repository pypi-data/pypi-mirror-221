{"version":3,"file":"chunks/app_views_settings_organizationApiKeys_organizationApiKeyDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/forms/fields/textareaField.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/organizationApiKeys/organizationApiKeyDetails.tsx"],"sourcesContent":["import omit from 'lodash/omit';\n\nimport FormField from 'sentry/components/forms/formField';\nimport FormFieldControlState from 'sentry/components/forms/formField/controlState';\nimport FormModel from 'sentry/components/forms/model';\nimport {InputGroup, TextAreaProps} from 'sentry/components/inputGroup';\n\n// XXX(epurkhiser): This is wrong, it should not be inheriting these props\nimport {InputFieldProps} from './inputField';\n\nexport interface TextareaFieldProps\n  extends Omit<InputFieldProps, 'field'>,\n    Pick<TextAreaProps, 'monospace' | 'autosize' | 'rows' | 'maxRows'> {}\n\nfunction TextareaField({\n  monospace,\n  rows,\n  autosize,\n  hideControlState,\n  ...props\n}: TextareaFieldProps) {\n  return (\n    <FormField {...props} hideControlState flexibleControlStateSize>\n      {({\n        children: _children,\n        model,\n        name,\n        ...fieldProps\n      }: {\n        children: React.ReactNode;\n        model: FormModel;\n        name: string;\n      }) => (\n        <InputGroup>\n          <InputGroup.TextArea\n            {...{monospace, rows, autosize, name}}\n            // Do not forward required to `textarea` to avoid default browser behavior\n            {...omit(fieldProps, ['onKeyDown', 'children', 'required'])}\n          />\n          {!hideControlState && (\n            <InputGroup.TrailingItems>\n              <FormFieldControlState model={model} name={name} />\n            </InputGroup.TrailingItems>\n          )}\n        </InputGroup>\n      )}\n    </FormField>\n  );\n}\n\nexport default TextareaField;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport ApiForm from 'sentry/components/forms/apiForm';\nimport MultipleCheckbox from 'sentry/components/forms/controls/multipleCheckbox';\nimport TextareaField from 'sentry/components/forms/fields/textareaField';\nimport TextField from 'sentry/components/forms/fields/textField';\nimport FormField from 'sentry/components/forms/formField';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport {API_ACCESS_SCOPES} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nimport {DeprecatedApiKey} from './types';\n\ntype RouteParams = {\n  apiKey: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n};\n\ntype State = DeprecatedAsyncView['state'] & {\n  apiKey: DeprecatedApiKey;\n};\n\nclass OrganizationApiKeyDetails extends DeprecatedAsyncView<Props, State> {\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    return [\n      [\n        'apiKey',\n        `/organizations/${organization.slug}/api-keys/${this.props.params.apiKey}/`,\n      ],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Edit API Key'), this.props.organization.slug, false);\n  }\n\n  handleSubmitSuccess = () => {\n    addSuccessMessage('Saved changes');\n\n    // Go back to API list\n    browserHistory.push(\n      recreateRoute('', {\n        stepBack: -1,\n        routes: this.props.routes,\n        params: this.props.params,\n      })\n    );\n  };\n\n  handleSubmitError = () => {\n    addErrorMessage('Unable to save changes. Please try again.');\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n    return (\n      <div>\n        <SettingsPageHeader title={t('Edit API Key')} />\n\n        <Panel>\n          <PanelHeader>{t('API Key')}</PanelHeader>\n          <ApiForm\n            apiMethod=\"PUT\"\n            apiEndpoint={`/organizations/${organization.slug}/api-keys/${this.props.params.apiKey}/`}\n            initialData={this.state.apiKey}\n            onSubmitSuccess={this.handleSubmitSuccess}\n            onSubmitError={this.handleSubmitError}\n            onCancel={() =>\n              browserHistory.push(\n                recreateRoute('', {\n                  stepBack: -1,\n                  routes: this.props.routes,\n                  params: this.props.params,\n                })\n              )\n            }\n          >\n            <PanelBody>\n              <TextField label={t('Label')} name=\"label\" />\n              <TextField label={t('API Key')} name=\"key\" disabled />\n\n              <FormField name=\"scope_list\" label={t('Scopes')} inline={false} required>\n                {({name, value, onChange}) => (\n                  <MultipleCheckbox value={value} onChange={onChange} name={name}>\n                    {API_ACCESS_SCOPES.map(scope => (\n                      <MultipleCheckbox.Item value={scope} key={scope}>\n                        {scope}\n                      </MultipleCheckbox.Item>\n                    ))}\n                  </MultipleCheckbox>\n                )}\n              </FormField>\n\n              <TextareaField\n                label={t('Allowed Domains')}\n                name=\"allowed_origins\"\n                placeholder=\"e.g. example.com or https://example.com\"\n                help=\"Separate multiple entries with a newline\"\n              />\n            </PanelBody>\n          </ApiForm>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationApiKeyDetails);\n"],"names":["TextareaField","_ref","monospace","rows","autosize","hideControlState","props","_jsx","FormField","flexibleControlStateSize","children","_ref2","_children","model","name","fieldProps","_jsxs","InputGroup","TextArea","omit","TrailingItems","FormFieldControlState","displayName","routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","SentryDocumentTitle","title","this","renderComponent","OrganizationApiKeyDetails","constructor","_defineProperty","addSuccessMessage","browserHistory","push","recreateRoute","stepBack","routes","params","addErrorMessage","getEndpoints","organization","slug","apiKey","routeTitleGen","t","renderBody","SettingsPageHeader","Panel","PanelHeader","ApiForm","apiMethod","apiEndpoint","initialData","state","onSubmitSuccess","handleSubmitSuccess","onSubmitError","handleSubmitError","onCancel","PanelBody","TextField","label","disabled","inline","required","value","onChange","MultipleCheckbox","API_ACCESS_SCOPES","map","scope","Item","placeholder","help","withOrganization"],"sourceRoot":""}