{"version":3,"file":"chunks/app_components_modals_reprocessEventModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/forms/fields/radioField.tsx","webpack:///./app/components/modals/reprocessEventModal.tsx"],"sourcesContent":["import RadioGroup, {RadioGroupProps} from 'sentry/components/forms/controls/radioGroup';\nimport FormField from 'sentry/components/forms/formField';\n\n// XXX(epurkhiser): This is wrong, it should not be inheriting these props\nimport {InputFieldProps, OnEvent} from './inputField';\n\nexport interface RadioFieldProps extends Omit<InputFieldProps, 'type'> {\n  choices?: RadioGroupProps<any>['choices'];\n  orientInline?: RadioGroupProps<any>['orientInline'];\n}\n\nfunction handleChange(\n  id: string,\n  onChange: OnEvent,\n  onBlur: OnEvent,\n  e: React.FormEvent<HTMLInputElement>\n) {\n  onChange(id, e);\n  onBlur(id, e);\n}\n\nfunction RadioField(props: RadioFieldProps) {\n  return (\n    <FormField {...props}>\n      {({id, onChange, onBlur, value, disabled, orientInline, ...fieldProps}) => (\n        // XXX: The label must be present on the role=\"radiogroup\" element. The\n        // `htmlFor` attribute on the Field label does NOT link to the group.\n        <RadioGroup\n          id={id}\n          choices={fieldProps.choices}\n          disabled={disabled}\n          orientInline={orientInline}\n          label={fieldProps.label}\n          value={value === '' ? null : value}\n          onChange={(v, e) => handleChange(v, onChange, onBlur, e)}\n        />\n      )}\n    </FormField>\n  );\n}\n\nexport default RadioField;\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport NumberField from 'sentry/components/forms/fields/numberField';\nimport RadioField from 'sentry/components/forms/fields/radioField';\nimport Form from 'sentry/components/forms/form';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Group, Organization} from 'sentry/types';\n\nexport type ReprocessEventModalOptions = {\n  groupId: Group['id'];\n  organization: Organization;\n};\n\nexport function ReprocessingEventModal({\n  Header,\n  Body,\n  organization,\n  closeModal,\n  groupId,\n}: ModalRenderProps & ReprocessEventModalOptions) {\n  const [maxEvents, setMaxEvents] = useState<number | undefined>(undefined);\n\n  function handleSuccess() {\n    closeModal();\n    window.location.reload();\n  }\n\n  return (\n    <Fragment>\n      <Header closeButton>\n        <h4>{t('Reprocess Events')}</h4>\n      </Header>\n      <Body>\n        <Introduction>\n          {t(\n            'Reprocessing applies new debug files and grouping enhancements to this Issue. Please consider these impacts:'\n          )}\n        </Introduction>\n        <StyledList symbol=\"bullet\">\n          <ListItem>\n            {tct(\n              \"[strong:Quota applies.] Every event you choose to reprocess counts against your plan's quota. Rate limits and spike protection do not apply.\",\n              {strong: <strong />}\n            )}\n          </ListItem>\n          <ListItem>\n            {tct(\n              '[strong:Attachment storage required.] If your events come from minidumps or unreal crash reports, you must have [link:attachment storage] enabled.',\n              {\n                strong: <strong />,\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platforms/native/enriching-events/attachments/#crash-reports-and-privacy\" />\n                ),\n              }\n            )}\n          </ListItem>\n          <ListItem>\n            {t(\n              'Please wait one hour after upload before attempting to reprocess missing debug files.'\n            )}\n          </ListItem>\n        </StyledList>\n        <Introduction>\n          {tct('For more information, please refer to [link:the documentation.]', {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/reprocessing/\" />\n            ),\n          })}\n        </Introduction>\n        <Form\n          submitLabel={t('Reprocess Events')}\n          apiEndpoint={`/organizations/${organization.slug}/issues/${groupId}/reprocessing/`}\n          apiMethod=\"POST\"\n          initialData={{maxEvents: undefined, remainingEvents: 'keep'}}\n          onSubmitSuccess={handleSuccess}\n          onSubmitError={() =>\n            addErrorMessage(t('Failed to reprocess. Please check your input.'))\n          }\n          onCancel={closeModal}\n          footerClass=\"modal-footer\"\n        >\n          <NumberField\n            name=\"maxEvents\"\n            label={t('Number of events to be reprocessed')}\n            help={t('If you set a limit, we will reprocess your most recent events.')}\n            placeholder={t('Reprocess all events')}\n            onChange={value => setMaxEvents(!isNaN(value) ? Number(value) : undefined)}\n            min={1}\n          />\n\n          <RadioField\n            orientInline\n            label={t('Remaining events')}\n            help={t('What to do with the events that are not reprocessed.')}\n            name=\"remainingEvents\"\n            choices={[\n              ['keep', t('Keep')],\n              ['delete', t('Delete')],\n            ]}\n            disabled={maxEvents === undefined}\n          />\n        </Form>\n      </Body>\n    </Fragment>\n  );\n}\n\nconst Introduction = styled('p')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst StyledList = styled(List)`\n  gap: ${space(1)};\n  margin-bottom: ${space(4)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n"],"names":["RadioField","props","_jsx","FormField","children","_ref","id","onChange","onBlur","value","disabled","orientInline","fieldProps","RadioGroup","choices","label","v","e","handleChange","displayName","ReprocessingEventModal","Header","Body","organization","closeModal","groupId","maxEvents","setMaxEvents","useState","undefined","_jsxs","Fragment","closeButton","t","Introduction","StyledList","symbol","ListItem","tct","strong","link","ExternalLink","href","Form","submitLabel","apiEndpoint","slug","apiMethod","initialData","remainingEvents","onSubmitSuccess","window","location","reload","onSubmitError","addErrorMessage","onCancel","footerClass","NumberField","name","help","placeholder","isNaN","Number","min","_styled","target","p","theme","fontSizeLarge","List","space","fontSizeMedium"],"sourceRoot":""}