{"version":3,"file":"chunks/app_gettingStartedDocs_ruby_ruby_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"ueAMO,MAAMA,EAAQ,eAAC,IACpBC,GAGDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAA2B,CAC/B,CACEG,KAAMC,EAAAA,GAASC,QACfC,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,+HACA,CAACC,MAAMH,EAAAA,EAAAA,IAAA,eAIbI,eAAgB,CACd,CACEC,SAAU,OACVF,KAAM,uBAIZ,CACEP,KAAMC,EAAAA,GAASS,UACfP,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,+SACA,CAACK,WAAWP,EAAAA,EAAAA,IAAA,WAAUQ,YAAYR,EAAAA,EAAAA,IAAA,eAIxCI,eAAgB,CACd,CACEC,SAAU,OACVF,KAAO,8CAEGX,8RAehB,CACEI,KAAMC,EAAAA,GAASY,OACfV,aAAaW,EAAAA,EAAAA,GAAE,qDACfN,eAAgB,CACd,CACEC,SAAU,OAEVF,KAAO,6JAYd,EAGM,SAASQ,EAAsBC,GAA+B,IAA9B,IAACpB,KAAQqB,GAAmBD,EACjE,OAAOZ,EAAAA,EAAAA,IAACc,EAAAA,EAAM,CAACvB,MAAOA,EAAM,CAACC,WAAWqB,GAC1C,CAFgBF,EAAsBI,YAAA,yBAItC,S","sources":["webpack:///./app/gettingStartedDocs/ruby/ruby.tsx"],"sourcesContent":["import {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: (\n      <p>\n        {tct(\n          'Sentry Ruby comes as a gem and is straightforward to install. If you are using Bundler just add this to your [code:Gemfile]:',\n          {code: <code />}\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'ruby',\n        code: 'gem \"sentry-ruby\"',\n      },\n    ],\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: (\n      <p>\n        {tct(\n          'To use Sentry Ruby all you need is your DSN. Like most Sentry libraries it will honor the [sentryDSN:SENTRY_DSN] environment variable. You can find it on the project settings page under API Keys. You can either export it as environment variable or manually configure it with [sentryInit:Sentry.init]:',\n          {sentryDSN: <code />, sentryInit: <code />}\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'ruby',\n        code: `\nSentry.init do |config|\n  config.dsn = '${dsn}'\n\n  # Set traces_sample_rate to 1.0 to capture 100%\n  # of transactions for performance monitoring.\n  # We recommend adjusting this value in production.\n  config.traces_sample_rate = 1.0\n  # or\n  config.traces_sampler = lambda do |context|\n    true\n  end\nend\n        `,\n      },\n    ],\n  },\n  {\n    type: StepType.VERIFY,\n    description: t('You can then report errors or messages to Sentry:'),\n    configurations: [\n      {\n        language: 'ruby',\n\n        code: `\nbegin\n  1 / 0\nrescue ZeroDivisionError => exception\n  Sentry.capture_exception(exception)\nend\n\nSentry.capture_message(\"test message\")\n        `,\n      },\n    ],\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithRuby({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} {...props} />;\n}\n\nexport default GettingStartedWithRuby;\n"],"names":["steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","_jsx","children","tct","code","configurations","language","CONFIGURE","sentryDSN","sentryInit","VERIFY","t","GettingStartedWithRuby","_ref","props","Layout","displayName"],"sourceRoot":""}