{"version":3,"file":"chunks/app_gettingStartedDocs_dotnet_maui_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"gkBASO,MAAMA,EAAQ,eAAC,IACpBC,GAGDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAA2B,CAC/B,CACEG,KAAMC,EAAAA,GAASC,QACfC,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IAAI,sCAAuC,CAC1CC,QAAQH,EAAAA,EAAAA,IAAA,iBAIdI,eAAgB,CACd,CACEC,SAAU,QACVC,KAAM,4CAER,CACED,SAAU,aACVC,KAAM,iDAIZ,CACEV,KAAMC,EAAAA,GAASU,UACfR,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,mGACA,CACEM,oBAAoBR,EAAAA,EAAAA,IAAA,WACpBS,aAAaT,EAAAA,EAAAA,IAAA,eAKrBI,eAAgB,CACd,CACEC,SAAU,SACVC,KAAO,kRAUQd,uqBAuBrB,CACEI,KAAMC,EAAAA,GAASa,OACfX,aAAaY,EAAAA,EAAAA,GACX,qLAEFP,eAAgB,CACd,CACEC,SAAU,SACVC,KAAM,+CAIZ,CACEM,OAAOD,EAAAA,EAAAA,GAAE,0BACTZ,aACEc,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAb,SAAA,EACNU,EAAAA,EAAAA,GACC,yMAEFX,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,qKACA,CACEa,8BACEf,EAAAA,EAAAA,IAACgB,EAAAA,EAAY,CAACC,KAAK,sHAO/Bb,eAAgB,CACd,CACEL,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,8GACA,CAACI,MAAMN,EAAAA,EAAAA,IAAA,eAIbK,SAAU,SACVC,KAAO,gHAKT,CACEP,aACEc,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAb,SAAA,EACNU,EAAAA,EAAAA,GACC,qIAEFX,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,kIACA,CACEgB,2BACElB,EAAAA,EAAAA,IAACgB,EAAAA,EAAY,CAACC,KAAK,mHAO/BZ,SAAU,SACVC,KAAO,wjBAoBb,CACEM,OAAOD,EAAAA,EAAAA,GAAE,sBACTZ,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,+EACA,CACEiB,gBACEnB,EAAAA,EAAAA,IAACgB,EAAAA,EAAY,CAACC,KAAK,qFAErBX,MAAMN,EAAAA,EAAAA,IAAA,gBAMjB,EAGM,SAASoB,EAAsBC,GAA+B,IAA9B,IAAC7B,KAAQ8B,GAAmBD,EACjE,OAAOrB,EAAAA,EAAAA,IAACuB,EAAAA,EAAM,CAAChC,MAAOA,EAAM,CAACC,WAAW8B,GAC1C,CAFgBF,EAAsBI,YAAA,yBAItC,S","sources":["webpack:///./app/gettingStartedDocs/dotnet/maui.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: (\n      <p>\n        {tct('Install the [strong:NuGet] package:', {\n          strong: <strong />,\n        })}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'shell',\n        code: 'dotnet add package Sentry.Maui -v 3.34.0',\n      },\n      {\n        language: 'powershell',\n        code: 'Install-Package Sentry.Maui -Version 3.34.0',\n      },\n    ],\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: (\n      <p>\n        {tct(\n          'Then add Sentry to [mauiProgram:MauiProgram.cs] through the [mauiAppBuilderCode:MauiAppBuilder]:',\n          {\n            mauiAppBuilderCode: <code />,\n            mauiProgram: <code />,\n          }\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'csharp',\n        code: `\npublic static MauiApp CreateMauiApp()\n{\n  var builder = MauiApp.CreateBuilder();\n  builder\n    .UseMauiApp<App>()\n\n    // Add this section anywhere on the builder:\n    .UseSentry(options => {\n      // The DSN is the only required setting.\n      options.Dsn = \"${dsn}\";\n\n      // Use debug mode if you want to see what the SDK is doing.\n      // Debug messages are written to stdout with Console.Writeline,\n      // and are viewable in your IDE's debug console or with 'adb logcat', etc.\n      // This option is not recommended when deploying your application.\n      options.Debug = true;\n\n      // Set TracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n      // We recommend adjusting this value in production.\n      options.TracesSampleRate = 1.0;\n\n      // Other Sentry options can be set here.\n  })\n\n  // ... the remainder of your MAUI app setup\n\n  return builder.Build();\n}\n        `,\n      },\n    ],\n  },\n  {\n    type: StepType.VERIFY,\n    description: t(\n      'To verify your set up, you can capture a message with the SDK, anywhere in your code after the application is built, such as in a page constructor or button click event handler:'\n    ),\n    configurations: [\n      {\n        language: 'csharp',\n        code: 'SentrySdk.CaptureMessage(\"Hello Sentry\");',\n      },\n    ],\n  },\n  {\n    title: t('Performance Monitoring'),\n    description: (\n      <Fragment>\n        {t(\n          'We do not yet have automatic performance instrumentation for .NET MAUI. We will be adding that in a future release. However, if desired you can still manually instrument parts of your application.'\n        )}\n        <p>\n          {tct(\n            'For some parts of your code, [automaticInstrumentationLink:automatic instrumentation] is available across all of our .NET SDKs, and can be used with MAUI as well:',\n            {\n              automaticInstrumentationLink: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/dotnet/guides/maui/performance/instrumentation/automatic-instrumentation/\" />\n              ),\n            }\n          )}\n        </p>\n      </Fragment>\n    ),\n    configurations: [\n      {\n        description: (\n          <p>\n            {tct(\n              'If your app uses [code:HttpClient], you can instrument your HTTP calls by passing our HTTP message handler:',\n              {code: <code />}\n            )}\n          </p>\n        ),\n        language: 'csharp',\n        code: `\nvar httpHandler = new SentryHttpMessageHandler();\nvar httpClient = new HttpClient(httpHandler);\n        `,\n      },\n      {\n        description: (\n          <Fragment>\n            {t(\n              'If your app uses Entity Framework Core or SQL Client, we will automatically instrument that for you without any additional code.'\n            )}\n            <p>\n              {tct(\n                'For other parts of your code, you can use [customInstrumentationLink:custom instrumentation], such as in the following example:',\n                {\n                  customInstrumentationLink: (\n                    <ExternalLink href=\"https://docs.sentry.io/platforms/dotnet/guides/maui/performance/instrumentation/custom-instrumentation/\" />\n                  ),\n                }\n              )}\n            </p>\n          </Fragment>\n        ),\n        language: 'csharp',\n        code: `\n// Transaction can be started by providing, at minimum, the name and the operation\nvar transaction = SentrySdk.StartTransaction(\n  \"test-transaction-name\",\n  \"test-transaction-operation\"\n);\n\n// Transactions can have child spans (and those spans can have child spans as well)\nvar span = transaction.StartChild(\"test-child-operation\");\n\n// ...\n// (Perform the operation represented by the span/transaction)\n// ...\n\nspan.Finish(); // Mark the span as finished\ntransaction.Finish(); // Mark the transaction as finished and send it to Sentry\n        `,\n      },\n    ],\n  },\n  {\n    title: t('Sample Application'),\n    description: (\n      <p>\n        {tct(\n          'See the [mauiSampleLink:MAUI Sample in the [code:sentry-dotnet] repository].',\n          {\n            mauiSampleLink: (\n              <ExternalLink href=\"https://github.com/getsentry/sentry-dotnet/tree/main/samples/Sentry.Samples.Maui\" />\n            ),\n            code: <code />,\n          }\n        )}\n      </p>\n    ),\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithMaui({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} {...props} />;\n}\n\nexport default GettingStartedWithMaui;\n"],"names":["steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","_jsx","children","tct","strong","configurations","language","code","CONFIGURE","mauiAppBuilderCode","mauiProgram","VERIFY","t","title","_jsxs","Fragment","automaticInstrumentationLink","ExternalLink","href","customInstrumentationLink","mauiSampleLink","GettingStartedWithMaui","_ref","props","Layout","displayName"],"sourceRoot":""}