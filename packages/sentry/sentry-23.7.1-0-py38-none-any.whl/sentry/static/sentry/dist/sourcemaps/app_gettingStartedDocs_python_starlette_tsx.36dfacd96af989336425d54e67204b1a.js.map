{"version":3,"file":"chunks/app_gettingStartedDocs_python_starlette_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"yiBAOA,MAAMA,GAAeC,EAAAA,EAAAA,IACnB,sEACA,CACEC,MAAMC,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,gCAGhBC,EAAQ,eAAC,IACpBC,GAGDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAA2B,CAC/B,CACEG,KAAMC,EAAAA,GAASC,QACfC,aACEX,EAAAA,EAAAA,IAAA,KAAAY,UACGd,EAAAA,EAAAA,IACC,+FACA,CACEe,eAAeb,EAAAA,EAAAA,IAAA,WACfc,qBAAqBd,EAAAA,EAAAA,IAAA,eAK7Be,eAAgB,CACd,CACEC,SAAU,OACVC,KAAM,mDAIZ,CACET,KAAMC,EAAAA,GAASS,UACfP,aACEX,EAAAA,EAAAA,IAAA,KAAAY,UACGd,EAAAA,EAAAA,IACC,0UACA,CAACmB,MAAMjB,EAAAA,EAAAA,IAAA,eAIbe,eAAgB,CACd,CACEC,SAAU,SACVC,KAAO,uGAOJb,mPAYPe,gBACEnB,EAAAA,EAAAA,IAAA,KAAAY,UACGd,EAAAA,EAAAA,IACC,oLACA,CACEmB,MAAMjB,EAAAA,EAAAA,IAAA,gBAMhB,CACEQ,KAAMC,EAAAA,GAASW,OACfT,aAAaU,EAAAA,EAAAA,GACX,8FAEFN,eAAgB,CACd,CACEC,SAAU,SACVC,KAAO,yOAYPE,gBAAgBE,EAAAA,EAAAA,GACd,iFAKT,EAGM,SAASC,EAA2BC,GAA+B,IAA9B,IAACnB,KAAQoB,GAAmBD,EACtE,OAAOvB,EAAAA,EAAAA,IAACyB,EAAAA,EAAM,CAACtB,MAAOA,EAAM,CAACC,QAAOP,aAAcA,KAAkB2B,GACtE,CAFgBF,EAA2BI,YAAA,8BAI3C,S","sources":["webpack:///./app/gettingStartedDocs/python/starlette.tsx"],"sourcesContent":["import ExternalLink from 'sentry/components/links/externalLink';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nconst introduction = tct(\n  'The Starlette integration adds support for the Starlette Framework.',\n  {\n    link: <ExternalLink href=\"https://www.starlette.io/\" />,\n  }\n);\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: (\n      <p>\n        {tct(\n          'Install [sentrySdkCode:sentry-sdk] from PyPI with the [sentryStarletteCode:starlette] extra:',\n          {\n            sentrySdkCode: <code />,\n            sentryStarletteCode: <code />,\n          }\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'bash',\n        code: \"pip install --upgrade 'sentry-sdk[starlette]'\",\n      },\n    ],\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: (\n      <p>\n        {tct(\n          'To configure the SDK, initialize it before your app has been initialized. The Sentry SDK automatically enables support for Starlette if you have the [code:starlette] Python package installed in your project. There are no configuration options you need to add when initializing the Sentry SDK as everything works out of the box:',\n          {code: <code />}\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'python',\n        code: `\nfrom starlette.applications import Starlette\n\nimport sentry_sdk\n\n\nsentry_sdk.init(\n    dsn=\"${dsn}\",\n\n    # Set traces_sample_rate to 1.0 to capture 100%\n    # of transactions for performance monitoring.\n    # We recommend adjusting this value in production,\n    traces_sample_rate=1.0,\n)\n\napp = Starlette(routes=[...])\n      `,\n      },\n    ],\n    additionalInfo: (\n      <p>\n        {tct(\n          'The above configuration captures both error and performance data. To reduce the volume of performance data captured, change [code:traces_sample_rate] to a value between 0 and 1.',\n          {\n            code: <code />,\n          }\n        )}\n      </p>\n    ),\n  },\n  {\n    type: StepType.VERIFY,\n    description: t(\n      'You can easily verify your Sentry installation by creating a route that triggers an error:'\n    ),\n    configurations: [\n      {\n        language: 'python',\n        code: `\nfrom starlette.applications import Starlette\nfrom starlette.routing import Route\n\n\nasync def trigger_error(request):\n  division_by_zero = 1 / 0\n\napp = Starlette(routes=[\n  Route(\"/sentry-debug\", trigger_error),\n])\n    `,\n        additionalInfo: t(\n          'Visiting this route will trigger an error that will be captured by Sentry.'\n        ),\n      },\n    ],\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithStarlette({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} introduction={introduction} {...props} />;\n}\n\nexport default GettingStartedWithStarlette;\n"],"names":["introduction","tct","link","_jsx","ExternalLink","href","steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","children","sentrySdkCode","sentryStarletteCode","configurations","language","code","CONFIGURE","additionalInfo","VERIFY","t","GettingStartedWithStarlette","_ref","props","Layout","displayName"],"sourceRoot":""}