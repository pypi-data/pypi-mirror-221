{"version":3,"file":"chunks/app_views_settings_projectProguard_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/views/settings/projectProguard/projectProguardRow.tsx","webpack:///./app/views/settings/projectProguard/index.tsx"],"sourcesContent":["import {useMemo} from 'react';\n\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, User} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactElement | null;\n\nfunction checkUserRole(user: User, organization: Organization, role: RoleProps['role']) {\n  if (!user) {\n    return false;\n  }\n\n  if (isActiveSuperuser()) {\n    return true;\n  }\n\n  if (!Array.isArray(organization.orgRoleList)) {\n    return false;\n  }\n\n  const roleIds = organization.orgRoleList.map(r => r.id);\n\n  if (!roleIds.includes(role) || !roleIds.includes(organization.orgRole ?? '')) {\n    return false;\n  }\n\n  const requiredIndex = roleIds.indexOf(role);\n  const currentIndex = roleIds.indexOf(organization.orgRole ?? '');\n  return currentIndex >= requiredIndex;\n}\n\ninterface RoleProps {\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactElement | ChildrenRenderFn;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * Minimum required role\n   */\n  role: string;\n}\n\nfunction Role({role, organization, children}: RoleProps): React.ReactElement | null {\n  const user = ConfigStore.get('user');\n\n  const hasRole = useMemo(\n    () => checkUserRole(user, organization, role),\n    // It seems that this returns a stable reference, but\n    [organization, role, user]\n  );\n\n  if (isRenderFunc<ChildrenRenderFn>(children)) {\n    return children({hasRole});\n  }\n\n  return hasRole ? children : null;\n}\n\nconst withOrganizationRole = withOrganization(Role);\n\nexport {withOrganizationRole as Role};\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Role} from 'sentry/components/acl/role';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport FileSize from 'sentry/components/fileSize';\nimport Link from 'sentry/components/links/link';\nimport TimeSince from 'sentry/components/timeSince';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconClock, IconDelete, IconDownload} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {DebugFile} from 'sentry/types/debugFiles';\n\ntype Props = {\n  downloadRole: string;\n  downloadUrl: string;\n  mapping: DebugFile;\n  onDelete: (id: string) => void;\n  orgSlug: string;\n};\n\nfunction ProjectProguardRow({\n  mapping,\n  onDelete,\n  downloadUrl,\n  downloadRole,\n  orgSlug,\n}: Props) {\n  const {id, debugId, uuid, size, dateCreated} = mapping;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <Fragment>\n      <NameColumn>\n        <Name>{debugId || uuid || `(${t('empty')})`}</Name>\n        <TimeWrapper>\n          <IconClock size=\"sm\" />\n          <TimeSince date={dateCreated} />\n        </TimeWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                title={tct(\n                  'Mappings can only be downloaded by users with organization [downloadRole] role[orHigher]. This can be changed in [settingsLink:Debug Files Access] settings.',\n                  {\n                    downloadRole,\n                    orHigher: downloadRole !== 'owner' ? ` ${t('or higher')}` : '',\n                    settingsLink: <Link to={`/settings/${orgSlug}/#debugFilesRole`} />,\n                  }\n                )}\n                disabled={hasRole}\n                isHoverable\n              >\n                <Button\n                  size=\"sm\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasRole}\n                  href={downloadUrl}\n                  title={hasRole ? t('Download Mapping') : undefined}\n                  aria-label={t('Download Mapping')}\n                />\n              </Tooltip>\n            )}\n          </Role>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete mappings.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this mapping?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"sm\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={hasAccess ? t('Remove Mapping') : undefined}\n                    aria-label={t('Remove Mapping')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n}\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  align-items: center;\n  color: ${p => p.theme.subText};\n  margin-top: ${space(1)};\n`;\n\nexport default ProjectProguardRow;\n","import {Fragment, useCallback, useState} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport PanelTable from 'sentry/components/panels/panelTable';\nimport SearchBar from 'sentry/components/searchBar';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {DebugFile} from 'sentry/types/debugFiles';\nimport {useApiQuery} from 'sentry/utils/queryClient';\nimport useApi from 'sentry/utils/useApi';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport ProjectProguardRow from './projectProguardRow';\n\nexport type ProjectProguardProps = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\nfunction ProjectProguard({organization, location, router, params}: ProjectProguardProps) {\n  const api = useApi();\n  const {projectId} = params;\n  const [loading, setLoading] = useState(false);\n\n  const {\n    data: mappings,\n    isLoading: dataLoading,\n    getResponseHeader,\n    refetch: fetchData,\n  } = useApiQuery<DebugFile[]>(\n    [\n      `/projects/${organization.slug}/${projectId}/files/dsyms/`,\n      {query: {query: location.query.query, file_formats: 'proguard'}},\n    ],\n    {\n      staleTime: 0,\n    }\n  );\n\n  const mappingsPageLinks = getResponseHeader?.('Link');\n\n  const handleSearch = useCallback(\n    (query: string) => {\n      router.push({\n        ...location,\n        query: {...location.query, cursor: undefined, query},\n      });\n    },\n    [location, router]\n  );\n\n  const handleDelete = useCallback(\n    async (id: string) => {\n      setLoading(true);\n      try {\n        await api.requestPromise(\n          `/projects/${\n            organization.slug\n          }/${projectId}/files/dsyms/?id=${encodeURIComponent(id)}`,\n          {\n            method: 'DELETE',\n          }\n        );\n        setLoading(false);\n        addSuccessMessage('Successfully deleted the mapping file');\n        fetchData();\n      } catch {\n        setLoading(false);\n        addErrorMessage('An error occurred while deleting the mapping file');\n      }\n    },\n    [api, fetchData, organization.slug, projectId]\n  );\n\n  const query =\n    typeof location.query.query === 'string' ? location.query.query : undefined;\n\n  const isLoading = loading || dataLoading;\n\n  return (\n    <Fragment>\n      <SettingsPageHeader\n        title={t('ProGuard Mappings')}\n        action={\n          <SearchBar\n            placeholder={t('Filter mappings')}\n            onSearch={handleSearch}\n            query={query}\n            width=\"280px\"\n          />\n        }\n      />\n\n      <TextBlock>\n        {tct(\n          `ProGuard mapping files are used to convert minified classes, methods and field names into a human readable format. To learn more about proguard mapping files, [link: read the docs].`,\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/android/proguard/\" />\n            ),\n          }\n        )}\n      </TextBlock>\n\n      <StyledPanelTable\n        headers={[t('Mapping'), <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>, '']}\n        emptyMessage={\n          query\n            ? t('There are no mappings that match your search.')\n            : t('There are no mappings for this project.')\n        }\n        isEmpty={mappings?.length === 0}\n        isLoading={isLoading}\n      >\n        {!mappings?.length\n          ? null\n          : mappings.map(mapping => {\n              const downloadUrl = `${api.baseUrl}/projects/${\n                organization.slug\n              }/${projectId}/files/dsyms/?id=${encodeURIComponent(mapping.id)}`;\n\n              return (\n                <ProjectProguardRow\n                  mapping={mapping}\n                  downloadUrl={downloadUrl}\n                  onDelete={handleDelete}\n                  downloadRole={organization.debugFilesRole}\n                  key={mapping.id}\n                  orgSlug={organization.slug}\n                />\n              );\n            })}\n      </StyledPanelTable>\n      <Pagination pageLinks={mappingsPageLinks} />\n    </Fragment>\n  );\n}\n\nexport default ProjectProguard;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n"],"names":["withOrganizationRole","withOrganization","_ref","role","organization","children","user","ConfigStore","get","hasRole","useMemo","isActiveSuperuser","Array","isArray","orgRoleList","roleIds","map","r","id","includes","orgRole","requiredIndex","indexOf","checkUserRole","isRenderFunc","ProjectProguardRow","mapping","onDelete","downloadUrl","downloadRole","orgSlug","debugId","uuid","size","dateCreated","handleDeleteClick","_jsxs","Fragment","NameColumn","_jsx","Name","t","TimeWrapper","IconClock","TimeSince","date","SizeColumn","FileSize","bytes","ActionsColumn","ButtonBar","gap","Role","_ref2","Tooltip","title","tct","orHigher","settingsLink","Link","to","disabled","isHoverable","Button","icon","IconDownload","href","undefined","Access","access","_ref3","hasAccess","Confirm","message","onConfirm","IconDelete","displayName","_styled","target","name","styles","space","p","theme","fontSizeMedium","subText","ProjectProguard","location","router","params","api","useApi","projectId","loading","setLoading","useState","data","mappings","isLoading","dataLoading","getResponseHeader","refetch","fetchData","useApiQuery","slug","query","file_formats","staleTime","mappingsPageLinks","handleSearch","useCallback","push","cursor","handleDelete","async","requestPromise","encodeURIComponent","method","addSuccessMessage","addErrorMessage","SettingsPageHeader","action","SearchBar","placeholder","onSearch","width","TextBlock","link","ExternalLink","StyledPanelTable","headers","emptyMessage","isEmpty","length","baseUrl","debugFilesRole","Pagination","pageLinks","PanelTable"],"sourceRoot":""}