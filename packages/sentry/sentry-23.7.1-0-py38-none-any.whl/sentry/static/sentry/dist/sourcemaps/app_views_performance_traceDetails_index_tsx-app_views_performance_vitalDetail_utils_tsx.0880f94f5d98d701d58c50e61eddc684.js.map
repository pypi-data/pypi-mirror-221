{"version":3,"file":"chunks/app_views_performance_traceDetails_index_tsx-app_views_performance_vitalDetail_utils_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/fuzzySearch.tsx","webpack:///./app/utils/performance/quickTrace/traceFullQuery.tsx","webpack:///./app/utils/performance/quickTrace/traceMetaQuery.tsx","webpack:///./app/views/performance/traceDetails/content.tsx","webpack:///./app/views/performance/traceDetails/index.tsx","webpack:///./app/views/performance/vitalDetail/utils.tsx"],"sourcesContent":["import type Fuse from 'fuse.js';\n\n// See http://fusejs.io/ for more information\nconst DEFAULT_FUSE_OPTIONS: Fuse.IFuseOptions<any> = {\n  includeScore: true,\n  includeMatches: true,\n  threshold: 0.4,\n  location: 0,\n  distance: 75,\n  minMatchCharLength: 2,\n};\n\nexport async function createFuzzySearch<\n  T = string,\n  Options extends Fuse.IFuseOptions<T> = Fuse.IFuseOptions<T>\n>(objects: T[], options: Options): Promise<Fuse<T>> {\n  if (!options.keys) {\n    throw new Error('You need to define `options.keys`');\n  }\n\n  const fuseImported = await import('fuse.js');\n  const fuse = {Fuse: fuseImported.default};\n\n  return new fuse.Fuse(objects, {\n    ...DEFAULT_FUSE_OPTIONS,\n    ...options,\n  });\n}\n\n// re-export fuse type to make it easier to use\nexport type {Fuse};\n","import {Fragment} from 'react';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  BaseTraceChildrenProps,\n  FullQuickTrace,\n  TraceFull,\n  TraceFullDetailed,\n  TraceRequestProps,\n} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  getTraceRequestPayload,\n  makeEventView,\n} from 'sentry/utils/performance/quickTrace/utils';\n\ntype AdditionalQueryProps = {\n  detailed?: boolean;\n  eventId?: string;\n};\n\ntype TraceFullQueryChildrenProps<T> = BaseTraceChildrenProps &\n  Omit<FullQuickTrace, 'trace'> & {\n    /**\n     * The `event-trace` endpoint returns a full trace with the parent-child\n     * relationships. It can be flattened into a `QuickTraceEvent` if necessary.\n     */\n    traces: T | null;\n  };\n\ntype QueryProps<T> = Omit<TraceRequestProps, 'eventView'> &\n  AdditionalQueryProps & {\n    children: (props: TraceFullQueryChildrenProps<T>) => React.ReactNode;\n  };\n\nfunction getTraceFullRequestPayload({\n  detailed,\n  eventId,\n  ...props\n}: DiscoverQueryProps & AdditionalQueryProps) {\n  const additionalApiPayload: any = getTraceRequestPayload(props);\n  additionalApiPayload.detailed = detailed ? '1' : '0';\n  if (eventId) {\n    additionalApiPayload.event_id = eventId;\n  }\n  return additionalApiPayload;\n}\n\nfunction EmptyTrace<T>({children}: Pick<QueryProps<T>, 'children'>) {\n  return (\n    <Fragment>\n      {children({\n        isLoading: false,\n        error: null,\n        traces: null,\n        type: 'full',\n      })}\n    </Fragment>\n  );\n}\n\nfunction GenericTraceFullQuery<T>({\n  traceId,\n  start,\n  end,\n  statsPeriod,\n  children,\n  ...props\n}: QueryProps<T>) {\n  if (!traceId) {\n    return <EmptyTrace<T>>{children}</EmptyTrace>;\n  }\n\n  const eventView = makeEventView({start, end, statsPeriod});\n\n  return (\n    <GenericDiscoverQuery<T, AdditionalQueryProps>\n      route={`events-trace/${traceId}`}\n      getRequestPayload={getTraceFullRequestPayload}\n      eventView={eventView}\n      {...props}\n    >\n      {({tableData, ...rest}) =>\n        children({\n          // This is using '||` instead of '??` here because\n          // the client returns a empty string when the response\n          // is 204. And we want the empty string, undefined and\n          // null to be converted to null.\n          traces: tableData || null,\n          type: 'full',\n          ...rest,\n        })\n      }\n    </GenericDiscoverQuery>\n  );\n}\n\nexport function TraceFullQuery(props: Omit<QueryProps<TraceFull[]>, 'detailed'>) {\n  return <GenericTraceFullQuery<TraceFull[]> {...props} detailed={false} />;\n}\n\nexport function TraceFullDetailedQuery(\n  props: Omit<QueryProps<TraceFullDetailed[]>, 'detailed'>\n) {\n  return <GenericTraceFullQuery<TraceFullDetailed[]> {...props} detailed />;\n}\n","import {Fragment} from 'react';\n\nimport GenericDiscoverQuery from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  BaseTraceChildrenProps,\n  TraceMeta,\n  TraceRequestProps,\n} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  getTraceRequestPayload,\n  makeEventView,\n} from 'sentry/utils/performance/quickTrace/utils';\n\nexport type TraceMetaQueryChildrenProps = BaseTraceChildrenProps & {\n  meta: TraceMeta | null;\n};\n\ntype QueryProps = Omit<TraceRequestProps, 'eventView'> & {\n  children: (props: TraceMetaQueryChildrenProps) => React.ReactNode;\n};\n\nfunction TraceMetaQuery({\n  traceId,\n  start,\n  end,\n  statsPeriod,\n  children,\n  ...props\n}: QueryProps) {\n  if (!traceId) {\n    return (\n      <Fragment>\n        {children({\n          isLoading: false,\n          error: null,\n          meta: null,\n        })}\n      </Fragment>\n    );\n  }\n\n  const eventView = makeEventView({start, end, statsPeriod});\n\n  return (\n    <GenericDiscoverQuery<TraceMeta, {}>\n      route={`events-trace-meta/${traceId}`}\n      getRequestPayload={getTraceRequestPayload}\n      eventView={eventView}\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          meta: tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default TraceMetaQuery;\n","import {Component, createRef, Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Alert} from 'sentry/components/alert';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DiscoverButton from 'sentry/components/discoverButton';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport TimeSince from 'sentry/components/timeSince';\nimport {t, tct, tn} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {QueryError} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {getDuration} from 'sentry/utils/formatters';\nimport {createFuzzySearch, Fuse} from 'sentry/utils/fuzzySearch';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {TraceFullDetailed, TraceMeta} from 'sentry/utils/performance/quickTrace/types';\nimport {filterTrace, reduceTrace} from 'sentry/utils/performance/quickTrace/utils';\nimport {VisuallyCompleteWithData} from 'sentry/utils/performanceForSentry';\nimport Breadcrumb from 'sentry/views/performance/breadcrumb';\nimport {MetaData} from 'sentry/views/performance/transactionDetails/styles';\n\nimport {TraceDetailHeader, TraceSearchBar, TraceSearchContainer} from './styles';\nimport TraceNotFound from './traceNotFound';\nimport TraceView from './traceView';\nimport {TraceInfo} from './types';\nimport {getTraceInfo, isRootTransaction} from './utils';\n\ntype IndexedFusedTransaction = {\n  indexed: string[];\n  transaction: TraceFullDetailed;\n};\n\ntype Props = Pick<RouteComponentProps<{traceSlug: string}, {}>, 'params' | 'location'> & {\n  dateSelected: boolean;\n  error: QueryError | null;\n  isLoading: boolean;\n  meta: TraceMeta | null;\n  organization: Organization;\n  traceEventView: EventView;\n  traceSlug: string;\n  traces: TraceFullDetailed[] | null;\n};\n\ntype State = {\n  filteredTransactionIds: Set<string> | undefined;\n  searchQuery: string | undefined;\n};\n\nclass TraceDetailsContent extends Component<Props, State> {\n  state: State = {\n    searchQuery: undefined,\n    filteredTransactionIds: undefined,\n  };\n\n  componentDidMount() {\n    this.initFuse();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.traces !== prevProps.traces) {\n      this.initFuse();\n    }\n  }\n\n  fuse: Fuse<IndexedFusedTransaction> | null = null;\n  traceViewRef = createRef<HTMLDivElement>();\n  virtualScrollbarContainerRef = createRef<HTMLDivElement>();\n\n  async initFuse() {\n    if (defined(this.props.traces) && this.props.traces.length > 0) {\n      const transformed: IndexedFusedTransaction[] = this.props.traces.flatMap(trace =>\n        reduceTrace<IndexedFusedTransaction[]>(\n          trace,\n          (acc, transaction) => {\n            const indexed: string[] = [\n              transaction['transaction.op'],\n              transaction.transaction,\n              transaction.project_slug,\n            ];\n\n            acc.push({\n              transaction,\n              indexed,\n            });\n\n            return acc;\n          },\n          []\n        )\n      );\n\n      this.fuse = await createFuzzySearch(transformed, {\n        keys: ['indexed'],\n        includeMatches: true,\n        threshold: 0.6,\n        location: 0,\n        distance: 100,\n        maxPatternLength: 32,\n      });\n    }\n  }\n\n  renderTraceLoading() {\n    return <LoadingIndicator />;\n  }\n\n  renderTraceRequiresDateRangeSelection() {\n    return <LoadingError message={t('Trace view requires a date range selection.')} />;\n  }\n\n  handleTransactionFilter = (searchQuery: string) => {\n    this.setState({searchQuery: searchQuery || undefined}, this.filterTransactions);\n  };\n\n  filterTransactions = () => {\n    const {traces} = this.props;\n    const {filteredTransactionIds, searchQuery} = this.state;\n\n    if (!searchQuery || traces === null || traces.length <= 0 || !defined(this.fuse)) {\n      if (filteredTransactionIds !== undefined) {\n        this.setState({\n          filteredTransactionIds: undefined,\n        });\n      }\n      return;\n    }\n\n    const fuseMatches = this.fuse\n      .search<IndexedFusedTransaction>(searchQuery)\n      /**\n       * Sometimes, there can be matches that don't include any\n       * indices. These matches are often noise, so exclude them.\n       */\n      .filter(({matches}) => matches?.length)\n      .map(({item}) => item.transaction.event_id);\n\n    /**\n     * Fuzzy search on ids result in seemingly random results. So switch to\n     * doing substring matches on ids to provide more meaningful results.\n     */\n    const idMatches = traces\n      .flatMap(trace =>\n        filterTrace(\n          trace,\n          ({event_id, span_id}) =>\n            event_id.includes(searchQuery) || span_id.includes(searchQuery)\n        )\n      )\n      .map(transaction => transaction.event_id);\n\n    this.setState({\n      filteredTransactionIds: new Set([...fuseMatches, ...idMatches]),\n    });\n  };\n\n  renderSearchBar() {\n    return (\n      <TraceSearchContainer>\n        <TraceSearchBar\n          defaultQuery=\"\"\n          query={this.state.searchQuery || ''}\n          placeholder={t('Search for transactions')}\n          onSearch={this.handleTransactionFilter}\n        />\n      </TraceSearchContainer>\n    );\n  }\n\n  renderTraceHeader(traceInfo: TraceInfo) {\n    const {meta} = this.props;\n    const errors = meta?.errors ?? traceInfo.errors.size;\n    const performanceIssues =\n      meta?.performance_issues ?? traceInfo.performanceIssues.size;\n    return (\n      <TraceDetailHeader>\n        <GuideAnchor target=\"trace_view_guide_breakdown\">\n          <MetaData\n            headingText={t('Event Breakdown')}\n            tooltipText={t(\n              'The number of transactions and issues there are in this trace.'\n            )}\n            bodyText={tct('[transactions]  |  [errors]', {\n              transactions: tn(\n                '%s Transaction',\n                '%s Transactions',\n                meta?.transactions ?? traceInfo.transactions.size\n              ),\n              errors: tn('%s Issue', '%s Issues', errors + performanceIssues),\n            })}\n            subtext={tn(\n              'Across %s project',\n              'Across %s projects',\n              meta?.projects ?? traceInfo.projects.size\n            )}\n          />\n        </GuideAnchor>\n        <MetaData\n          headingText={t('Total Duration')}\n          tooltipText={t('The time elapsed between the start and end of this trace.')}\n          bodyText={getDuration(\n            traceInfo.endTimestamp - traceInfo.startTimestamp,\n            2,\n            true\n          )}\n          subtext={getDynamicText({\n            value: <TimeSince date={(traceInfo.endTimestamp || 0) * 1000} />,\n            fixed: '5 days ago',\n          })}\n        />\n      </TraceDetailHeader>\n    );\n  }\n\n  renderTraceWarnings() {\n    const {traces} = this.props;\n\n    const {roots, orphans} = (traces ?? []).reduce(\n      (counts, trace) => {\n        if (isRootTransaction(trace)) {\n          counts.roots++;\n        } else {\n          counts.orphans++;\n        }\n        return counts;\n      },\n      {roots: 0, orphans: 0}\n    );\n\n    let warning: React.ReactNode = null;\n\n    if (roots === 0 && orphans > 0) {\n      warning = (\n        <Alert type=\"info\" showIcon>\n          <ExternalLink href=\"https://docs.sentry.io/product/performance/trace-view/#orphan-traces-and-broken-subtraces\">\n            {t(\n              'A root transaction is missing. Transactions linked by a dashed line have been orphaned and cannot be directly linked to the root.'\n            )}\n          </ExternalLink>\n        </Alert>\n      );\n    } else if (roots === 1 && orphans > 0) {\n      warning = (\n        <Alert type=\"info\" showIcon>\n          <ExternalLink href=\"https://docs.sentry.io/product/performance/trace-view/#orphan-traces-and-broken-subtraces\">\n            {t(\n              'This trace has broken subtraces. Transactions linked by a dashed line have been orphaned and cannot be directly linked to the root.'\n            )}\n          </ExternalLink>\n        </Alert>\n      );\n    } else if (roots > 1) {\n      warning = (\n        <Alert type=\"info\" showIcon>\n          <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/tracing/trace-view/#multiple-roots\">\n            {t('Multiple root transactions have been found with this trace ID.')}\n          </ExternalLink>\n        </Alert>\n      );\n    }\n\n    return warning;\n  }\n\n  renderContent() {\n    const {\n      dateSelected,\n      isLoading,\n      error,\n      organization,\n      location,\n      traceEventView,\n      traceSlug,\n      traces,\n      meta,\n    } = this.props;\n\n    if (!dateSelected) {\n      return this.renderTraceRequiresDateRangeSelection();\n    }\n    if (isLoading) {\n      return this.renderTraceLoading();\n    }\n    if (error !== null || traces === null || traces.length <= 0) {\n      return (\n        <TraceNotFound\n          meta={meta}\n          traceEventView={traceEventView}\n          traceSlug={traceSlug}\n          location={location}\n          organization={organization}\n        />\n      );\n    }\n    const traceInfo = getTraceInfo(traces);\n\n    return (\n      <Fragment>\n        {this.renderTraceWarnings()}\n        {this.renderTraceHeader(traceInfo)}\n        {this.renderSearchBar()}\n        <Margin>\n          <VisuallyCompleteWithData\n            id=\"PerformanceDetails-TraceView\"\n            hasData={!!traces.length}\n          >\n            <TraceView\n              filteredTransactionIds={this.state.filteredTransactionIds}\n              traceInfo={traceInfo}\n              location={location}\n              organization={organization}\n              traceEventView={traceEventView}\n              traceSlug={traceSlug}\n              traces={traces}\n              meta={meta}\n            />\n          </VisuallyCompleteWithData>\n        </Margin>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const {organization, location, traceEventView, traceSlug} = this.props;\n\n    return (\n      <Fragment>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Breadcrumb\n              organization={organization}\n              location={location}\n              traceSlug={traceSlug}\n            />\n            <Layout.Title data-test-id=\"trace-header\">\n              {t('Trace ID: %s', traceSlug)}\n            </Layout.Title>\n          </Layout.HeaderContent>\n          <Layout.HeaderActions>\n            <ButtonBar gap={1}>\n              <DiscoverButton\n                size=\"sm\"\n                to={traceEventView.getResultsViewUrlTarget(organization.slug)}\n                onClick={() => {\n                  trackAnalytics('performance_views.trace_view.open_in_discover', {\n                    organization,\n                  });\n                }}\n              >\n                {t('Open in Discover')}\n              </DiscoverButton>\n            </ButtonBar>\n          </Layout.HeaderActions>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>{this.renderContent()}</Layout.Main>\n        </Layout.Body>\n      </Fragment>\n    );\n  }\n}\n\nconst Margin = styled('div')`\n  margin-top: ${space(2)};\n`;\n\nexport default TraceDetailsContent;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Client} from 'sentry/api';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {QueryError} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {TraceFullDetailedQuery} from 'sentry/utils/performance/quickTrace/traceFullQuery';\nimport TraceMetaQuery from 'sentry/utils/performance/quickTrace/traceMetaQuery';\nimport {TraceFullDetailed, TraceMeta} from 'sentry/utils/performance/quickTrace/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport TraceDetailsContent from './content';\n\ntype Props = RouteComponentProps<{traceSlug: string}, {}> & {\n  api: Client;\n  organization: Organization;\n};\n\nclass TraceSummary extends Component<Props> {\n  getDocumentTitle(): string {\n    return [t('Trace Details'), t('Performance')].join(' — ');\n  }\n\n  getTraceSlug(): string {\n    const {traceSlug} = this.props.params;\n    return typeof traceSlug === 'string' ? traceSlug.trim() : '';\n  }\n\n  getDateSelection() {\n    const {location} = this.props;\n    const queryParams = normalizeDateTimeParams(location.query, {\n      allowAbsolutePageDatetime: true,\n    });\n    const start = decodeScalar(queryParams.start);\n    const end = decodeScalar(queryParams.end);\n    const statsPeriod = decodeScalar(queryParams.statsPeriod);\n    return {start, end, statsPeriod};\n  }\n\n  getTraceEventView() {\n    const traceSlug = this.getTraceSlug();\n    const {start, end, statsPeriod} = this.getDateSelection();\n\n    return EventView.fromSavedQuery({\n      id: undefined,\n      name: `Events with Trace ID ${traceSlug}`,\n      fields: ['title', 'event.type', 'project', 'timestamp'],\n      orderby: '-timestamp',\n      query: `trace:${traceSlug}`,\n      projects: [ALL_ACCESS_PROJECTS],\n      version: 2,\n      start,\n      end,\n      range: statsPeriod,\n    });\n  }\n\n  renderContent() {\n    const {location, organization, params} = this.props;\n    const traceSlug = this.getTraceSlug();\n    const {start, end, statsPeriod} = this.getDateSelection();\n    const dateSelected = Boolean(statsPeriod || (start && end));\n\n    const content = ({\n      isLoading,\n      error,\n      traces,\n      meta,\n    }: {\n      error: QueryError | null;\n      isLoading: boolean;\n      meta: TraceMeta | null;\n      traces: TraceFullDetailed[] | null;\n    }) => (\n      <TraceDetailsContent\n        location={location}\n        organization={organization}\n        params={params}\n        traceSlug={traceSlug}\n        traceEventView={this.getTraceEventView()}\n        dateSelected={dateSelected}\n        isLoading={isLoading}\n        error={error}\n        traces={traces}\n        meta={meta}\n      />\n    );\n\n    if (!dateSelected) {\n      return content({\n        isLoading: false,\n        error: new QueryError('date selection not specified'),\n        traces: null,\n        meta: null,\n      });\n    }\n\n    return (\n      <TraceFullDetailedQuery\n        location={location}\n        orgSlug={organization.slug}\n        traceId={traceSlug}\n        start={start}\n        end={end}\n        statsPeriod={statsPeriod}\n      >\n        {traceResults => (\n          <TraceMetaQuery\n            location={location}\n            orgSlug={organization.slug}\n            traceId={traceSlug}\n            start={start}\n            end={end}\n            statsPeriod={statsPeriod}\n          >\n            {metaResults =>\n              content({\n                isLoading: traceResults.isLoading || metaResults.isLoading,\n                error: traceResults.error || metaResults.error,\n                traces: traceResults.traces,\n                meta: metaResults.meta,\n              })\n            }\n          </TraceMetaQuery>\n        )}\n      </TraceFullDetailedQuery>\n    );\n  }\n\n  render() {\n    const {organization} = this.props;\n\n    return (\n      <SentryDocumentTitle title={this.getDocumentTitle()} orgSlug={organization.slug}>\n        <Layout.Page>\n          <NoProjectMessage organization={organization}>\n            {this.renderContent()}\n          </NoProjectMessage>\n        </Layout.Page>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default withOrganization(withApi(TraceSummary));\n","import {Theme} from '@emotion/react';\nimport {Location, Query} from 'history';\n\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport {LineChartProps} from 'sentry/components/charts/lineChart';\nimport {getSeriesSelection} from 'sentry/components/charts/utils';\nimport {IconHappy, IconMeh, IconSad} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport {aggregateOutputType, getAggregateAlias} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport {Browser} from 'sentry/utils/performance/vitals/constants';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {Color} from 'sentry/utils/theme';\nimport {AlertType} from 'sentry/views/alerts/wizard/options';\n\nexport function generateVitalDetailRoute({orgSlug}: {orgSlug: string}): string {\n  return `/organizations/${orgSlug}/performance/vitaldetail/`;\n}\n\nexport const webVitalPoor = {\n  [WebVital.FP]: 3000,\n  [WebVital.FCP]: 3000,\n  [WebVital.LCP]: 4000,\n  [WebVital.FID]: 300,\n  [WebVital.CLS]: 0.25,\n};\n\nexport const webVitalMeh = {\n  [WebVital.FP]: 1000,\n  [WebVital.FCP]: 1000,\n  [WebVital.LCP]: 2500,\n  [WebVital.FID]: 100,\n  [WebVital.CLS]: 0.1,\n};\n\nexport enum VitalState {\n  POOR = 'Poor',\n  MEH = 'Meh',\n  GOOD = 'Good',\n}\n\nexport const vitalStateColors: Record<VitalState, Color> = {\n  [VitalState.POOR]: 'red300',\n  [VitalState.MEH]: 'yellow300',\n  [VitalState.GOOD]: 'green300',\n};\n\nexport const vitalStateIcons: Record<VitalState, React.ReactNode> = {\n  [VitalState.POOR]: <IconSad color={vitalStateColors[VitalState.POOR]} />,\n  [VitalState.MEH]: <IconMeh color={vitalStateColors[VitalState.MEH]} />,\n  [VitalState.GOOD]: <IconHappy color={vitalStateColors[VitalState.GOOD]} />,\n};\n\nexport function vitalDetailRouteWithQuery({\n  orgSlug,\n  vitalName,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  vitalName: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateVitalDetailRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      vitalName,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport function vitalNameFromLocation(location: Location): WebVital {\n  const _vitalName = decodeScalar(location.query.vitalName);\n\n  const vitalName = Object.values(WebVital).find(v => v === _vitalName);\n\n  if (vitalName) {\n    return vitalName;\n  }\n  return WebVital.LCP;\n}\n\nexport function getVitalChartTitle(webVital: WebVital): string {\n  if (webVital === WebVital.CLS) {\n    return t('CLS p75');\n  }\n  return t('Duration p75');\n}\n\nexport function getVitalDetailTablePoorStatusFunction(vitalName: WebVital): string {\n  const vitalThreshold = webVitalPoor[vitalName];\n  const statusFunction = `compare_numeric_aggregate(${getAggregateAlias(\n    `p75(${vitalName})`\n  )},greater,${vitalThreshold})`;\n  return statusFunction;\n}\n\nexport function getVitalDetailTableMehStatusFunction(vitalName: WebVital): string {\n  const vitalThreshold = webVitalMeh[vitalName];\n  const statusFunction = `compare_numeric_aggregate(${getAggregateAlias(\n    `p75(${vitalName})`\n  )},greater,${vitalThreshold})`;\n  return statusFunction;\n}\n\nexport const vitalMap: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: t('First Contentful Paint'),\n  [WebVital.CLS]: t('Cumulative Layout Shift'),\n  [WebVital.FID]: t('First Input Delay'),\n  [WebVital.LCP]: t('Largest Contentful Paint'),\n};\n\nexport const vitalChartTitleMap = vitalMap;\n\nexport const vitalDescription: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: t(\n    'First Contentful Paint (FCP) measures the amount of time the first content takes to render in the viewport. Like FP, this could also show up in any form from the document object model (DOM), such as images, SVGs, or text blocks. At the moment, there is support for FCP in the following browsers:'\n  ),\n  [WebVital.CLS]: t(\n    'Cumulative Layout Shift (CLS) is the sum of individual layout shift scores for every unexpected element shift during the rendering process. Imagine navigating to an article and trying to click a link before the page finishes loading. Before your cursor even gets there, the link may have shifted down due to an image rendering. Rather than using duration for this Web Vital, the CLS score represents the degree of disruptive and visually unstable shifts. At the moment, there is support for CLS in the following browsers:'\n  ),\n  [WebVital.FID]: t(\n    'First Input Delay (FID) measures the response time when the user tries to interact with the viewport. Actions maybe include clicking a button, link or other custom Javascript controller. It is key in helping the user determine if a page is usable or not. At the moment, there is support for FID in the following browsers:'\n  ),\n  [WebVital.LCP]: t(\n    'Largest Contentful Paint (LCP) measures the render time for the largest content to appear in the viewport. This may be in any form from the document object model (DOM), such as images, SVGs, or text blocks. It’s the largest pixel area in the viewport, thus most visually defining. LCP helps developers understand how long it takes to see the main content on the page. At the moment, there is support for LCP in the following browsers:'\n  ),\n};\n\nexport const vitalAbbreviations: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: 'FCP',\n  [WebVital.CLS]: 'CLS',\n  [WebVital.FID]: 'FID',\n  [WebVital.LCP]: 'LCP',\n};\n\nexport const vitalAlertTypes: Partial<Record<WebVital, AlertType>> = {\n  [WebVital.FCP]: 'custom',\n  [WebVital.CLS]: 'cls',\n  [WebVital.FID]: 'fid',\n  [WebVital.LCP]: 'lcp',\n};\n\nexport function getMaxOfSeries(series: Series[]) {\n  let max = -Infinity;\n  for (const {data} of series) {\n    for (const point of data) {\n      max = Math.max(max, point.value);\n    }\n  }\n  return max;\n}\n\nexport const vitalSupportedBrowsers: Partial<Record<WebVital, Browser[]>> = {\n  [WebVital.LCP]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FID]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n    Browser.IE,\n  ],\n  [WebVital.CLS]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FP]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FCP]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n  ],\n  [WebVital.TTFB]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n    Browser.IE,\n  ],\n};\n\nexport function getVitalChartDefinitions({\n  theme,\n  location,\n  vital,\n  yAxis,\n}: {\n  location: Location;\n  theme: Theme;\n  vital: string;\n  yAxis: string;\n}) {\n  const utc = decodeScalar(location.query.utc) !== 'false';\n\n  const vitalPoor = webVitalPoor[vital];\n  const vitalMeh = webVitalMeh[vital];\n\n  const legend = {\n    right: 10,\n    top: 0,\n    selected: getSeriesSelection(location),\n  };\n\n  const chartOptions: Omit<LineChartProps, 'series'> = {\n    grid: {\n      left: '5px',\n      right: '10px',\n      top: '35px',\n      bottom: '0px',\n    },\n    seriesOptions: {\n      showSymbol: false,\n    },\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: (value: number, seriesName?: string) =>\n        tooltipFormatter(\n          value,\n          aggregateOutputType(vital === WebVital.CLS ? seriesName : yAxis)\n        ),\n    },\n    yAxis: {\n      min: 0,\n      max: vitalPoor,\n      axisLabel: {\n        color: theme.chartLabel,\n        showMaxLabel: false,\n        // coerces the axis to be time based\n        formatter: (value: number) =>\n          axisLabelFormatter(value, aggregateOutputType(yAxis)),\n      },\n    },\n  };\n\n  const markLines = [\n    {\n      seriesName: 'Thresholds',\n      type: 'line' as const,\n      data: [],\n      markLine: MarkLine({\n        silent: true,\n        lineStyle: {\n          color: theme.red300,\n          type: 'dashed',\n          width: 1.5,\n        },\n        label: {\n          show: true,\n          position: 'insideEndTop',\n          formatter: t('Poor'),\n        },\n        data: [\n          {\n            yAxis: vitalPoor,\n          } as any, // TODO(ts): date on this type is likely incomplete (needs @types/echarts@4.6.2)\n        ],\n      }),\n    },\n    {\n      seriesName: 'Thresholds',\n      type: 'line' as const,\n      data: [],\n      markLine: MarkLine({\n        silent: true,\n        lineStyle: {\n          color: theme.yellow300,\n          type: 'dashed',\n          width: 1.5,\n        },\n        label: {\n          show: true,\n          position: 'insideEndTop',\n          formatter: t('Meh'),\n        },\n        data: [\n          {\n            yAxis: vitalMeh,\n          } as any, // TODO(ts): date on this type is likely incomplete (needs @types/echarts@4.6.2)\n        ],\n      }),\n    },\n  ];\n\n  return {\n    vitalPoor,\n    vitalMeh,\n    legend,\n    chartOptions,\n    markLines,\n    utc,\n  };\n}\n"],"names":["DEFAULT_FUSE_OPTIONS","includeScore","includeMatches","threshold","location","distance","minMatchCharLength","async","createFuzzySearch","objects","options","keys","Error","default","getTraceFullRequestPayload","_ref","detailed","eventId","props","additionalApiPayload","getTraceRequestPayload","event_id","EmptyTrace","_ref2","children","_jsx","Fragment","isLoading","error","traces","type","GenericTraceFullQuery","_ref3","traceId","start","end","statsPeriod","eventView","makeEventView","GenericDiscoverQuery","route","getRequestPayload","_ref4","tableData","rest","TraceFullQuery","TraceFullDetailedQuery","displayName","TraceMetaQuery","meta","TraceDetailsContent","Component","constructor","arguments","_defineProperty","searchQuery","undefined","filteredTransactionIds","createRef","this","setState","filterTransactions","state","length","defined","fuse","fuseMatches","search","filter","matches","map","item","transaction","idMatches","flatMap","trace","filterTrace","span_id","includes","Set","componentDidMount","initFuse","componentDidUpdate","prevProps","transformed","reduceTrace","acc","indexed","project_slug","push","maxPatternLength","renderTraceLoading","LoadingIndicator","renderTraceRequiresDateRangeSelection","LoadingError","message","t","renderSearchBar","TraceSearchContainer","TraceSearchBar","defaultQuery","query","placeholder","onSearch","handleTransactionFilter","renderTraceHeader","traceInfo","errors","size","performanceIssues","performance_issues","_jsxs","TraceDetailHeader","GuideAnchor","target","MetaData","headingText","tooltipText","bodyText","tct","transactions","tn","subtext","projects","getDuration","endTimestamp","startTimestamp","getDynamicText","value","TimeSince","date","fixed","renderTraceWarnings","roots","orphans","reduce","counts","isRootTransaction","warning","Alert","showIcon","ExternalLink","href","renderContent","dateSelected","organization","traceEventView","traceSlug","TraceNotFound","getTraceInfo","Margin","VisuallyCompleteWithData","id","hasData","TraceView","render","Layout","Breadcrumb","ButtonBar","gap","DiscoverButton","to","getResultsViewUrlTarget","slug","onClick","trackAnalytics","fullWidth","_styled","space","TraceSummary","getDocumentTitle","join","getTraceSlug","params","trim","getDateSelection","queryParams","normalizeDateTimeParams","allowAbsolutePageDatetime","decodeScalar","getTraceEventView","EventView","fromSavedQuery","name","fields","orderby","ALL_ACCESS_PROJECTS","version","range","Boolean","content","orgSlug","traceResults","metaResults","QueryError","SentryDocumentTitle","title","NoProjectMessage","withOrganization","withApi","webVitalPoor","WebVital","FP","FCP","LCP","FID","CLS","webVitalMeh","VitalState","vitalStateColors","POOR","MEH","GOOD","vitalStateIcons","IconSad","color","IconMeh","IconHappy","vitalDetailRouteWithQuery","vitalName","projectID","pathname","generateVitalDetailRoute","project","environment","vitalNameFromLocation","_vitalName","Object","values","find","v","getVitalChartTitle","webVital","getVitalDetailTablePoorStatusFunction","vitalThreshold","getAggregateAlias","getVitalDetailTableMehStatusFunction","vitalMap","vitalDescription","vitalAbbreviations","vitalAlertTypes","getMaxOfSeries","series","max","data","point","Math","vitalSupportedBrowsers","Browser","CHROME","EDGE","OPERA","FIREFOX","SAFARI","IE","TTFB","getVitalChartDefinitions","theme","vital","yAxis","utc","vitalPoor","vitalMeh","legend","right","top","selected","getSeriesSelection","chartOptions","grid","left","bottom","seriesOptions","showSymbol","tooltip","trigger","valueFormatter","seriesName","tooltipFormatter","aggregateOutputType","min","axisLabel","chartLabel","showMaxLabel","formatter","axisLabelFormatter","markLines","markLine","MarkLine","silent","lineStyle","red300","width","label","show","position","yellow300"],"sourceRoot":""}