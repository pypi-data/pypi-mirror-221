{"version":3,"file":"chunks/app_views_performance_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/performance/metricsEnhanced/metricsCompatibilityQuery.tsx","webpack:///./app/utils/performance/metricsEnhanced/metricsCompatibilityQuerySums.tsx","webpack:///./app/utils/performance/contexts/metricsCardinality.tsx","webpack:///./app/views/performance/index.tsx"],"sourcesContent":["import omit from 'lodash/omit';\n\nimport EventView from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\n\nexport interface MetricsCompatibilityData {\n  compatible_projects?: number[];\n}\n\ntype QueryProps = Omit<DiscoverQueryProps, 'eventView' | 'api'> & {\n  children: (props: GenericChildrenProps<MetricsCompatibilityData>) => React.ReactNode;\n  eventView: EventView;\n};\n\nfunction getRequestPayload({\n  eventView,\n  location,\n}: Pick<DiscoverQueryProps, 'eventView' | 'location'>) {\n  return omit(eventView.getEventsAPIPayload(location), [\n    'field',\n    'sort',\n    'per_page',\n    'query',\n  ]);\n}\n\nexport default function MetricsCompatibilityQuery({children, ...props}: QueryProps) {\n  return (\n    <GenericDiscoverQuery<MetricsCompatibilityData, {}>\n      route=\"metrics-compatibility-sums\"\n      getRequestPayload={getRequestPayload}\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n","import omit from 'lodash/omit';\n\nimport EventView from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\n\nexport interface MetricsCompatibilitySumData {\n  sum: {\n    metrics?: number;\n    metrics_null?: number;\n    metrics_unparam?: number;\n  };\n}\n\ntype QueryProps = Omit<DiscoverQueryProps, 'eventView' | 'api'> & {\n  children: (props: GenericChildrenProps<MetricsCompatibilitySumData>) => React.ReactNode;\n  eventView: EventView;\n};\n\nfunction getRequestPayload({\n  eventView,\n  location,\n}: Pick<DiscoverQueryProps, 'eventView' | 'location'>) {\n  return omit(eventView.getEventsAPIPayload(location), [\n    'field',\n    'sort',\n    'per_page',\n    'query',\n  ]);\n}\n\nexport default function MetricsCompatibilitySumsQuery({children, ...props}: QueryProps) {\n  return (\n    <GenericDiscoverQuery<MetricsCompatibilitySumData, {}>\n      route=\"metrics-compatibility\"\n      getRequestPayload={getRequestPayload}\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n","import {ComponentProps, Fragment, ReactNode, useEffect} from 'react';\nimport {Location} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport {parsePeriodToHours} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {canUseMetricsData} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport MetricsCompatibilityQuery, {\n  MetricsCompatibilityData,\n} from 'sentry/utils/performance/metricsEnhanced/metricsCompatibilityQuery';\nimport MetricsCompatibilitySumsQuery, {\n  MetricsCompatibilitySumData,\n} from 'sentry/utils/performance/metricsEnhanced/metricsCompatibilityQuerySums';\n\nimport {createDefinedContext} from './utils';\n\nconst UNPARAM_THRESHOLD = 0.01;\nconst NULL_THRESHOLD = 0.01;\n\nexport interface MetricDataSwitcherOutcome {\n  forceTransactionsOnly: boolean;\n  compatibleProjects?: number[];\n  shouldNotifyUnnamedTransactions?: boolean;\n  shouldWarnIncompatibleSDK?: boolean;\n}\nexport interface MetricsCardinalityContext {\n  isLoading: boolean;\n  outcome?: MetricDataSwitcherOutcome;\n}\n\ntype MergedMetricsData = MetricsCompatibilityData & MetricsCompatibilitySumData;\n\nconst [_Provider, _useContext, _Context] =\n  createDefinedContext<MetricsCardinalityContext>({\n    name: 'MetricsCardinalityContext',\n    strict: false,\n  });\n\n/**\n * This provider determines whether the metrics data is storing performance information correctly before we\n * make dozens of requests on pages such as performance landing and dashboards.\n */\nexport function MetricsCardinalityProvider(props: {\n  children: ReactNode;\n  location: Location;\n  organization: Organization;\n  sendOutcomeAnalytics?: boolean;\n}) {\n  const isUsingMetrics = canUseMetricsData(props.organization);\n\n  if (!isUsingMetrics) {\n    return (\n      <_Provider\n        value={{\n          isLoading: false,\n          outcome: {\n            forceTransactionsOnly: true,\n          },\n        }}\n      >\n        {props.children}\n      </_Provider>\n    );\n  }\n\n  const baseDiscoverProps = {\n    location: props.location,\n    orgSlug: props.organization.slug,\n    cursor: '0:0:0',\n  };\n  const eventView = EventView.fromLocation(props.location);\n  eventView.fields = [{field: 'tpm()'}];\n  const _eventView = adjustEventViewTime(eventView);\n\n  return (\n    <Fragment>\n      <MetricsCompatibilityQuery eventView={_eventView} {...baseDiscoverProps}>\n        {compatabilityResult => (\n          <MetricsCompatibilitySumsQuery eventView={_eventView} {...baseDiscoverProps}>\n            {sumsResult => {\n              const isLoading = compatabilityResult.isLoading || sumsResult.isLoading;\n              const outcome =\n                compatabilityResult.isLoading || sumsResult.isLoading\n                  ? undefined\n                  : getMetricsOutcome(\n                      compatabilityResult.tableData && sumsResult.tableData\n                        ? {\n                            ...compatabilityResult.tableData,\n                            ...sumsResult.tableData,\n                          }\n                        : null,\n                      !!compatabilityResult.error && !!sumsResult.error,\n                      props.organization\n                    );\n\n              return (\n                <Provider\n                  sendOutcomeAnalytics={props.sendOutcomeAnalytics}\n                  organization={props.organization}\n                  value={{\n                    isLoading,\n                    outcome,\n                  }}\n                >\n                  {props.children}\n                </Provider>\n              );\n            }}\n          </MetricsCompatibilitySumsQuery>\n        )}\n      </MetricsCompatibilityQuery>\n    </Fragment>\n  );\n}\n\nfunction Provider(\n  props: ComponentProps<typeof _Provider> & {\n    organization: Organization;\n    sendOutcomeAnalytics?: boolean;\n  }\n) {\n  const fallbackFromNull = props.value.outcome?.shouldWarnIncompatibleSDK ?? false;\n  const fallbackFromUnparam =\n    props.value.outcome?.shouldNotifyUnnamedTransactions ?? false;\n  const isOnMetrics = !props.value.outcome?.forceTransactionsOnly;\n  useEffect(() => {\n    if (!props.value.isLoading && props.sendOutcomeAnalytics) {\n      trackAnalytics('performance_views.mep.metrics_outcome', {\n        organization: props.organization,\n        is_on_metrics: isOnMetrics,\n        fallback_from_null: fallbackFromNull,\n        fallback_from_unparam: fallbackFromUnparam,\n      });\n    }\n  }, [\n    props.organization,\n    props.value.isLoading,\n    isOnMetrics,\n    fallbackFromUnparam,\n    fallbackFromNull,\n    props.sendOutcomeAnalytics,\n  ]);\n  return <_Provider {...props}>{props.children}</_Provider>;\n}\n\nexport const MetricsCardinalityConsumer = _Context.Consumer;\n\nexport const useMetricsCardinalityContext = _useContext;\n\n/**\n * Logic for picking sides of metrics vs. transactions along with the associated warnings.\n */\nfunction getMetricsOutcome(\n  dataCounts: MergedMetricsData | null,\n  hasOtherFallbackCondition: boolean,\n  organization: Organization\n) {\n  const fallbackOutcome: MetricDataSwitcherOutcome = {\n    forceTransactionsOnly: true,\n  };\n  const successOutcome: MetricDataSwitcherOutcome = {\n    forceTransactionsOnly: false,\n  };\n  const isOnFallbackThresolds = organization.features.includes(\n    'performance-mep-bannerless-ui'\n  );\n\n  if (!dataCounts) {\n    return fallbackOutcome;\n  }\n  const compatibleProjects = dataCounts.compatible_projects;\n\n  if (hasOtherFallbackCondition) {\n    return fallbackOutcome;\n  }\n\n  if (!dataCounts) {\n    return fallbackOutcome;\n  }\n\n  if (checkNoDataFallback(dataCounts)) {\n    return fallbackOutcome;\n  }\n\n  if (checkIncompatibleData(dataCounts, isOnFallbackThresolds)) {\n    return {\n      shouldWarnIncompatibleSDK: true,\n      forceTransactionsOnly: true,\n      compatibleProjects,\n    };\n  }\n\n  if (checkIfAllOtherData(dataCounts)) {\n    return {\n      shouldNotifyUnnamedTransactions: true,\n      forceTransactionsOnly: true,\n      compatibleProjects,\n    };\n  }\n\n  if (checkIfPartialOtherData(dataCounts, isOnFallbackThresolds)) {\n    return {\n      shouldNotifyUnnamedTransactions: true,\n      compatibleProjects,\n      forceTransactionsOnly: false,\n    };\n  }\n\n  return successOutcome;\n}\n\n/**\n * Fallback if no metrics found.\n */\nfunction checkNoDataFallback(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return !counts.metricsCount;\n}\n\n/**\n * Fallback and warn if incompatible data found (old specific SDKs).\n */\nfunction checkIncompatibleData(\n  dataCounts: MergedMetricsData,\n  isOnFallbackThresolds: boolean\n) {\n  const counts = normalizeCounts(dataCounts);\n  if (isOnFallbackThresolds) {\n    const ratio = counts.nullCount / counts.metricsCount;\n    return ratio > NULL_THRESHOLD;\n  }\n  return counts.nullCount > 0;\n}\n\n/**\n * Fallback and warn about unnamed transactions (specific SDKs).\n */\nfunction checkIfAllOtherData(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return counts.unparamCount >= counts.metricsCount;\n}\n\n/**\n * Show metrics but warn about unnamed transactions.\n */\nfunction checkIfPartialOtherData(\n  dataCounts: MergedMetricsData,\n  isOnFallbackThresolds: boolean\n) {\n  const counts = normalizeCounts(dataCounts);\n  if (isOnFallbackThresolds) {\n    const ratio = counts.unparamCount / counts.metricsCount;\n    return ratio > UNPARAM_THRESHOLD;\n  }\n  return counts.unparamCount > 0;\n}\n\n/**\n * Temporary function, can be removed after API changes.\n */\nfunction normalizeCounts({sum}: MergedMetricsData) {\n  try {\n    const metricsCount = Number(sum.metrics);\n    const unparamCount = Number(sum.metrics_unparam);\n    const nullCount = Number(sum.metrics_null);\n    return {\n      metricsCount,\n      unparamCount,\n      nullCount,\n    };\n  } catch (_) {\n    return {\n      metricsCount: 0,\n      unparamCount: 0,\n      nullCount: 0,\n    };\n  }\n}\n\n/**\n * Performance optimization to limit the amount of rows scanned before showing the landing page.\n */\nfunction adjustEventViewTime(eventView: EventView) {\n  const _eventView = eventView.clone();\n\n  if (!_eventView.start && !_eventView.end) {\n    if (!_eventView.statsPeriod) {\n      _eventView.statsPeriod = '1h';\n      _eventView.start = undefined;\n      _eventView.end = undefined;\n    } else {\n      const periodHours = parsePeriodToHours(_eventView.statsPeriod);\n      if (periodHours > 1) {\n        _eventView.statsPeriod = '1h';\n        _eventView.start = undefined;\n        _eventView.end = undefined;\n      }\n    }\n  }\n  return _eventView;\n}\n","import {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport {Alert} from 'sentry/components/alert';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {MetricsCardinalityProvider} from 'sentry/utils/performance/contexts/metricsCardinality';\nimport {MEPSettingProvider} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {QueryClient, QueryClientProvider} from 'sentry/utils/queryClient';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  children: React.ReactNode;\n  location: Location;\n  organization: Organization;\n};\n\nconst queryClient = new QueryClient();\n\nfunction PerformanceContainer({organization, location, children}: Props) {\n  function renderNoAccess() {\n    return (\n      <Layout.Page withPadding>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </Layout.Page>\n    );\n  }\n\n  return (\n    <Feature\n      hookName=\"feature-disabled:performance-page\"\n      features={['performance-view']}\n      organization={organization}\n      renderDisabled={renderNoAccess}\n    >\n      <NoProjectMessage organization={organization}>\n        <QueryClientProvider client={queryClient}>\n          <MetricsCardinalityProvider location={location} organization={organization}>\n            <MEPSettingProvider>{children}</MEPSettingProvider>\n          </MetricsCardinalityProvider>\n        </QueryClientProvider>\n      </NoProjectMessage>\n    </Feature>\n  );\n}\n\nexport default withOrganization(PerformanceContainer);\n"],"names":["getRequestPayload","_ref","eventView","location","omit","getEventsAPIPayload","MetricsCompatibilityQuery","_ref2","children","props","_jsx","GenericDiscoverQuery","route","_ref3","tableData","rest","MetricsCompatibilitySumsQuery","displayName","UNPARAM_THRESHOLD","NULL_THRESHOLD","_Provider","_useContext","_Context","createDefinedContext","name","strict","MetricsCardinalityProvider","canUseMetricsData","organization","value","isLoading","outcome","forceTransactionsOnly","baseDiscoverProps","orgSlug","slug","cursor","EventView","fromLocation","fields","field","_eventView","clone","start","end","statsPeriod","parsePeriodToHours","undefined","adjustEventViewTime","Fragment","compatabilityResult","sumsResult","dataCounts","hasOtherFallbackCondition","fallbackOutcome","isOnFallbackThresolds","features","includes","compatibleProjects","compatible_projects","normalizeCounts","metricsCount","checkNoDataFallback","counts","nullCount","checkIncompatibleData","shouldWarnIncompatibleSDK","unparamCount","checkIfAllOtherData","shouldNotifyUnnamedTransactions","checkIfPartialOtherData","getMetricsOutcome","error","Provider","sendOutcomeAnalytics","fallbackFromNull","fallbackFromUnparam","isOnMetrics","useEffect","trackAnalytics","is_on_metrics","fallback_from_null","fallback_from_unparam","Consumer","useMetricsCardinalityContext","sum","Number","metrics","metrics_unparam","metrics_null","_","queryClient","QueryClient","PerformanceContainer","Feature","hookName","renderDisabled","Layout","withPadding","Alert","type","t","NoProjectMessage","QueryClientProvider","client","MEPSettingProvider","withOrganization"],"sourceRoot":""}