{"version":3,"file":"chunks/app_actionCreators_onboardingTasks_tsx-app_components_modals_helpSearchModal_tsx-app_data_for-b51c76.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/onboardingTasks.tsx","webpack:///./app/components/hook.tsx","webpack:///./app/utils/parseHtmlMarks.tsx","webpack:///./app/components/search/sources/helpSource.tsx","webpack:///./app/components/helpSearch.tsx","webpack:///./app/components/modals/helpSearchModal.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/utils/demoMode.tsx"],"sourcesContent":["import {Client} from 'sentry/api';\nimport ConfigStore from 'sentry/stores/configStore';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport {OnboardingTask, OnboardingTaskStatus, Organization} from 'sentry/types';\n\ninterface UpdatedTask extends Partial<Pick<OnboardingTask, 'status' | 'data'>> {\n  task: OnboardingTask['task'];\n  /**\n   * Marks completion seen. This differs from the OnboardingTask\n   * completionSeen type as that returns the date completion was seen.\n   */\n  completionSeen?: boolean;\n}\n\n/**\n * Update an onboarding task.\n *\n * If no API client is provided the task will not be updated on the server side\n * and will only update in the organization store.\n */\nexport function updateOnboardingTask(\n  api: Client | null,\n  organization: Organization,\n  updatedTask: UpdatedTask\n) {\n  if (api !== null) {\n    api.requestPromise(`/organizations/${organization.slug}/onboarding-tasks/`, {\n      method: 'POST',\n      data: updatedTask,\n    });\n  }\n\n  const hasExistingTask = organization.onboardingTasks.find(\n    task => task.task === updatedTask.task\n  );\n\n  const user = ConfigStore.get('user');\n  const onboardingTasks = hasExistingTask\n    ? organization.onboardingTasks.map(task =>\n        task.task === updatedTask.task ? {...task, ...updatedTask} : task\n      )\n    : [...organization.onboardingTasks, {...updatedTask, user} as OnboardingTaskStatus];\n\n  OrganizationStore.onUpdate({onboardingTasks});\n}\n","import {Component} from 'react';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {HookName, Hooks} from 'sentry/types/hooks';\n\ntype Props<H extends HookName> = {\n  /**\n   * The name of the hook as listed in hookstore.add(hookName, callback)\n   */\n  name: H;\n  /**\n   * If children are provided as a function to the Hook, the hooks will be\n   * passed down as a render prop.\n   */\n  children?: (opts: {hooks: Array<Hooks[H]>}) => React.ReactNode;\n} & Omit<Parameters<Hooks[H]>[0], 'name'>;\n\ntype HookState<H extends HookName> = {\n  hooks: Array<Hooks[H]>;\n};\n\n/**\n * Instead of accessing the HookStore directly, use this.\n *\n * If the hook slot needs to perform anything w/ the hooks, you can pass a\n * function as a child and you will receive an object with a `hooks` key\n *\n * Example:\n *\n *   <Hook name=\"my-hook\">\n *     {({hooks}) => hooks.map(hook => (\n *       <Wrapper>{hook}</Wrapper>\n *     ))}\n *   </Hook>\n */\nfunction Hook<H extends HookName>({name, ...props}: Props<H>) {\n  class HookComponent extends Component<{}, HookState<H>> {\n    static displayName = `Hook(${name})`;\n\n    state = {\n      hooks: HookStore.get(name).map(cb => cb(props)),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    handleHooks(hookName: HookName, hooks: Array<Hooks[H]>) {\n      // Make sure that the incoming hook update matches this component's hook name\n      if (hookName !== name) {\n        return;\n      }\n\n      this.setState({hooks: hooks.map(cb => cb(props))});\n    }\n\n    unsubscribe = HookStore.listen(\n      (hookName: HookName, hooks: Array<Hooks[H]>) => this.handleHooks(hookName, hooks),\n      undefined\n    );\n\n    render() {\n      const {children} = props;\n\n      if (!this.state.hooks || !this.state.hooks.length) {\n        return null;\n      }\n\n      if (typeof children === 'function') {\n        return children({hooks: this.state.hooks});\n      }\n\n      return this.state.hooks;\n    }\n  }\n\n  return <HookComponent />;\n}\n\nexport default Hook;\n","import type {Fuse} from 'sentry/utils/fuzzySearch';\n\ntype Options = {\n  htmlString: string;\n  key: string;\n  markTags: {\n    highlightPostTag: string;\n    highlightPreTag: string;\n  };\n};\n\n/**\n * Parses the \"marked\" html strings into a {key, value, indices} (mimincing the\n * FuseResultMatch type) object, where the indices are a set of zero indexed\n * [start, end] indices for what should be highlighted.\n *\n * @param key The key of the field, this mimics the Fuse match object\n * @param htmlString The html string to parse\n * @param markTags.highlightPreTag The left tag\n * @param markTags.highlightPostTag The right tag\n */\nexport default function parseHtmlMarks({key, htmlString, markTags}: Options) {\n  const {highlightPreTag, highlightPostTag} = markTags;\n\n  const indices: [number, number][] = [];\n  let value = htmlString;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const openIndex = value.indexOf(highlightPreTag);\n    const openIndexEnd = openIndex + highlightPreTag.length;\n    if (openIndex === -1 || !value.includes(highlightPostTag)) {\n      break;\n    }\n    value = value.slice(0, openIndex) + value.slice(openIndexEnd);\n\n    const closeIndex = value.indexOf(highlightPostTag);\n    const closeIndexEnd = closeIndex + highlightPostTag.length;\n    value = value.slice(0, closeIndex) + value.slice(closeIndexEnd);\n\n    indices.push([openIndex, closeIndex - 1]);\n  }\n\n  return {key, value, indices} as Fuse.FuseResultMatch;\n}\n","import {Component} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport {\n  Result as SearchResult,\n  SentryGlobalSearch,\n  standardSDKSlug,\n} from '@sentry-internal/global-search';\nimport dompurify from 'dompurify';\nimport debounce from 'lodash/debounce';\n\nimport {Organization, Project} from 'sentry/types';\nimport parseHtmlMarks from 'sentry/utils/parseHtmlMarks';\nimport withLatestContext from 'sentry/utils/withLatestContext';\n// eslint-disable-next-line no-restricted-imports\nimport withSentryRouter from 'sentry/utils/withSentryRouter';\n\nimport {ChildProps, Result, ResultItem} from './types';\n\ntype Props = WithRouterProps & {\n  /**\n   * Render function that renders the global search result\n   */\n  children: (props: ChildProps) => React.ReactNode;\n  organization: Organization;\n  /**\n   * Specific platforms to filter results to\n   */\n  platforms: string[];\n  project: Project;\n  /**\n   * The string to search the navigation routes for\n   */\n  query: string;\n};\n\ntype State = {\n  loading: boolean;\n  results: Result[];\n};\n\nconst MARK_TAGS = {\n  highlightPreTag: '<mark>',\n  highlightPostTag: '</mark>',\n};\n\nclass HelpSource extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    results: [],\n  };\n\n  componentDidMount() {\n    if (this.props.query !== undefined) {\n      this.doSearch(this.props.query);\n    }\n  }\n\n  componentDidUpdate(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.doSearch(nextProps.query);\n    }\n  }\n\n  search = new SentryGlobalSearch(['docs', 'help-center', 'develop', 'blog']);\n\n  async unbouncedSearch(query: string) {\n    this.setState({loading: true});\n    const {platforms = []} = this.props;\n\n    const searchResults = await this.search.query(\n      query,\n      {\n        platforms: platforms.map(platform => standardSDKSlug(platform)?.slug!),\n      },\n      {\n        analyticsTags: ['source:dashboard'],\n      }\n    );\n    const results = mapSearchResults(searchResults);\n\n    this.setState({loading: false, results});\n  }\n\n  doSearch = debounce(this.unbouncedSearch, 300);\n\n  render() {\n    return this.props.children({\n      isLoading: this.state.loading,\n      results: this.state.results,\n    });\n  }\n}\n\nfunction mapSearchResults(results: SearchResult[]) {\n  const items: Result[] = [];\n\n  results.forEach(section => {\n    const sectionItems = section.hits.map(hit => {\n      const title = parseHtmlMarks({\n        key: 'title',\n        htmlString: hit.title ?? '',\n        markTags: MARK_TAGS,\n      });\n      const description = parseHtmlMarks({\n        key: 'description',\n        htmlString: hit.text ?? '',\n        markTags: MARK_TAGS,\n      });\n\n      const item: ResultItem = {\n        ...hit,\n        sourceType: 'help',\n        resultType: `help-${hit.site}` as ResultItem['resultType'],\n        title: dompurify.sanitize(hit.title ?? ''),\n        extra: hit.context.context1,\n        description: hit.text ? dompurify.sanitize(hit.text) : undefined,\n        to: hit.url,\n      };\n\n      return {item, matches: [title, description], score: 1, refIndex: 0};\n    });\n\n    // The first element should indicate the section.\n    if (sectionItems.length > 0) {\n      sectionItems[0].item.sectionHeading = section.name;\n      sectionItems[0].item.sectionCount = sectionItems.length;\n\n      items.push(...sectionItems);\n      return;\n    }\n\n    // If we didn't have any results for this section mark it as empty\n    const emptyHeaderItem: ResultItem = {\n      sourceType: 'help',\n      resultType: `help-${section.site}` as ResultItem['resultType'],\n      title: `No results in ${section.name}`,\n      sectionHeading: section.name,\n      empty: true,\n    };\n\n    items.push({item: emptyHeaderItem, score: 1, refIndex: 0});\n  });\n\n  return items;\n}\n\nexport {HelpSource};\nexport default withLatestContext(withSentryRouter(HelpSource));\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Search} from 'sentry/components/search';\nimport SearchResult from 'sentry/components/search/searchResult';\nimport SearchResultWrapper from 'sentry/components/search/searchResultWrapper';\nimport HelpSource from 'sentry/components/search/sources/helpSource';\nimport {IconWindow} from 'sentry/icons';\nimport {t, tn} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ntype ItemRenderer = React.ComponentProps<typeof Search>['renderItem'];\n\nconst renderResult: ItemRenderer = ({item, matches, itemProps, highlighted}) => {\n  const sectionHeading =\n    item.sectionHeading !== undefined ? (\n      <SectionHeading>\n        <IconWindow />\n        {t('From %s', item.sectionHeading)}\n        <Count>{tn('%s result', '%s results', item.sectionCount ?? 0)}</Count>\n      </SectionHeading>\n    ) : null;\n\n  if (item.empty) {\n    return (\n      <Fragment>\n        {sectionHeading}\n        <Empty>{t('No results from %s', item.sectionHeading)}</Empty>\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      {sectionHeading}\n      <SearchResultWrapper {...itemProps} highlighted={highlighted}>\n        <SearchResult highlighted={highlighted} item={item} matches={matches} />\n      </SearchResultWrapper>\n    </Fragment>\n  );\n};\n\ntype Props = Omit<\n  React.ComponentProps<typeof Search>,\n  'sources' | 'minSearch' | 'closeOnSelect' | 'renderItem'\n>;\n\n// TODO(ts): Type based on Search props once that has types\nfunction HelpSearch(props: Props) {\n  return (\n    <Search\n      {...props}\n      sources={[HelpSource]}\n      minSearch={3}\n      closeOnSelect={false}\n      renderItem={renderResult}\n    />\n  );\n}\n\nconst SectionHeading = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr max-content;\n  gap: ${space(1)};\n  align-items: center;\n  background: ${p => p.theme.backgroundSecondary};\n  padding: ${space(1)} ${space(2)};\n\n  &:not(:first-of-type) {\n    border-top: 1px solid ${p => p.theme.innerBorder};\n  }\n`;\n\nconst Count = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n`;\n\nconst Empty = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  border-top: 1px solid ${p => p.theme.innerBorder};\n`;\n\nexport default HelpSearch;\n","import {ClassNames, css, useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport HelpSearch from 'sentry/components/helpSearch';\nimport Hook from 'sentry/components/hook';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = ModalRenderProps & {\n  organization: Organization;\n  placeholder?: string;\n};\n\nfunction HelpSearchModal({\n  Body,\n  closeModal,\n  organization,\n  placeholder = t('Search for documentation, FAQs, blog posts...'),\n  ...props\n}: Props) {\n  const theme = useTheme();\n\n  return (\n    <Body>\n      <ClassNames>\n        {({css: injectedCss}) => (\n          <HelpSearch\n            {...props}\n            entryPoint=\"sidebar_help\"\n            dropdownClassName={injectedCss`\n                width: 100%;\n                border: transparent;\n                border-top-left-radius: 0;\n                border-top-right-radius: 0;\n                position: initial;\n                box-shadow: none;\n                border-top: 1px solid ${theme.border};\n              `}\n            renderInput={({getInputProps}) => (\n              <InputWrapper>\n                <Input autoFocus {...getInputProps({type: 'text', placeholder})} />\n              </InputWrapper>\n            )}\n            resultFooter={\n              <Hook name=\"help-modal:footer\" {...{organization, closeModal}} />\n            }\n          />\n        )}\n      </ClassNames>\n    </Body>\n  );\n}\n\nconst InputWrapper = styled('div')`\n  padding: ${space(0.25)};\n`;\n\nconst Input = styled('input')`\n  width: 100%;\n  padding: ${space(1)};\n  border: none;\n  border-radius: 8px;\n  outline: none;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const modalCss = css`\n  [role='document'] {\n    padding: 0;\n  }\n`;\n\nexport default withOrganization(HelpSearchModal);\n","import {JsonFormObject} from 'sentry/components/forms/types';\nimport {t} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: t('Add Secondary Emails'),\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: t('Additional Email'),\n        placeholder: t('e.g. secondary@example.com'),\n        help: t('Designate an alternative email for this account'),\n        saveOnBlur: false,\n        saveMessage: t('Add this new email address to your account?'),\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import ConfigStore from 'sentry/stores/configStore';\nimport {OnboardingTaskKey} from 'sentry/types';\n\nexport function extraQueryParameter(): URLSearchParams {\n  const extraQueryString = window.SandboxData?.extraQueryString || '';\n  const extraQuery = new URLSearchParams(extraQueryString);\n  return extraQuery;\n}\n\nexport function extraQueryParameterWithEmail(): URLSearchParams {\n  const params = extraQueryParameter();\n  const email = localStorage.getItem('email');\n  if (email) {\n    params.append('email', email);\n  }\n  return params;\n}\n\nexport function urlAttachQueryParams(url: string, params: URLSearchParams): string {\n  const queryString = params.toString();\n  if (queryString) {\n    return url + '?' + queryString;\n  }\n  return url;\n}\n\n// For the Sandbox, we are testing a new walkthrough. This affects a few different components of Sentry including the Onboarding Sidebar, Onboarding Tasks, the Demo End Modal, Demo Sign Up Modal, Guides, and more.\n// Outside of the Sandbox, this should have no effect on other elements of Sentry.\nexport function isDemoWalkthrough(): boolean {\n  return ConfigStore.get('demoMode');\n}\n\n// Function to determine which tour has completed depending on the guide that is being passed in.\nexport function getTourTask(\n  guide: string\n): {task: OnboardingTaskKey; tour: string} | undefined {\n  switch (guide) {\n    case 'sidebar_v2':\n      return {tour: 'tabs', task: OnboardingTaskKey.SIDEBAR_GUIDE};\n    case 'issues_v3':\n      return {tour: 'issues', task: OnboardingTaskKey.ISSUE_GUIDE};\n    case 'release-details_v2':\n      return {tour: 'releases', task: OnboardingTaskKey.RELEASE_GUIDE};\n    case 'transaction_details_v2':\n      return {tour: 'performance', task: OnboardingTaskKey.PERFORMANCE_GUIDE};\n    default:\n      return undefined;\n  }\n}\n"],"names":["updateOnboardingTask","api","organization","updatedTask","requestPromise","slug","method","data","hasExistingTask","onboardingTasks","find","task","user","ConfigStore","get","map","OrganizationStore","onUpdate","Hook","_ref","name","props","HookComponent","Component","constructor","arguments","_defineProperty","hooks","HookStore","cb","listen","hookName","this","handleHooks","undefined","componentWillUnmount","unsubscribe","setState","render","children","state","length","displayName","_jsx","parseHtmlMarks","key","htmlString","markTags","highlightPreTag","highlightPostTag","indices","value","openIndex","indexOf","openIndexEnd","includes","slice","closeIndex","closeIndexEnd","push","MARK_TAGS","HelpSource","loading","results","SentryGlobalSearch","debounce","unbouncedSearch","componentDidMount","query","doSearch","componentDidUpdate","nextProps","async","platforms","items","forEach","section","sectionItems","hits","hit","title","description","text","item","sourceType","resultType","site","dompurify","extra","context","context1","to","url","matches","score","refIndex","sectionHeading","sectionCount","emptyHeaderItem","empty","mapSearchResults","search","platform","standardSDKSlug","analyticsTags","isLoading","withLatestContext","withSentryRouter","renderResult","itemProps","highlighted","_jsxs","SectionHeading","IconWindow","t","Count","tn","Fragment","Empty","SearchResultWrapper","SearchResult","HelpSearch","Search","sources","minSearch","closeOnSelect","renderItem","_styled","target","space","p","theme","backgroundSecondary","innerBorder","fontSizeSmall","gray300","subText","fontSizeMedium","HelpSearchModal","Body","closeModal","placeholder","useTheme","ClassNames","_ref2","css","injectedCss","entryPoint","dropdownClassName","border","renderInput","_ref3","getInputProps","InputWrapper","Input","autoFocus","type","resultFooter","modalCss","styles","withOrganization","route","fields","label","help","saveOnBlur","saveMessage","extraQueryParameter","extraQueryString","window","SandboxData","URLSearchParams","extraQueryParameterWithEmail","params","email","localStorage","getItem","append","urlAttachQueryParams","queryString","toString","isDemoWalkthrough","getTourTask","guide","tour","OnboardingTaskKey","SIDEBAR_GUIDE","ISSUE_GUIDE","RELEASE_GUIDE","PERFORMANCE_GUIDE"],"sourceRoot":""}