{"version":3,"file":"chunks/app_views_settings_account_accountSecurity_sessionHistory_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/account/accountSecurity/sessionHistory/utils.tsx","webpack:///./app/views/settings/account/accountSecurity/sessionHistory/sessionRow.tsx","webpack:///./app/views/settings/account/accountSecurity/sessionHistory/index.tsx"],"sourcesContent":["import {Link as RouterLink} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport * as qs from 'query-string';\n\nimport useRouter from 'sentry/utils/useRouter';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = LinkProps & {\n  /**\n   * Link target. We don't want to expose the ToLocationFunction on this component.\n   */\n  to: LocationDescriptor;\n  /**\n   * The class to apply when the link is 'active'\n   */\n  activeClassName?: string;\n  disabled?: boolean;\n  index?: boolean;\n  /**\n   * Should be should be supplied by the parent component\n   */\n  isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n  query?: string;\n};\n\nfunction ListLink({\n  children,\n  className,\n  isActive,\n  query,\n  to,\n  activeClassName = 'active',\n  index = false,\n  disabled = false,\n  ...props\n}: Props) {\n  const router = useRouter();\n  const queryData = query ? qs.parse(query) : undefined;\n  const targetLocation = typeof to === 'string' ? {pathname: to, query: queryData} : to;\n  const target = normalizeUrl(targetLocation);\n\n  const active = isActive?.(target, index) ?? router.isActive(target, index);\n\n  return (\n    <StyledLi\n      className={classNames({[activeClassName]: active}, className)}\n      disabled={disabled}\n    >\n      <RouterLink {...props} onlyActiveOnIndex={index} to={disabled ? '' : target}>\n        {children}\n      </RouterLink>\n    </StyledLi>\n  );\n}\n\nexport default ListLink;\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {space} from 'sentry/styles/space';\n\nexport const tableLayout = `\n  display: grid;\n  grid-template-columns: auto 140px 140px;\n  gap ${space(1)};\n  align-items: center;\n`;\n","import styled from '@emotion/styled';\n\nimport PanelItem from 'sentry/components/panels/panelItem';\nimport TimeSince from 'sentry/components/timeSince';\nimport {space} from 'sentry/styles/space';\nimport {InternetProtocol} from 'sentry/types';\n\nimport {tableLayout} from './utils';\n\nfunction SessionRow({\n  ipAddress,\n  lastSeen,\n  firstSeen,\n  countryCode,\n  regionCode,\n}: Omit<InternetProtocol, 'id'>) {\n  return (\n    <SessionPanelItem>\n      <IpAndLocation>\n        <IpAddress>{ipAddress}</IpAddress>\n        {countryCode && regionCode && (\n          <CountryCode>{`${countryCode} (${regionCode})`}</CountryCode>\n        )}\n      </IpAndLocation>\n      <div>\n        <StyledTimeSince date={firstSeen} />\n      </div>\n      <div>\n        <StyledTimeSince date={lastSeen} />\n      </div>\n    </SessionPanelItem>\n  );\n}\n\nexport default SessionRow;\n\nconst IpAddress = styled('div')`\n  margin-bottom: ${space(0.5)};\n  font-weight: bold;\n`;\nconst CountryCode = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n\nconst IpAndLocation = styled('div')`\n  flex: 1;\n`;\n\nconst SessionPanelItem = styled(PanelItem)`\n  ${tableLayout};\n`;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport {t} from 'sentry/locale';\nimport {InternetProtocol} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nimport SessionRow from './sessionRow';\nimport {tableLayout} from './utils';\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = {\n  ipList: Array<InternetProtocol> | null;\n} & DeprecatedAsyncView['state'];\n\nclass SessionHistory extends DeprecatedAsyncView<Props, State> {\n  getTitle() {\n    return t('Session History');\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    return [['ipList', '/users/me/ips/']];\n  }\n\n  renderBody() {\n    const {ipList} = this.state;\n\n    if (!ipList) {\n      return null;\n    }\n\n    const {routes, params, location} = this.props;\n    const recreateRouteProps = {routes, params, location};\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Security')}\n          tabs={\n            <NavTabs underlined>\n              <ListLink\n                to={recreateRoute('', {...recreateRouteProps, stepBack: -1})}\n                index\n              >\n                {t('Settings')}\n              </ListLink>\n              <ListLink to={recreateRoute('', recreateRouteProps)}>\n                {t('Session History')}\n              </ListLink>\n            </NavTabs>\n          }\n        />\n\n        <Panel>\n          <SessionPanelHeader>\n            <div>{t('Sessions')}</div>\n            <div>{t('First Seen')}</div>\n            <div>{t('Last Seen')}</div>\n          </SessionPanelHeader>\n\n          <PanelBody>\n            {ipList.map(({id, ...ipObj}) => (\n              <SessionRow key={id} {...ipObj} />\n            ))}\n          </PanelBody>\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n\nexport default SessionHistory;\n\nconst SessionPanelHeader = styled(PanelHeader)`\n  ${tableLayout}\n  justify-content: initial;\n`;\n"],"names":["ListLink","_ref","children","className","isActive","query","to","activeClassName","index","disabled","props","router","useRouter","queryData","qs","undefined","targetLocation","pathname","target","normalizeUrl","active","_jsx","StyledLi","classNames","RouterLink","onlyActiveOnIndex","displayName","_styled","shouldForwardProp","prop","p","theme","getPadding","disablePadding","hasButtons","css","space","lightText","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","SentryDocumentTitle","title","this","renderComponent","tableLayout","SessionRow","ipAddress","lastSeen","firstSeen","countryCode","regionCode","_jsxs","SessionPanelItem","IpAndLocation","IpAddress","CountryCode","StyledTimeSince","date","fontSizeRelativeSmall","TimeSince","name","styles","PanelItem","SessionHistory","t","getEndpoints","renderBody","ipList","state","routes","params","location","recreateRouteProps","Fragment","SettingsPageHeader","tabs","NavTabs","underlined","recreateRoute","stepBack","Panel","SessionPanelHeader","PanelBody","map","id","ipObj","PanelHeader"],"sourceRoot":""}