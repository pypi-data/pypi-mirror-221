{"version":3,"file":"chunks/app_gettingStartedDocs_python_sanic_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"opBAWA,MAAMA,GACJC,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPC,EAAAA,EAAAA,IAAA,KAAAD,UACGE,EAAAA,EAAAA,IACC,4GACA,CACEC,MAAMF,EAAAA,EAAAA,IAACG,EAAAA,EAAY,CAACC,KAAK,4CAI/BP,EAAAA,EAAAA,IAACQ,EAAAA,EAAI,CAACC,OAAO,SAAQP,SAAA,EACnBC,EAAAA,EAAAA,IAACO,EAAAA,EAAQ,CAAAR,SAAC,SACVC,EAAAA,EAAAA,IAACO,EAAAA,EAAQ,CAAAR,SAAC,WACVC,EAAAA,EAAAA,IAACO,EAAAA,EAAQ,CAAAR,SAAC,WACVC,EAAAA,EAAAA,IAACO,EAAAA,EAAQ,CAAAR,SAAC,WACVC,EAAAA,EAAAA,IAACO,EAAAA,EAAQ,CAAAR,UAAES,EAAAA,EAAAA,GAAE,wDAEfR,EAAAA,EAAAA,IAAA,KAAAD,UACGE,EAAAA,EAAAA,IACC,qTACA,CACEQ,QAAQT,EAAAA,EAAAA,IAAA,aACRE,MAAMF,EAAAA,EAAAA,IAACG,EAAAA,EAAY,CAACC,KAAK,wDAI9BI,EAAAA,EAAAA,GAAE,6DAIME,EAAQ,eAAC,IACpBC,GAGDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAA2B,CAC/B,CACEG,KAAMC,EAAAA,GAASC,QACfC,aAAalB,EAAAA,EAAAA,IAAA,KAAAD,UAAIE,EAAAA,EAAAA,IAAI,uCAAwC,CAACkB,MAAMnB,EAAAA,EAAAA,IAAA,eACpEoB,eAAgB,CACd,CACEC,SAAU,OACVF,KAAM,sCAER,CACED,aACElB,EAAAA,EAAAA,IAAA,KAAAD,UACGE,EAAAA,EAAAA,IACC,2EACA,CACEkB,MAAMnB,EAAAA,EAAAA,IAAA,eAKdqB,SAAU,OACVF,KAAM,4CAIZ,CACEJ,KAAMC,EAAAA,GAASM,UACfJ,aAAaV,EAAAA,EAAAA,GACX,2GAEFY,eAAgB,CACd,CACEC,SAAU,SACVF,KAAO,0IAMJR,mSAgBV,EAGM,SAASY,EAAuBC,GAA+B,IAA9B,IAACb,KAAQc,GAAmBD,EAClE,OAAOxB,EAAAA,EAAAA,IAAC0B,EAAAA,EAAM,CAAChB,MAAOA,EAAM,CAACC,QAAOf,aAAcA,KAAkB6B,GACtE,CAFgBF,EAAuBI,YAAA,0BAIvC,S","sources":["webpack:///./app/gettingStartedDocs/python/sanic.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nconst introduction = (\n  <Fragment>\n    <p>\n      {tct(\n        'The Sanic integration adds support for the [link:Sanic Web Framework]. We support the following versions:',\n        {\n          link: <ExternalLink href=\"https://github.com/sanic-org/sanic\" />,\n        }\n      )}\n    </p>\n    <List symbol=\"bullet\">\n      <ListItem>0.8</ListItem>\n      <ListItem>18.12</ListItem>\n      <ListItem>19.12</ListItem>\n      <ListItem>20.12</ListItem>\n      <ListItem>{t('Any version of the form \"x.12\" (LTS versions).')}</ListItem>\n    </List>\n    <p>\n      {tct(\n        '[strong:We do support all versions of Sanic]. However, Sanic versions between LTS releases should be considered Early Adopter. We may not support all the features in these non-LTS versions, since non-LTS versions change quickly and [link:have introduced breaking changes in the past], without prior notice.',\n        {\n          strong: <strong />,\n          link: <ExternalLink href=\"https://github.com/sanic-org/sanic/issues/1532\" />,\n        }\n      )}\n    </p>\n    {t('A Python version of \"3.6\" or greater is also required.')}\n  </Fragment>\n);\n\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: <p>{tct('Install [code:sentry-sdk] from PyPI:', {code: <code />})}</p>,\n    configurations: [\n      {\n        language: 'bash',\n        code: '$ pip install --upgrade sentry-sdk',\n      },\n      {\n        description: (\n          <p>\n            {tct(\n              \"f you're on Python 3.6, you also need the [code:aiocontextvars] package:\",\n              {\n                code: <code />,\n              }\n            )}\n          </p>\n        ),\n        language: 'bash',\n        code: '$ pip install --upgrade aiocontextvars',\n      },\n    ],\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: t(\n      'To configure the SDK, initialize it with the integration before or after your app has been initialized:'\n    ),\n    configurations: [\n      {\n        language: 'python',\n        code: `\nimport sentry_sdk\nfrom sentry_sdk.integrations.sanic import SanicIntegration\nfrom sanic import Sanic\n\nsentry_sdk.init(\n    dsn=\"${dsn}\",\n    integrations=[\n      SanicIntegration(),\n    ],\n\n    # Set traces_sample_rate to 1.0 to capture 100%\n    # of transactions for performance monitoring.\n    # We recommend adjusting this value in production,\n    traces_sample_rate=1.0,\n)\n\napp = Sanic(__name__)\n      `,\n      },\n    ],\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithSanic({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} introduction={introduction} {...props} />;\n}\n\nexport default GettingStartedWithSanic;\n"],"names":["introduction","_jsxs","Fragment","children","_jsx","tct","link","ExternalLink","href","List","symbol","ListItem","t","strong","steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","code","configurations","language","CONFIGURE","GettingStartedWithSanic","_ref","props","Layout","displayName"],"sourceRoot":""}