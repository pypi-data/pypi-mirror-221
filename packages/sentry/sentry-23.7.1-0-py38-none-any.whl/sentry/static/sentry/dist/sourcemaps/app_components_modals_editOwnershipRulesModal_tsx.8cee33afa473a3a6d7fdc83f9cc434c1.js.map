{"version":3,"file":"chunks/app_components_modals_editOwnershipRulesModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"uzBAeO,SAASA,EAAkBC,GAAsD,IAArD,UAACC,KAAcC,GAAoCF,EACpF,MAAMG,EAAgCD,EAAME,aAAaC,SAASC,SAChE,gCAEIC,EAAQC,EAAAA,EAAYC,IAAI,SAASF,OAAS,aAEhD,OACEG,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAC,SAAA,CACNT,GACCO,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPC,EAAAA,EAAAA,IAACC,EAAW,CAAAF,UACTG,EAAAA,EAAAA,IACC,4EACA,CACEC,MACEH,EAAAA,EAAAA,IAACI,EAAAA,EAAY,CAACC,KAAK,6DAK3BR,EAAAA,EAAAA,IAACS,EAAS,CAAAP,SAAA,CAAC,MACNQ,EAAAA,EAAAA,GAAE,sBACLP,EAAAA,EAAAA,IAAA,SAAM,2BACmBN,GACzBM,EAAAA,EAAAA,IAAA,SAAM,oCAC4BN,GAClCM,EAAAA,EAAAA,IAAA,SAAM,oCAC4BN,SAItCG,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPF,EAAAA,EAAAA,IAACW,EAAK,CAAAT,SAAA,EACHQ,EAAAA,EAAAA,GAAE,oBACHP,EAAAA,EAAAA,IAACS,EAAS,CAAAV,SACP,6DAGLF,EAAAA,EAAAA,IAACW,EAAK,CAAAT,SAAA,EACHQ,EAAAA,EAAAA,GAAE,aACHV,EAAAA,EAAAA,IAACY,EAAS,CAAAV,SAAA,CAAC,sDAER,KAAK,uCAEL,KAAK,oDAEL,KAAK,iDAMbX,IACCY,EAAAA,EAAAA,IAACU,EAAAA,EAAU,IACLrB,EACJsB,YAAavB,EAAUwB,YACvBC,YAAazB,EAAU0B,KAAO,GAC9BC,KAAK,uBAKf,CA9DgB7B,EAAkB8B,YAAA,qBAgElC,MAAMR,GAAQS,EAAAA,EAAAA,GAAOC,EAAAA,EAAS,CAAAC,OAAA,aAAhBF,CAAiB,kBACZG,EAAAA,EAAAA,GAAM,GAAE,KAGrBX,GAAYQ,EAAAA,EAAAA,GAAO,MAAK,CAAAE,OAAA,aAAZF,CAAa,CAAAI,KAAA,SAAAC,OAAA,8CAKzBhB,GAAYW,EAAAA,EAAAA,GAAO,MAAK,CAAAE,OAAA,aAAZF,CAAa,kCAElBG,EAAAA,EAAAA,GAAM,GAAE,2BAEVG,GAAKA,EAAEC,MAAMC,SAAO,KAGzBxB,GAAcgB,EAAAA,EAAAA,GAAO,IAAG,CAAAE,OAAA,aAAVF,CAAW,kBACZG,EAAAA,EAAAA,GAAM,GAAE,KCnF3B,SAASM,EAAuBvC,GAAsD,IAArD,KAACwC,EAAI,OAAEC,EAAM,OAAEC,EAAM,WAAEC,KAAezC,GAAaF,EAClF,OACEU,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPC,EAAAA,EAAAA,IAAC4B,EAAM,CAACG,aAAW,EAAAhC,UACjBC,EAAAA,EAAAA,IAAA,MAAAD,UAAKQ,EAAAA,EAAAA,GAAE,6BAETP,EAAAA,EAAAA,IAAC2B,EAAI,CAAA5B,UACHC,EAAAA,EAAAA,IAACd,EAAkB,IAAKG,EAAOwC,OAAQA,EAAQG,SAAUF,QAIjE,CAXSJ,EAAuBV,YAAA,0BAazB,MAAMiB,GAAWC,EAAAA,EAAAA,IAAG,sBACJV,EAAAA,GAAMW,YAAYC,MAAK,wDAQ9C,G,wMC3BA,MAKA,GALkBnB,EAAAA,EAAAA,GAAO,MAAK,CAAAE,OAAA,YAAZF,CAAa,oBAE3BM,GAAMA,EAAEc,SAAW,GAAK,kBAAmBjB,EAAAA,EAAAA,GAAM,IAAG,I","sources":["webpack:///./app/views/settings/project/projectOwnership/editRulesModal.tsx","webpack:///./app/components/modals/editOwnershipRulesModal.tsx","webpack:///./app/views/settings/components/text/textBlock.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {EditOwnershipRulesModalOptions} from 'sentry/actionCreators/modal';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {space} from 'sentry/styles/space';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport OwnerInput from 'sentry/views/settings/project/projectOwnership/ownerInput';\n\ninterface EditOwnershipRulesModalProps extends EditOwnershipRulesModalOptions {\n  onCancel: () => void;\n}\n\nexport function EditOwnershipRules({ownership, ...props}: EditOwnershipRulesModalProps) {\n  const hasStreamlineTargetingFeature = props.organization.features.includes(\n    'streamline-targeting-context'\n  );\n  const email = ConfigStore.get('user')?.email ?? '#team-slug';\n\n  return (\n    <Fragment>\n      {hasStreamlineTargetingFeature ? (\n        <Fragment>\n          <Description>\n            {tct(\n              'Assign issues based on custom rules. To learn more, [docs:read the docs].',\n              {\n                docs: (\n                  <ExternalLink href=\"https://docs.sentry.io/product/issues/issue-owners/\" />\n                ),\n              }\n            )}\n          </Description>\n          <StyledPre>\n            # {t(\"Here's an example\")}\n            <br />\n            path:src/views/checkout {email}\n            <br />\n            url:https://example.com/checkout {email}\n            <br />\n            tags.transaction:/checkout/:page {email}\n          </StyledPre>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Block>\n            {t('Globbing Syntax')}\n            <CodeBlock>\n              {'* matches everything\\n? matches any single character'}\n            </CodeBlock>\n          </Block>\n          <Block>\n            {t('Examples')}\n            <CodeBlock>\n              path:src/example/pipeline/* person@sentry.io #infra\n              {'\\n'}\n              module:com.module.name.example #sdks\n              {'\\n'}\n              url:http://example.com/settings/* #product #infra\n              {'\\n'}\n              tags.sku_class:enterprise #enterprise\n            </CodeBlock>\n          </Block>\n        </Fragment>\n      )}\n      {ownership && (\n        <OwnerInput\n          {...props}\n          dateUpdated={ownership.lastUpdated}\n          initialText={ownership.raw || ''}\n          page=\"project_settings\"\n        />\n      )}\n    </Fragment>\n  );\n}\n\nconst Block = styled(TextBlock)`\n  margin-bottom: ${space(2)};\n`;\n\nconst CodeBlock = styled('pre')`\n  word-break: break-all;\n  white-space: pre-wrap;\n`;\n\nconst StyledPre = styled('pre')`\n  word-break: break-word;\n  padding: ${space(2)};\n  line-height: 1.6;\n  color: ${p => p.theme.subText};\n`;\n\nconst Description = styled('p')`\n  margin-bottom: ${space(1)};\n`;\n","import {Fragment} from 'react';\nimport {css} from '@emotion/react';\n\nimport {\n  EditOwnershipRulesModalOptions,\n  ModalRenderProps,\n} from 'sentry/actionCreators/modal';\nimport {t} from 'sentry/locale';\nimport theme from 'sentry/utils/theme';\nimport {EditOwnershipRules} from 'sentry/views/settings/project/projectOwnership/editRulesModal';\n\ntype Props = ModalRenderProps & EditOwnershipRulesModalOptions;\n\nfunction EditOwnershipRulesModal({Body, Header, onSave, closeModal, ...props}: Props) {\n  return (\n    <Fragment>\n      <Header closeButton>\n        <h4>{t('Edit Ownership Rules')}</h4>\n      </Header>\n      <Body>\n        <EditOwnershipRules {...props} onSave={onSave} onCancel={closeModal} />\n      </Body>\n    </Fragment>\n  );\n}\n\nexport const modalCss = css`\n  @media (min-width: ${theme.breakpoints.small}) {\n    width: 80%;\n  }\n  [role='document'] {\n    overflow: initial;\n  }\n`;\n\nexport default EditOwnershipRulesModal;\n","import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  noMargin?: boolean;\n};\n\nconst TextBlock = styled('div')<Props>`\n  line-height: 1.5;\n  ${p => (p.noMargin ? '' : 'margin-bottom:' + space(3))};\n`;\n\nexport default TextBlock;\n"],"names":["EditOwnershipRules","_ref","ownership","props","hasStreamlineTargetingFeature","organization","features","includes","email","ConfigStore","get","_jsxs","Fragment","children","_jsx","Description","tct","docs","ExternalLink","href","StyledPre","t","Block","CodeBlock","OwnerInput","dateUpdated","lastUpdated","initialText","raw","page","displayName","_styled","TextBlock","target","space","name","styles","p","theme","subText","EditOwnershipRulesModal","Body","Header","onSave","closeModal","closeButton","onCancel","modalCss","css","breakpoints","small","noMargin"],"sourceRoot":""}