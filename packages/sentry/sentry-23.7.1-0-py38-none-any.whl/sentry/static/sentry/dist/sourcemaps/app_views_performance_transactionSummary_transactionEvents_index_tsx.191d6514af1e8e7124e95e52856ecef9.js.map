{"version":3,"file":"chunks/app_views_performance_transactionSummary_transactionEvents_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/performance/histogram/constants.tsx","webpack:///./app/utils/performance/histogram/index.tsx","webpack:///./app/views/performance/transactionSummary/transactionEvents/content.tsx","webpack:///./app/views/performance/transactionSummary/transactionEvents/index.tsx"],"sourcesContent":["import {t} from 'sentry/locale';\nimport {SelectValue} from 'sentry/types';\n\nimport {DataFilter} from './types';\n\nexport const FILTER_OPTIONS: SelectValue<DataFilter>[] = [\n  {label: t('Exclude'), value: 'exclude_outliers'},\n  {label: t('Include'), value: 'all'},\n];\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {SelectValue} from 'sentry/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {FILTER_OPTIONS} from './constants';\nimport {DataFilter} from './types';\n\ntype HistogramChildrenProps = {\n  activeFilter: SelectValue<DataFilter>;\n  filterOptions: typeof FILTER_OPTIONS;\n  handleFilterChange: (option: string) => void;\n  handleResetView: () => void;\n  isZoomed: boolean;\n};\n\ntype Props = {\n  children: (props: HistogramChildrenProps) => React.ReactNode;\n  location: Location;\n  zoomKeys: string[];\n};\n\nclass Histogram extends Component<Props> {\n  isZoomed() {\n    const {location, zoomKeys} = this.props;\n    return zoomKeys.map(key => location.query[key]).some(value => value !== undefined);\n  }\n\n  handleResetView = () => {\n    const {location, zoomKeys} = this.props;\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: removeHistogramQueryStrings(location, zoomKeys),\n    });\n  };\n\n  getActiveFilter() {\n    const {location} = this.props;\n\n    const dataFilter = location.query.dataFilter\n      ? decodeScalar(location.query.dataFilter)\n      : FILTER_OPTIONS[0].value;\n    return FILTER_OPTIONS.find(item => item.value === dataFilter) || FILTER_OPTIONS[0];\n  }\n\n  handleFilterChange = (value: string) => {\n    const {location, zoomKeys} = this.props;\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...removeHistogramQueryStrings(location, zoomKeys),\n        dataFilter: value,\n      },\n    });\n  };\n\n  render() {\n    const childrenProps = {\n      isZoomed: this.isZoomed(),\n      handleResetView: this.handleResetView,\n      activeFilter: this.getActiveFilter(),\n      handleFilterChange: this.handleFilterChange,\n      filterOptions: FILTER_OPTIONS,\n    };\n    return this.props.children(childrenProps);\n  }\n}\n\nexport function removeHistogramQueryStrings(location: Location, zoomKeys: string[]) {\n  const query: Location['query'] = {...location.query, cursor: undefined};\n\n  delete query.dataFilter;\n  // reset all zoom parameters\n  zoomKeys.forEach(key => delete query[key]);\n\n  return query;\n}\n\nexport default Histogram;\n","import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport {Button} from 'sentry/components/button';\nimport {CompactSelect} from 'sentry/components/compactSelect';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {WebVital} from 'sentry/utils/fields';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport projectSupportsReplay from 'sentry/utils/replays/projectSupportsReplay';\nimport {useRoutes} from 'sentry/utils/useRoutes';\nimport {\n  platformToPerformanceType,\n  ProjectPerformanceType,\n} from 'sentry/views/performance/utils';\n\nimport Filter, {filterToSearchConditions, SpanOperationBreakdownFilter} from '../filter';\nimport {SetStateAction} from '../types';\n\nimport EventsTable from './eventsTable';\nimport {EventsDisplayFilterName, getEventsFilterOptions} from './utils';\n\ntype Props = {\n  eventView: EventView;\n  eventsDisplayFilterName: EventsDisplayFilterName;\n  location: Location;\n  onChangeEventsDisplayFilter: (eventsDisplayFilterName: EventsDisplayFilterName) => void;\n  onChangeSpanOperationBreakdownFilter: (newFilter: SpanOperationBreakdownFilter) => void;\n  organization: Organization;\n  projectId: string;\n  projects: Project[];\n  setError: SetStateAction<string | undefined>;\n  spanOperationBreakdownFilter: SpanOperationBreakdownFilter;\n  transactionName: string;\n  percentileValues?: Record<EventsDisplayFilterName, number>;\n  webVital?: WebVital;\n};\n\nexport const TRANSACTIONS_LIST_TITLES: Readonly<string[]> = [\n  t('event id'),\n  t('user'),\n  t('operation duration'),\n  t('total duration'),\n  t('trace id'),\n  t('timestamp'),\n];\n\nfunction EventsContent(props: Props) {\n  const {\n    location,\n    organization,\n    eventView: originalEventView,\n    transactionName,\n    spanOperationBreakdownFilter,\n    webVital,\n    setError,\n    projectId,\n    projects,\n  } = props;\n  const routes = useRoutes();\n  const eventView = originalEventView.clone();\n  const transactionsListTitles = TRANSACTIONS_LIST_TITLES.slice();\n  const project = projects.find(p => p.id === projectId);\n\n  const fields = [...eventView.fields];\n\n  if (webVital) {\n    transactionsListTitles.splice(3, 0, webVital);\n  }\n\n  const spanOperationBreakdownConditions = filterToSearchConditions(\n    spanOperationBreakdownFilter,\n    location\n  );\n\n  if (spanOperationBreakdownConditions) {\n    eventView.query = `${eventView.query} ${spanOperationBreakdownConditions}`.trim();\n    transactionsListTitles.splice(2, 1, t('%s duration', spanOperationBreakdownFilter));\n  }\n\n  const platform = platformToPerformanceType(projects, eventView.project);\n  if (platform === ProjectPerformanceType.BACKEND) {\n    const userIndex = transactionsListTitles.indexOf('user');\n    if (userIndex > 0) {\n      transactionsListTitles.splice(userIndex + 1, 0, 'http.method');\n      fields.splice(userIndex + 1, 0, {field: 'http.method'});\n    }\n  }\n\n  if (\n    organization.features.includes('profiling') &&\n    project &&\n    // only show for projects that already sent a profile\n    // once we have a more compact design we will show this for\n    // projects that support profiling as well\n    project.hasProfiles\n  ) {\n    transactionsListTitles.push(t('profile'));\n    fields.push({field: 'profile.id'});\n  }\n\n  if (\n    organization.features.includes('session-replay') &&\n    project &&\n    projectSupportsReplay(project)\n  ) {\n    transactionsListTitles.push(t('replay'));\n    fields.push({field: 'replayId'});\n  }\n\n  eventView.fields = fields;\n\n  return (\n    <Layout.Main fullWidth>\n      <Search {...props} eventView={eventView} />\n      <EventsTable\n        eventView={eventView}\n        organization={organization}\n        routes={routes}\n        location={location}\n        setError={setError}\n        columnTitles={transactionsListTitles}\n        transactionName={transactionName}\n      />\n    </Layout.Main>\n  );\n}\n\nfunction Search(props: Props) {\n  const {\n    eventView,\n    location,\n    organization,\n    spanOperationBreakdownFilter,\n    onChangeSpanOperationBreakdownFilter,\n    eventsDisplayFilterName,\n    onChangeEventsDisplayFilter,\n    percentileValues,\n  } = props;\n\n  const handleSearch = (query: string) => {\n    const queryParams = normalizeDateTimeParams({\n      ...(location.query || {}),\n      query,\n    });\n\n    // do not propagate pagination when making a new search\n    const searchQueryParams = omit(queryParams, 'cursor');\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: searchQueryParams,\n    });\n  };\n\n  const query = decodeScalar(location.query.query, '');\n\n  const eventsFilterOptions = getEventsFilterOptions(\n    spanOperationBreakdownFilter,\n    percentileValues\n  );\n\n  const handleDiscoverButtonClick = () => {\n    trackAnalytics('performance_views.all_events.open_in_discover', {\n      organization,\n    });\n  };\n\n  return (\n    <FilterActions>\n      <Filter\n        organization={organization}\n        currentFilter={spanOperationBreakdownFilter}\n        onChangeFilter={onChangeSpanOperationBreakdownFilter}\n      />\n      <PageFilterBar condensed>\n        <EnvironmentPageFilter />\n        <DatePageFilter alignDropdown=\"left\" />\n      </PageFilterBar>\n      <StyledSearchBar\n        organization={organization}\n        projectIds={eventView.project}\n        query={query}\n        fields={eventView.fields}\n        onSearch={handleSearch}\n      />\n      <CompactSelect\n        triggerProps={{prefix: t('Percentile')}}\n        value={eventsDisplayFilterName}\n        onChange={opt => onChangeEventsDisplayFilter(opt.value)}\n        options={Object.entries(eventsFilterOptions).map(([name, filter]) => ({\n          value: name as EventsDisplayFilterName,\n          label: filter.label,\n        }))}\n      />\n      <Button\n        to={eventView.getResultsViewUrlTarget(organization.slug)}\n        onClick={handleDiscoverButtonClick}\n      >\n        {t('Open in Discover')}\n      </Button>\n    </FilterActions>\n  );\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(4, min-content);\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: auto auto 1fr auto auto;\n  }\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    order: 1;\n    grid-column: 1/6;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    order: initial;\n    grid-column: auto;\n  }\n`;\n\nexport default EventsContent;\n","import {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  isAggregateField,\n  SPAN_OP_BREAKDOWN_FIELDS,\n  SPAN_OP_RELATIVE_BREAKDOWN_FIELD,\n} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport {removeHistogramQueryStrings} from 'sentry/utils/performance/histogram';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport {\n  decodeFilterFromLocation,\n  filterToLocationQuery,\n  SpanOperationBreakdownFilter,\n} from '../filter';\nimport PageLayout, {ChildProps} from '../pageLayout';\nimport Tab from '../tabs';\nimport {ZOOM_END, ZOOM_START} from '../transactionOverview/latencyChart/utils';\n\nimport EventsContent from './content';\nimport {\n  decodeEventsDisplayFilterFromLocation,\n  EventsDisplayFilterName,\n  filterEventsDisplayToLocationQuery,\n  getEventsFilterOptions,\n  getPercentilesEventView,\n  mapPercentileValues,\n} from './utils';\n\ntype PercentileValues = Record<EventsDisplayFilterName, number>;\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n};\n\nfunction TransactionEvents(props: Props) {\n  const {location, organization, projects} = props;\n\n  return (\n    <PageLayout\n      location={location}\n      organization={organization}\n      projects={projects}\n      tab={Tab.EVENTS}\n      getDocumentTitle={getDocumentTitle}\n      generateEventView={generateEventView}\n      childComponent={EventsContentWrapper}\n    />\n  );\n}\n\nfunction EventsContentWrapper(props: ChildProps) {\n  const {\n    location,\n    organization,\n    eventView,\n    transactionName,\n    setError,\n    projectId,\n    projects,\n  } = props;\n  const eventsDisplayFilterName = decodeEventsDisplayFilterFromLocation(location);\n  const spanOperationBreakdownFilter = decodeFilterFromLocation(location);\n  const webVital = getWebVital(location);\n\n  const percentilesView = getPercentilesEventView(eventView);\n\n  const getFilteredEventView = (percentiles: PercentileValues) => {\n    const filter = getEventsFilterOptions(spanOperationBreakdownFilter, percentiles)[\n      eventsDisplayFilterName\n    ];\n    const filteredEventView = eventView?.clone();\n    if (filteredEventView && filter?.query) {\n      const query = new MutableSearch(filteredEventView.query);\n      filter.query.forEach(item => query.setFilterValues(item[0], [item[1]]));\n      filteredEventView.query = query.formatString();\n    }\n    return filteredEventView;\n  };\n\n  const onChangeSpanOperationBreakdownFilter = (\n    newFilter: SpanOperationBreakdownFilter\n  ) => {\n    trackAnalytics('performance_views.transactionEvents.ops_filter_dropdown.selection', {\n      organization,\n      action: newFilter as string,\n    });\n\n    // Check to see if the current table sort matches the EventsDisplayFilter.\n    // If it does, we can re-sort using the new SpanOperationBreakdownFilter\n    const eventsFilterOptionSort = getEventsFilterOptions(spanOperationBreakdownFilter)[\n      eventsDisplayFilterName\n    ].sort;\n    const currentSort = eventView?.sorts?.[0];\n    let sortQuery = {};\n\n    if (\n      eventsFilterOptionSort?.kind === currentSort?.kind &&\n      eventsFilterOptionSort?.field === currentSort?.field\n    ) {\n      sortQuery = filterEventsDisplayToLocationQuery(eventsDisplayFilterName, newFilter);\n    }\n\n    const nextQuery: Location['query'] = {\n      ...removeHistogramQueryStrings(location, [ZOOM_START, ZOOM_END]),\n      ...filterToLocationQuery(newFilter),\n      ...sortQuery,\n    };\n\n    if (newFilter === SpanOperationBreakdownFilter.NONE) {\n      delete nextQuery.breakdown;\n    }\n    browserHistory.push({\n      pathname: location.pathname,\n      query: nextQuery,\n    });\n  };\n\n  const onChangeEventsDisplayFilter = (newFilterName: EventsDisplayFilterName) => {\n    trackAnalytics(\n      'performance_views.transactionEvents.display_filter_dropdown.selection',\n      {\n        organization,\n        action: newFilterName as string,\n      }\n    );\n\n    const nextQuery: Location['query'] = {\n      ...removeHistogramQueryStrings(location, [ZOOM_START, ZOOM_END]),\n      ...filterEventsDisplayToLocationQuery(newFilterName, spanOperationBreakdownFilter),\n    };\n\n    if (newFilterName === EventsDisplayFilterName.P100) {\n      delete nextQuery.showTransaction;\n    }\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: nextQuery,\n    });\n  };\n\n  return (\n    <DiscoverQuery\n      eventView={percentilesView}\n      orgSlug={organization.slug}\n      location={location}\n      referrer=\"api.performance.transaction-events\"\n    >\n      {({isLoading, tableData}) => {\n        if (isLoading) {\n          return (\n            <Layout.Main fullWidth>\n              <LoadingIndicator />\n            </Layout.Main>\n          );\n        }\n\n        const percentileData = tableData?.data?.[0];\n        const percentiles = mapPercentileValues(percentileData);\n        const filteredEventView = getFilteredEventView(percentiles);\n        return (\n          <EventsContent\n            location={location}\n            organization={organization}\n            eventView={filteredEventView}\n            transactionName={transactionName}\n            spanOperationBreakdownFilter={spanOperationBreakdownFilter}\n            onChangeSpanOperationBreakdownFilter={onChangeSpanOperationBreakdownFilter}\n            eventsDisplayFilterName={eventsDisplayFilterName}\n            onChangeEventsDisplayFilter={onChangeEventsDisplayFilter}\n            percentileValues={percentiles}\n            projectId={projectId}\n            projects={projects}\n            webVital={webVital}\n            setError={setError}\n          />\n        );\n      }}\n    </DiscoverQuery>\n  );\n}\n\nfunction getDocumentTitle(transactionName: string): string {\n  const hasTransactionName =\n    typeof transactionName === 'string' && String(transactionName).trim().length > 0;\n\n  if (hasTransactionName) {\n    return [String(transactionName).trim(), t('Events')].join(' \\u2014 ');\n  }\n\n  return [t('Summary'), t('Events')].join(' \\u2014 ');\n}\n\nfunction getWebVital(location: Location): WebVital | undefined {\n  const webVital = decodeScalar(location.query.webVital, '') as WebVital;\n  if (Object.values(WebVital).includes(webVital)) {\n    return webVital;\n  }\n  return undefined;\n}\n\nfunction generateEventView({\n  location,\n  transactionName,\n}: {\n  location: Location;\n  organization: Organization;\n  transactionName: string;\n}): EventView {\n  const query = decodeScalar(location.query.query, '');\n  const conditions = new MutableSearch(query);\n\n  conditions.setFilterValues('event.type', ['transaction']);\n  conditions.setFilterValues('transaction', [transactionName]);\n\n  Object.keys(conditions.filters).forEach(field => {\n    if (isAggregateField(field)) {\n      conditions.removeFilter(field);\n    }\n  });\n\n  // Default fields for relative span view\n  const fields = [\n    'id',\n    'user.display',\n    SPAN_OP_RELATIVE_BREAKDOWN_FIELD,\n    'transaction.duration',\n    'trace',\n    'timestamp',\n  ];\n  const breakdown = decodeFilterFromLocation(location);\n  if (breakdown !== SpanOperationBreakdownFilter.NONE) {\n    fields.splice(2, 1, `spans.${breakdown}`);\n  } else {\n    fields.push(...SPAN_OP_BREAKDOWN_FIELDS);\n  }\n  const webVital = getWebVital(location);\n  if (webVital) {\n    fields.splice(3, 0, webVital);\n  }\n\n  return EventView.fromNewQueryWithLocation(\n    {\n      id: undefined,\n      version: 2,\n      name: transactionName,\n      fields,\n      query: conditions.formatString(),\n      projects: [],\n      orderby: decodeScalar(location.query.sort, '-timestamp'),\n    },\n    location\n  );\n}\n\nexport default withProjects(withOrganization(TransactionEvents));\n"],"names":["FILTER_OPTIONS","label","t","value","Histogram","Component","constructor","arguments","_defineProperty","location","zoomKeys","this","props","browserHistory","push","pathname","query","removeHistogramQueryStrings","dataFilter","isZoomed","map","key","some","undefined","getActiveFilter","decodeScalar","find","item","render","childrenProps","handleResetView","activeFilter","handleFilterChange","filterOptions","children","cursor","forEach","displayName","TRANSACTIONS_LIST_TITLES","EventsContent","organization","eventView","originalEventView","transactionName","spanOperationBreakdownFilter","webVital","setError","projectId","projects","routes","useRoutes","clone","transactionsListTitles","slice","project","p","id","fields","splice","spanOperationBreakdownConditions","filterToSearchConditions","trim","platformToPerformanceType","ProjectPerformanceType","BACKEND","userIndex","indexOf","field","features","includes","hasProfiles","projectSupportsReplay","_jsxs","Layout","fullWidth","_jsx","Search","EventsTable","columnTitles","onChangeSpanOperationBreakdownFilter","eventsDisplayFilterName","onChangeEventsDisplayFilter","percentileValues","eventsFilterOptions","getEventsFilterOptions","FilterActions","Filter","currentFilter","onChangeFilter","PageFilterBar","condensed","EnvironmentPageFilter","DatePageFilter","alignDropdown","StyledSearchBar","projectIds","onSearch","queryParams","normalizeDateTimeParams","searchQueryParams","omit","CompactSelect","triggerProps","prefix","onChange","opt","options","Object","entries","_ref","name","filter","Button","to","getResultsViewUrlTarget","slug","onClick","handleDiscoverButtonClick","trackAnalytics","_styled","target","space","theme","breakpoints","small","xlarge","SearchBar","TransactionEvents","PageLayout","tab","Tab","EVENTS","getDocumentTitle","generateEventView","childComponent","EventsContentWrapper","decodeEventsDisplayFilterFromLocation","decodeFilterFromLocation","getWebVital","percentilesView","getPercentilesEventView","newFilter","action","eventsFilterOptionSort","sort","currentSort","sorts","sortQuery","kind","filterEventsDisplayToLocationQuery","nextQuery","ZOOM_START","ZOOM_END","filterToLocationQuery","SpanOperationBreakdownFilter","NONE","breakdown","newFilterName","EventsDisplayFilterName","P100","showTransaction","DiscoverQuery","orgSlug","referrer","isLoading","tableData","LoadingIndicator","percentileData","data","percentiles","mapPercentileValues","filteredEventView","MutableSearch","setFilterValues","formatString","getFilteredEventView","String","length","join","values","WebVital","_ref2","conditions","keys","filters","isAggregateField","removeFilter","SPAN_OP_RELATIVE_BREAKDOWN_FIELD","SPAN_OP_BREAKDOWN_FIELDS","EventView","fromNewQueryWithLocation","version","orderby","withProjects","withOrganization"],"sourceRoot":""}