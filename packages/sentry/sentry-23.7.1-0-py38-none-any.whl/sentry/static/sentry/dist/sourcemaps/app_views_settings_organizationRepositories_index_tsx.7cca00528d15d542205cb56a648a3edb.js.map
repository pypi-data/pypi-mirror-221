{"version":3,"file":"chunks/app_views_settings_organizationRepositories_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/organizationRepositories/organizationRepositories.tsx","webpack:///./app/views/settings/organizationRepositories/index.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AlertLink from 'sentry/components/alertLink';\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport RepositoryRow from 'sentry/components/repositoryRow';\nimport {IconCommit} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Repository, RepositoryStatus} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = {\n  itemList: Repository[];\n  onRepositoryChange: (data: {id: string; status: RepositoryStatus}) => void;\n  organization: Organization;\n};\n\nfunction OrganizationRepositories({itemList, onRepositoryChange, organization}: Props) {\n  const api = useApi();\n\n  const hasItemList = itemList && itemList.length > 0;\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('Repositories')} />\n      <AlertLink to={`/settings/${organization.slug}/integrations/`}>\n        {t(\n          'Want to add a repository to start tracking commits? Install or configure your version control integration here.'\n        )}\n      </AlertLink>\n      {!hasItemList && (\n        <div className=\"m-b-2\">\n          <TextBlock>\n            {t(\n              \"Connecting a repository allows Sentry to capture commit data via webhooks. This enables features like suggested assignees and resolving issues via commit message. Once you've connected a repository, you can associate commits with releases via the API.\"\n            )}\n            &nbsp;\n            {tct('See our [link:documentation] for more details.', {\n              link: <ExternalLink href=\"https://docs.sentry.io/learn/releases/\" />,\n            })}\n          </TextBlock>\n        </div>\n      )}\n\n      {hasItemList ? (\n        <Panel>\n          <PanelHeader>{t('Added Repositories')}</PanelHeader>\n          <PanelBody>\n            <div>\n              {itemList.map(repo => (\n                <RepositoryRow\n                  api={api}\n                  key={repo.id}\n                  repository={repo}\n                  showProvider\n                  orgId={organization.slug}\n                  onRepositoryChange={onRepositoryChange}\n                />\n              ))}\n            </div>\n          </PanelBody>\n        </Panel>\n      ) : (\n        <Panel>\n          <EmptyMessage\n            icon={<IconCommit size=\"xl\" />}\n            title={t('Sentry is better with commit data')}\n            description={t(\n              'Adding one or more repositories will enable enhanced releases and the ability to resolve Sentry Issues via git message.'\n            )}\n            action={\n              <Button external href=\"https://docs.sentry.io/learn/releases/\">\n                {t('Learn more')}\n              </Button>\n            }\n          />\n        </Panel>\n      )}\n    </div>\n  );\n}\n\nexport default OrganizationRepositories;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport Pagination from 'sentry/components/pagination';\nimport {t} from 'sentry/locale';\nimport {Organization, Repository} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\n\nimport OrganizationRepositories from './organizationRepositories';\n\ntype Props = RouteComponentProps<{}, {}> & {\n  organization: Organization;\n} & DeprecatedAsyncView['props'];\n\ntype State = DeprecatedAsyncView['state'] & {\n  itemList: Repository[] | null;\n};\n\nclass OrganizationRepositoriesContainer extends DeprecatedAsyncView<Props, State> {\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    return [\n      ['itemList', `/organizations/${organization.slug}/repos/`, {query: {status: ''}}],\n    ];\n  }\n\n  // Callback used by child component to signal state change\n  onRepositoryChange = (data: Pick<Repository, 'id' | 'status'>) => {\n    const itemList = this.state.itemList;\n    itemList?.forEach(item => {\n      if (item.id === data.id) {\n        item.status = data.status;\n      }\n    });\n    this.setState({itemList});\n  };\n\n  getTitle() {\n    const {organization} = this.props;\n    return routeTitleGen(t('Repositories'), organization.slug, false);\n  }\n\n  renderBody() {\n    const {itemList, itemListPageLinks} = this.state;\n\n    return (\n      <Fragment>\n        <OrganizationRepositories\n          {...this.props}\n          itemList={itemList!}\n          onRepositoryChange={this.onRepositoryChange}\n        />\n        {itemListPageLinks && (\n          <Pagination pageLinks={itemListPageLinks} {...this.props} />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationRepositoriesContainer);\n"],"names":["routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","OrganizationRepositories","_ref","itemList","onRepositoryChange","organization","api","useApi","hasItemList","_jsxs","children","_jsx","SettingsPageHeader","title","t","AlertLink","to","slug","className","TextBlock","tct","link","ExternalLink","href","Panel","PanelHeader","PanelBody","map","repo","RepositoryRow","repository","showProvider","orgId","id","EmptyMessage","icon","IconCommit","size","description","action","Button","external","displayName","OrganizationRepositoriesContainer","DeprecatedAsyncView","constructor","_defineProperty","data","this","state","forEach","item","status","setState","getEndpoints","props","query","getTitle","routeTitleGen","renderBody","itemListPageLinks","Fragment","Pagination","pageLinks","withOrganization"],"sourceRoot":""}