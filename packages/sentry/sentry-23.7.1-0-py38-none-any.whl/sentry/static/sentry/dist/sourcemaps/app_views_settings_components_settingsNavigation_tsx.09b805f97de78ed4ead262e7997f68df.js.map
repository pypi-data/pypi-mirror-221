{"version":3,"file":"chunks/app_views_settings_components_settingsNavigation_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/settings/components/settingsNavItem.tsx","webpack:///./app/views/settings/components/settingsNavigationGroup.tsx","webpack:///./app/views/settings/components/settingsNavigation.tsx"],"sourcesContent":["import {Fragment, ReactElement} from 'react';\nimport {Link as RouterLink} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Badge from 'sentry/components/badge';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  label: React.ReactNode;\n  to: React.ComponentProps<RouterLink>['to'];\n  badge?: string | number | null | ReactElement;\n  id?: string;\n  index?: boolean;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\nfunction SettingsNavItem({badge, label, index, id, ...props}: Props) {\n  const LabelHook = HookOrDefault({\n    hookName: 'sidebar:item-label',\n    defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n  });\n\n  let renderedBadge: React.ReactNode;\n\n  if (badge === 'new') {\n    renderedBadge = <FeatureBadge type=\"new\" />;\n  } else if (badge === 'beta') {\n    renderedBadge = <FeatureBadge type=\"beta\" />;\n  } else if (badge === 'warning') {\n    renderedBadge = (\n      <Tooltip title={t('This setting needs review')} position=\"right\">\n        <StyledBadge text={badge} type=\"warning\" />\n      </Tooltip>\n    );\n  } else if (typeof badge === 'string' || typeof badge === 'number') {\n    renderedBadge = <StyledBadge text={badge} />;\n  } else {\n    renderedBadge = badge;\n  }\n\n  return (\n    <StyledNavItem onlyActiveOnIndex={index} activeClassName=\"active\" {...props}>\n      <LabelHook id={id}>{label}</LabelHook>\n      {badge ? renderedBadge : null}\n    </StyledNavItem>\n  );\n}\n\nconst StyledNavItem = styled(RouterLink)`\n  display: block;\n  color: ${p => p.theme.gray300};\n  font-size: 14px;\n  line-height: 30px;\n  position: relative;\n\n  &.active {\n    color: ${p => p.theme.textColor};\n\n    &:before {\n      background: ${p => p.theme.active};\n    }\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.textColor};\n    outline: none;\n  }\n\n  &.focus-visible {\n    outline: none;\n    background: ${p => p.theme.backgroundSecondary};\n    padding-left: 15px;\n    margin-left: -15px;\n    border-radius: 3px;\n\n    &:before {\n      left: -15px;\n    }\n  }\n\n  &:before {\n    position: absolute;\n    content: '';\n    display: block;\n    top: 4px;\n    left: -30px;\n    height: 20px;\n    width: 4px;\n    background: transparent;\n    border-radius: 0 2px 2px 0;\n  }\n`;\n\nconst StyledBadge = styled(Badge)`\n  font-weight: 400;\n  height: auto;\n  line-height: 1;\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  padding: 3px ${space(0.75)};\n  vertical-align: middle;\n`;\n\nexport default SettingsNavItem;\n","import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport SettingsNavItem from 'sentry/views/settings/components/settingsNavItem';\nimport {NavigationGroupProps} from 'sentry/views/settings/types';\n\nfunction SettingsNavigationGroup(props: NavigationGroupProps) {\n  const {organization, project, name, items} = props;\n\n  const navLinks = items.map(({path, title, index, show, badge, id, recordAnalytics}) => {\n    if (typeof show === 'function' && !show(props)) {\n      return null;\n    }\n    if (typeof show !== 'undefined' && !show) {\n      return null;\n    }\n    const badgeResult = typeof badge === 'function' ? badge(props) : null;\n    const to = replaceRouterParams(path, {\n      ...(organization ? {orgId: organization.slug} : {}),\n      ...(project ? {projectId: project.slug} : {}),\n    });\n\n    const handleClick = () => {\n      // only call the analytics event if the URL is changing\n      if (recordAnalytics && to !== window.location.pathname && organization) {\n        trackAnalytics('sidebar.item_clicked', {\n          organization,\n          project_id: project && project.id,\n          sidebar_item_id: id,\n          dest: path,\n        });\n      }\n    };\n\n    return (\n      <SettingsNavItem\n        key={title}\n        to={normalizeUrl(to)}\n        label={title}\n        index={index}\n        badge={badgeResult}\n        id={id}\n        onClick={handleClick}\n      />\n    );\n  });\n\n  if (!navLinks.some(link => link !== null)) {\n    return null;\n  }\n\n  return (\n    <NavSection data-test-id={name}>\n      <SettingsHeading role=\"heading\">{name}</SettingsHeading>\n      {navLinks}\n    </NavSection>\n  );\n}\n\nconst NavSection = styled('div')`\n  margin-bottom: 20px;\n`;\n\nconst SettingsHeading = styled('div')`\n  color: ${p => p.theme.text};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: ${space(0.5)};\n`;\n\nexport default SettingsNavigationGroup;\n","import {cloneElement, Component} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {space} from 'sentry/styles/space';\nimport SettingsNavigationGroup from 'sentry/views/settings/components/settingsNavigationGroup';\nimport {NavigationProps, NavigationSection} from 'sentry/views/settings/types';\n\ntype DefaultProps = {\n  /**\n   * Additional navigation configuration driven by hooks\n   */\n  hookConfigs: NavigationSection[];\n  /**\n   * Additional navigation elements driven from hooks\n   */\n  hooks: React.ReactElement[];\n  /**\n   * How far from the top of the page should the navigation be when stickied.\n   */\n  stickyTop: string;\n};\n\ntype Props = DefaultProps &\n  NavigationProps & {\n    /**\n     * The configuration for this navigation panel\n     */\n    navigationObjects: NavigationSection[];\n  };\n\nclass SettingsNavigation extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    hooks: [],\n    hookConfigs: [],\n    stickyTop: '69px',\n  };\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key]);\n      });\n      scope.setExtra('url', window.location.href);\n      Sentry.captureException(error);\n    });\n  }\n\n  render() {\n    const {navigationObjects, hooks, hookConfigs, stickyTop, ...otherProps} = this.props;\n    const navWithHooks = navigationObjects.concat(hookConfigs);\n\n    return (\n      <PositionStickyWrapper stickyTop={stickyTop}>\n        {navWithHooks.map(config => (\n          <SettingsNavigationGroup key={config.name} {...otherProps} {...config} />\n        ))}\n        {hooks.map((Hook, i) => cloneElement(Hook, {key: `hook-${i}`}))}\n      </PositionStickyWrapper>\n    );\n  }\n}\n\nconst PositionStickyWrapper = styled('div')<{stickyTop: string}>`\n  padding: ${space(4)};\n  padding-right: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    position: sticky;\n    top: ${p => p.stickyTop};\n    overflow: scroll;\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n`;\n\nexport default SettingsNavigation;\n"],"names":["SettingsNavItem","_ref","badge","label","index","id","props","LabelHook","HookOrDefault","hookName","defaultComponent","_ref2","children","_jsx","Fragment","renderedBadge","FeatureBadge","type","Tooltip","title","t","position","StyledBadge","text","_jsxs","StyledNavItem","onlyActiveOnIndex","activeClassName","displayName","_styled","RouterLink","target","p","theme","gray300","textColor","active","backgroundSecondary","Badge","fontSizeExtraSmall","space","SettingsNavigationGroup","organization","project","name","items","navLinks","map","path","show","recordAnalytics","badgeResult","to","replaceRouterParams","orgId","slug","projectId","normalizeUrl","onClick","handleClick","window","location","pathname","trackAnalytics","project_id","sidebar_item_id","dest","some","link","NavSection","SettingsHeading","role","styles","fontSizeSmall","SettingsNavigation","Component","componentDidCatch","error","errorInfo","Sentry","scope","Object","keys","forEach","key","setExtra","href","render","navigationObjects","hooks","hookConfigs","stickyTop","otherProps","this","navWithHooks","concat","PositionStickyWrapper","config","Hook","i","cloneElement","_defineProperty","breakpoints","small"],"sourceRoot":""}