{"version":3,"file":"chunks/app_actionCreators_onboardingTasks_tsx-app_components_modals_commandPalette_tsx-app_data_form-4321c7.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/onboardingTasks.tsx","webpack:///./app/components/modals/commandPalette.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/utils/demoMode.tsx","webpack:///../node_modules/lodash/cloneDeep.js","webpack:///../node_modules/lodash/flattenDepth.js","webpack:///../node_modules/lodash/groupBy.js","webpack:///../node_modules/lodash/isNumber.js","webpack:///../node_modules/lodash/uniqBy.js"],"sourcesContent":["import {Client} from 'sentry/api';\nimport ConfigStore from 'sentry/stores/configStore';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport {OnboardingTask, OnboardingTaskStatus, Organization} from 'sentry/types';\n\ninterface UpdatedTask extends Partial<Pick<OnboardingTask, 'status' | 'data'>> {\n  task: OnboardingTask['task'];\n  /**\n   * Marks completion seen. This differs from the OnboardingTask\n   * completionSeen type as that returns the date completion was seen.\n   */\n  completionSeen?: boolean;\n}\n\n/**\n * Update an onboarding task.\n *\n * If no API client is provided the task will not be updated on the server side\n * and will only update in the organization store.\n */\nexport function updateOnboardingTask(\n  api: Client | null,\n  organization: Organization,\n  updatedTask: UpdatedTask\n) {\n  if (api !== null) {\n    api.requestPromise(`/organizations/${organization.slug}/onboarding-tasks/`, {\n      method: 'POST',\n      data: updatedTask,\n    });\n  }\n\n  const hasExistingTask = organization.onboardingTasks.find(\n    task => task.task === updatedTask.task\n  );\n\n  const user = ConfigStore.get('user');\n  const onboardingTasks = hasExistingTask\n    ? organization.onboardingTasks.map(task =>\n        task.task === updatedTask.task ? {...task, ...updatedTask} : task\n      )\n    : [...organization.onboardingTasks, {...updatedTask, user} as OnboardingTaskStatus];\n\n  OrganizationStore.onUpdate({onboardingTasks});\n}\n","import {useEffect} from 'react';\nimport {ClassNames, css, useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Input from 'sentry/components/input';\nimport {Search} from 'sentry/components/search';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {trackAnalytics} from 'sentry/utils/analytics';\n\nfunction CommandPalette({Body}: ModalRenderProps) {\n  const theme = useTheme();\n\n  useEffect(\n    () =>\n      void trackAnalytics('omnisearch.open', {\n        organization: null,\n      }),\n    []\n  );\n\n  return (\n    <Body>\n      <ClassNames>\n        {({css: injectedCss}) => (\n          <Search\n            entryPoint=\"command_palette\"\n            minSearch={1}\n            maxResults={10}\n            dropdownClassName={injectedCss`\n                width: 100%;\n                border: transparent;\n                border-top-left-radius: 0;\n                border-top-right-radius: 0;\n                position: initial;\n                box-shadow: none;\n                border-top: 1px solid ${theme.border};\n              `}\n            renderInput={({getInputProps}) => (\n              <InputWrapper>\n                <StyledInput\n                  autoFocus\n                  {...getInputProps({\n                    type: 'text',\n                    placeholder: t('Search for projects, teams, settings, etc...'),\n                  })}\n                />\n              </InputWrapper>\n            )}\n          />\n        )}\n      </ClassNames>\n    </Body>\n  );\n}\n\nexport default CommandPalette;\n\nexport const modalCss = css`\n  [role='document'] {\n    padding: 0;\n  }\n`;\n\nconst InputWrapper = styled('div')`\n  padding: ${space(0.25)};\n`;\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  padding: ${space(1)};\n  border-radius: ${p => p.theme.modalBorderRadius};\n\n  outline: none;\n  border: none;\n  box-shadow: none;\n\n  :focus,\n  :active,\n  :hover {\n    outline: none;\n    border: none;\n    box-shadow: none;\n  }\n`;\n","import {JsonFormObject} from 'sentry/components/forms/types';\nimport {t} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: t('Add Secondary Emails'),\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: t('Additional Email'),\n        placeholder: t('e.g. secondary@example.com'),\n        help: t('Designate an alternative email for this account'),\n        saveOnBlur: false,\n        saveMessage: t('Add this new email address to your account?'),\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import ConfigStore from 'sentry/stores/configStore';\nimport {OnboardingTaskKey} from 'sentry/types';\n\nexport function extraQueryParameter(): URLSearchParams {\n  const extraQueryString = window.SandboxData?.extraQueryString || '';\n  const extraQuery = new URLSearchParams(extraQueryString);\n  return extraQuery;\n}\n\nexport function extraQueryParameterWithEmail(): URLSearchParams {\n  const params = extraQueryParameter();\n  const email = localStorage.getItem('email');\n  if (email) {\n    params.append('email', email);\n  }\n  return params;\n}\n\nexport function urlAttachQueryParams(url: string, params: URLSearchParams): string {\n  const queryString = params.toString();\n  if (queryString) {\n    return url + '?' + queryString;\n  }\n  return url;\n}\n\n// For the Sandbox, we are testing a new walkthrough. This affects a few different components of Sentry including the Onboarding Sidebar, Onboarding Tasks, the Demo End Modal, Demo Sign Up Modal, Guides, and more.\n// Outside of the Sandbox, this should have no effect on other elements of Sentry.\nexport function isDemoWalkthrough(): boolean {\n  return ConfigStore.get('demoMode');\n}\n\n// Function to determine which tour has completed depending on the guide that is being passed in.\nexport function getTourTask(\n  guide: string\n): {task: OnboardingTaskKey; tour: string} | undefined {\n  switch (guide) {\n    case 'sidebar_v2':\n      return {tour: 'tabs', task: OnboardingTaskKey.SIDEBAR_GUIDE};\n    case 'issues_v3':\n      return {tour: 'issues', task: OnboardingTaskKey.ISSUE_GUIDE};\n    case 'release-details_v2':\n      return {tour: 'releases', task: OnboardingTaskKey.RELEASE_GUIDE};\n    case 'transaction_details_v2':\n      return {tour: 'performance', task: OnboardingTaskKey.PERFORMANCE_GUIDE};\n    default:\n      return undefined;\n  }\n}\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var baseFlatten = require('./_baseFlatten'),\n    toInteger = require('./toInteger');\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nmodule.exports = flattenDepth;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"names":["updateOnboardingTask","api","organization","updatedTask","requestPromise","slug","method","data","hasExistingTask","onboardingTasks","find","task","user","ConfigStore","get","map","OrganizationStore","onUpdate","CommandPalette","_ref","Body","theme","useTheme","useEffect","trackAnalytics","_jsx","children","ClassNames","_ref2","css","injectedCss","Search","entryPoint","minSearch","maxResults","dropdownClassName","border","renderInput","_ref3","getInputProps","InputWrapper","StyledInput","autoFocus","type","placeholder","t","displayName","modalCss","name","styles","_styled","target","space","Input","p","modalBorderRadius","route","title","fields","label","help","saveOnBlur","saveMessage","extraQueryParameter","extraQueryString","window","SandboxData","URLSearchParams","extraQueryParameterWithEmail","params","email","localStorage","getItem","append","urlAttachQueryParams","url","queryString","toString","isDemoWalkthrough","getTourTask","guide","tour","OnboardingTaskKey","SIDEBAR_GUIDE","ISSUE_GUIDE","RELEASE_GUIDE","PERFORMANCE_GUIDE","baseClone","module","exports","value","CLONE_DEEP_FLAG","baseFlatten","toInteger","array","depth","length","undefined","baseAssignValue","createAggregator","hasOwnProperty","Object","prototype","groupBy","result","key","call","push","baseGetTag","isObjectLike","baseIteratee","baseUniq","iteratee"],"sourceRoot":""}