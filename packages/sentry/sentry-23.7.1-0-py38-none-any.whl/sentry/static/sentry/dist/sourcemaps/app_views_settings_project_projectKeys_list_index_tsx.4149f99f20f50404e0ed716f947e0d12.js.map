{"version":3,"file":"chunks/app_views_settings_project_projectKeys_list_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectKeys/list/loaderScript.tsx","webpack:///./app/views/settings/project/projectKeys/list/keyRow.tsx","webpack:///./app/views/settings/project/projectKeys/list/index.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"sourcesContent":["import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Project, Scope, Team} from 'sentry/types';\n\ninterface Props extends React.ComponentPropsWithoutRef<typeof Alert> {\n  access?: Scope[];\n  project?: Project | null | undefined;\n  team?: Team | null | undefined;\n}\n\nexport const permissionAlertText = t(\n  'These settings can only be edited by users with the organization-level owner, manager, or team-level admin roles.'\n);\n\nfunction PermissionAlert({access = ['project:write'], project, team, ...props}: Props) {\n  return (\n    <Access access={access} project={project} team={team}>\n      {({hasAccess}) =>\n        !hasAccess && (\n          <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n            {permissionAlertText}\n          </Alert>\n        )\n      }\n    </Access>\n  );\n}\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport FieldHelp from 'sentry/components/forms/fieldGroup/fieldHelp';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  projectKey: ProjectKey;\n} & Pick<RouteComponentProps<{}, {}>, 'routes' | 'location' | 'params'>;\n\nexport function LoaderScript({projectKey, routes, params, location}: Props) {\n  const loaderLink = getDynamicText({\n    value: projectKey.dsn.cdn,\n    fixed: '__JS_SDK_LOADER_URL__',\n  });\n\n  const editUrl = recreateRoute(`${projectKey.id}/`, {routes, params, location});\n\n  return (\n    <Fragment>\n      <FieldGroup\n        label={t('Loader Script')}\n        help={tct(\n          'Copy this script into your website to setup your JavaScript SDK without any additional configuration. [link]',\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/install/lazy-load-sentry/\">\n                {t(' What does the script provide?')}\n              </ExternalLink>\n            ),\n          }\n        )}\n        inline={false}\n        flexibleControlStateSize\n      >\n        <TextCopyInput aria-label={t('Loader Script')}>\n          {`<script src='${loaderLink}' crossorigin=\"anonymous\"></script>`}\n        </TextCopyInput>\n\n        <HelpFooter>\n          {tct(\n            'You can [configureLink:configure] the Loader Script to enable/disable Performance, Replay, and more.',\n            {\n              configureLink: <Link to={editUrl} />,\n            }\n          )}\n        </HelpFooter>\n      </FieldGroup>\n    </Fragment>\n  );\n}\n\nconst HelpFooter = styled(FieldHelp)`\n  margin-top: ${space(1)};\n`;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport ClippedBox from 'sentry/components/clippedBox';\nimport Confirm from 'sentry/components/confirm';\nimport Link from 'sentry/components/links/link';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport {LoaderScript} from 'sentry/views/settings/project/projectKeys/list/loaderScript';\nimport ProjectKeyCredentials from 'sentry/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  hasWriteAccess: boolean;\n  onRemove: (data: ProjectKey) => void;\n  onToggle: (isActive: boolean, data: ProjectKey) => void;\n  orgId: string;\n  project: Project;\n  projectId: string;\n} & Pick<RouteComponentProps<{}, {}>, 'routes' | 'location' | 'params'>;\n\nfunction KeyRow({\n  data,\n  onRemove,\n  onToggle,\n  hasWriteAccess,\n  routes,\n  location,\n  params,\n  project,\n}: Props) {\n  const handleEnable = () => onToggle(true, data);\n  const handleDisable = () => onToggle(false, data);\n\n  const editUrl = recreateRoute(`${data.id}/`, {routes, params, location});\n  const platform = project.platform || 'other';\n  const isBrowserJavaScript = platform === 'javascript';\n  const isJsPlatform = platform.startsWith('javascript');\n\n  return (\n    <Panel>\n      <PanelHeader hasButtons>\n        <Title disabled={!data.isActive}>\n          <PanelHeaderLink to={editUrl}>{data.label}</PanelHeaderLink>\n          {!data.isActive && (\n            <small>\n              {' \\u2014  '}\n              {t('Disabled')}\n            </small>\n          )}\n        </Title>\n        <Controls>\n          <Button to={editUrl} size=\"sm\">\n            {t('Configure')}\n          </Button>\n          <Confirm\n            disabled={!hasWriteAccess}\n            onConfirm={data.isActive ? handleDisable : handleEnable}\n            confirmText={data.isActive ? t('Disable Key') : t('Enable Key')}\n            message={\n              data.isActive\n                ? t('Are you sure you want to disable this key?')\n                : t('Are you sure you want to enable this key?')\n            }\n          >\n            <Button size=\"sm\">{data.isActive ? t('Disable') : t('Enable')}</Button>\n          </Confirm>\n          <Confirm\n            disabled={!hasWriteAccess}\n            priority=\"danger\"\n            onConfirm={() => onRemove(data)}\n            confirmText={t('Remove Key')}\n            message={t(\n              'Are you sure you want to remove this key? This action is irreversible.'\n            )}\n          >\n            <Button size=\"sm\" icon={<IconDelete />} aria-label={t('Delete')} />\n          </Confirm>\n        </Controls>\n      </PanelHeader>\n\n      <StyledClippedBox\n        clipHeight={300}\n        defaultClipped={!isJsPlatform}\n        btnText={t('Expand')}\n      >\n        <StyledPanelBody disabled={!data.isActive}>\n          <ProjectKeyCredentials\n            projectId={`${data.projectId}`}\n            data={data}\n            showMinidump={!isJsPlatform}\n            showUnreal={!isJsPlatform}\n            showSecurityEndpoint={!isJsPlatform}\n          />\n\n          {isBrowserJavaScript && (\n            <LoaderScript\n              projectKey={data}\n              routes={routes}\n              location={location}\n              params={params}\n            />\n          )}\n        </StyledPanelBody>\n      </StyledClippedBox>\n    </Panel>\n  );\n}\n\nexport default KeyRow;\n\nconst StyledClippedBox = styled(ClippedBox)`\n  padding: 0;\n  margin: 0;\n  > *:last-child {\n    padding-bottom: ${space(3)};\n  }\n`;\n\nconst PanelHeaderLink = styled(Link)`\n  color: ${p => p.theme.subText};\n`;\n\nconst Title = styled('div')<{disabled: boolean}>`\n  flex: 1;\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n  margin-right: ${space(1)};\n`;\n\nconst Controls = styled('div')`\n  display: grid;\n  align-items: center;\n  gap: ${space(1)};\n  grid-auto-flow: column;\n`;\n\nconst StyledPanelBody = styled(PanelBody)<{disabled: boolean}>`\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n`;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {hasEveryAccess} from 'sentry/components/acl/access';\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport Panel from 'sentry/components/panels/panel';\nimport {IconAdd, IconFlag} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\nimport KeyRow from './keyRow';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{projectId: string}, {}>;\n\ntype State = {\n  keyList: ProjectKey[];\n} & DeprecatedAsyncView['state'];\n\nclass ProjectKeys extends DeprecatedAsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Client Keys'), projectId, false);\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n    return [['keyList', `/projects/${organization.slug}/${projectId}/keys/`]];\n  }\n\n  /**\n   * Optimistically remove key\n   */\n  handleRemoveKey = async (data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Revoking key\\u2026'));\n\n    this.setState(state => ({\n      keyList: state.keyList.filter(key => key.id !== data.id),\n    }));\n\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/${data.id}/`,\n        {\n          method: 'DELETE',\n        }\n      );\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        keyList: oldKeyList,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  handleToggleKey = async (isActive: boolean, data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.setState(state => {\n      const keyList = state.keyList.map(key => {\n        if (key.id === data.id) {\n          return {\n            ...key,\n            isActive: !data.isActive,\n          };\n        }\n\n        return key;\n      });\n      return {keyList};\n    });\n\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/${data.id}/`,\n        {\n          method: 'PUT',\n          data: {isActive},\n        }\n      );\n      addSuccessMessage(isActive ? t('Enabled key') : t('Disabled key'));\n    } catch (_err) {\n      addErrorMessage(isActive ? t('Error enabling key') : t('Error disabling key'));\n      this.setState({keyList: oldKeyList});\n    }\n  };\n\n  handleCreateKey = async () => {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    try {\n      const data: ProjectKey = await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/`,\n        {\n          method: 'POST',\n        }\n      );\n\n      this.setState(state => ({\n        keyList: [...state.keyList, data],\n      }));\n      addSuccessMessage(t('Created a new key.'));\n    } catch (_err) {\n      addErrorMessage(t('Unable to create new key. Please try again.'));\n    }\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage\n          icon={<IconFlag size=\"xl\" />}\n          description={t('There are no keys active for this project.')}\n        />\n      </Panel>\n    );\n  }\n\n  renderResults() {\n    const {location, organization, project, routes, params} = this.props;\n    const {projectId} = params;\n    const hasAccess = hasEveryAccess(['project:write'], {organization, project});\n\n    return (\n      <Fragment>\n        {this.state.keyList.map(key => (\n          <KeyRow\n            hasWriteAccess={hasAccess}\n            key={key.id}\n            orgId={organization.slug}\n            projectId={projectId}\n            project={this.props.project}\n            data={key}\n            onToggle={this.handleToggleKey}\n            onRemove={this.handleRemoveKey}\n            routes={routes}\n            location={location}\n            params={params}\n          />\n        ))}\n        <Pagination pageLinks={this.state.keyListPageLinks} />\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const {organization, project} = this.props;\n    const isEmpty = !this.state.keyList.length;\n    const hasAccess = hasEveryAccess(['project:write'], {organization, project});\n\n    return (\n      <div data-test-id=\"project-keys\">\n        <SettingsPageHeader\n          title={t('Client Keys')}\n          action={\n            <Button\n              onClick={this.handleCreateKey}\n              size=\"sm\"\n              priority=\"primary\"\n              icon={<IconAdd size=\"xs\" isCircled />}\n              disabled={!hasAccess}\n            >\n              {t('Generate New Key')}\n            </Button>\n          }\n        />\n\n        <TextBlock>\n          {tct(\n            `To send data to Sentry you will need to configure an SDK with a client key\n          (usually referred to as the [code:SENTRY_DSN] value). For more\n          information on integrating Sentry with your application take a look at our\n          [link:documentation].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/configuration/options/\" />\n              ),\n              code: <code />,\n            }\n          )}\n        </TextBlock>\n\n        <PermissionAlert project={project} />\n\n        {isEmpty ? this.renderEmpty() : this.renderResults()}\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ProjectKeys);\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  projectId: string;\n  showDsn?: boolean;\n  showDsnPublic?: boolean;\n  showMinidump?: boolean;\n  showProjectId?: boolean;\n  showPublicKey?: boolean;\n  showSecretKey?: boolean;\n  showSecurityEndpoint?: boolean;\n  showUnreal?: boolean;\n};\n\nfunction ProjectKeyCredentials({\n  data,\n  projectId,\n  showDsn = true,\n  showDsnPublic = true,\n  showMinidump = true,\n  showProjectId = false,\n  showPublicKey = false,\n  showSecretKey = false,\n  showSecurityEndpoint = true,\n  showUnreal = true,\n}: Props) {\n  const [showDeprecatedDsn, setShowDeprecatedDsn] = useState(false);\n\n  return (\n    <Fragment>\n      {showDsnPublic && (\n        <FieldGroup\n          label={t('DSN')}\n          inline={false}\n          flexibleControlStateSize\n          help={tct('The DSN tells the SDK where to send the events to. [link]', {\n            link: showDsn ? (\n              <Link to=\"\" onClick={() => setShowDeprecatedDsn(curr => !curr)}>\n                {showDeprecatedDsn ? t('Hide deprecated DSN') : t('Show deprecated DSN')}\n              </Link>\n            ) : null,\n          })}\n        >\n          <TextCopyInput aria-label={t('DSN URL')}>\n            {getDynamicText({\n              value: data.dsn.public,\n              fixed: '__DSN__',\n            })}\n          </TextCopyInput>\n          {showDeprecatedDsn && (\n            <StyledField\n              label={null}\n              help={t(\n                'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n              )}\n              inline={false}\n              flexibleControlStateSize\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: data.dsn.secret,\n                  fixed: '__DSN_DEPRECATED__',\n                })}\n              </TextCopyInput>\n            </StyledField>\n          )}\n        </FieldGroup>\n      )}\n\n      {/* this edge case should imho not happen, but just to be sure */}\n      {!showDsnPublic && showDsn && (\n        <FieldGroup\n          label={t('DSN (Deprecated)')}\n          help={t(\n            'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.secret,\n              fixed: '__DSN_DEPRECATED__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecurityEndpoint && (\n        <FieldGroup\n          label={t('Security Header Endpoint')}\n          help={tct('Use your security header endpoint for features like [link].', {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/product/security-policy-reporting/\">\n                {t('CSP and Expect-CT reports')}\n              </ExternalLink>\n            ),\n          })}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput aria-label={t('Security Header Endpoint URL')}>\n            {getDynamicText({\n              value: data.dsn.security,\n              fixed: '__SECURITY_HEADER_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showMinidump && (\n        <FieldGroup\n          label={t('Minidump Endpoint')}\n          help={tct(\n            'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                  minidump crash reports\n                </ExternalLink>\n              ),\n            }\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput aria-label={t('Minidump Endpoint URL')}>\n            {getDynamicText({\n              value: data.dsn.minidump,\n              fixed: '__MINIDUMP_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showUnreal && (\n        <FieldGroup\n          label={t('Unreal Engine 4 Endpoint')}\n          help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput aria-label={t('Unreal Engine 4 Endpoint URL')}>\n            {getDynamicText({\n              value: data.dsn.unreal || '',\n              fixed: '__UNREAL_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showPublicKey && (\n        <FieldGroup label={t('Public Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.public,\n              fixed: '__PUBLICKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecretKey && (\n        <FieldGroup label={t('Secret Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.secret,\n              fixed: '__SECRETKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showProjectId && (\n        <FieldGroup label={t('Project ID')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: projectId,\n              fixed: '__PROJECTID__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n    </Fragment>\n  );\n}\n\nconst StyledField = styled(FieldGroup)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"names":["getPadding","_ref","disablePadding","hasButtons","css","space","_styled","target","p","lightText","theme","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary","routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","permissionAlertText","t","PermissionAlert","access","project","team","props","Access","_ref2","hasAccess","Alert","type","LoaderScript","projectKey","routes","params","location","loaderLink","getDynamicText","value","dsn","cdn","fixed","editUrl","recreateRoute","id","Fragment","_jsxs","FieldGroup","label","help","tct","link","ExternalLink","href","inline","flexibleControlStateSize","TextCopyInput","HelpFooter","configureLink","Link","to","FieldHelp","KeyRow","data","onRemove","onToggle","hasWriteAccess","platform","isBrowserJavaScript","isJsPlatform","startsWith","Panel","PanelHeader","Title","disabled","isActive","PanelHeaderLink","Controls","Button","size","Confirm","onConfirm","handleDisable","handleEnable","confirmText","message","priority","icon","IconDelete","StyledClippedBox","clipHeight","defaultClipped","btnText","StyledPanelBody","ProjectKeyCredentials","projectId","showMinidump","showUnreal","showSecurityEndpoint","ClippedBox","subText","PanelBody","ProjectKeys","constructor","_defineProperty","async","oldKeyList","state","keyList","addLoadingMessage","setState","filter","key","organization","api","requestPromise","slug","method","addSuccessMessage","_err","addErrorMessage","map","routeTitleGen","getEndpoints","renderEmpty","EmptyMessage","IconFlag","description","renderResults","hasEveryAccess","orgId","handleToggleKey","handleRemoveKey","Pagination","pageLinks","keyListPageLinks","renderBody","isEmpty","SettingsPageHeader","action","onClick","handleCreateKey","IconAdd","isCircled","TextBlock","code","withOrganization","showDsn","showDsnPublic","showProjectId","showPublicKey","showSecretKey","showDeprecatedDsn","setShowDeprecatedDsn","useState","curr","public","StyledField","secret","security","minidump","unreal"],"sourceRoot":""}