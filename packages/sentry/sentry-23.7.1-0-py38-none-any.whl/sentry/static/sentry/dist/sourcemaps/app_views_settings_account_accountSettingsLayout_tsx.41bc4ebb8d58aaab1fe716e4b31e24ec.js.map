{"version":3,"file":"chunks/app_views_settings_account_accountSettingsLayout_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"msBAQA,SAASA,EAAyBC,GAAwB,IAAvB,aAACC,GAAoBD,EACtD,OAAOE,EAAAA,EAAAA,IAACC,EAAAA,EAAkB,CAACC,mBAAmBC,EAAAA,EAAAA,GAAiB,CAACJ,kBAClE,CAFSF,EAAyBO,YAAA,4BAIlC,U,8DCIA,MAAMC,UAA8BC,EAAAA,UAKlCC,kBACE,MAAO,CACLR,aAAcS,KAAKC,MAAMV,aAE7B,CAEAW,mBAAmBC,GACjB,MAAM,IAACC,EAAG,aAAEb,GAAgBS,KAAKC,MAC7BE,EAAUZ,eAAiBA,GAO3BA,QAA+C,IAAxBA,EAAac,SACtCC,EAAAA,EAAAA,IAAyBF,EAAKb,EAAagB,KAAM,CAC/CC,WAAW,EACXC,cAAc,GAGpB,CAEAC,SACE,MAAM,aAACnB,GAAgBS,KAAKC,MAE5B,OACET,EAAAA,EAAAA,IAACmB,EAAAA,EAAc,IACTX,KAAKC,MACTW,iBAAkBA,KAAMpB,EAAAA,EAAAA,IAACH,EAAyB,CAACE,aAAcA,IAAiBsB,SAEjFb,KAAKC,MAAMY,UAGlB,EAvCIhB,EAAqBD,YAAA,yBAAAkB,EAAAA,EAAAA,GAArBjB,EAAqB,oBACE,CACzBN,aAAcwB,EAAAA,EAAYC,eAwC9B,SAAeC,EAAAA,EAAAA,IAAkBC,EAAAA,EAAAA,GAAQrB,G","sources":["webpack:///./app/views/settings/account/accountSettingsNavigation.tsx","webpack:///./app/views/settings/account/accountSettingsLayout.tsx"],"sourcesContent":["import {Organization} from 'sentry/types';\nimport getConfiguration from 'sentry/views/settings/account/navigationConfiguration';\nimport SettingsNavigation from 'sentry/views/settings/components/settingsNavigation';\n\ntype Props = {\n  organization: Organization;\n};\n\nfunction AccountSettingsNavigation({organization}: Props) {\n  return <SettingsNavigation navigationObjects={getConfiguration({organization})} />;\n}\n\nexport default AccountSettingsNavigation;\n","import {Component} from 'react';\n\nimport {fetchOrganizationDetails} from 'sentry/actionCreators/organizations';\nimport {Client} from 'sentry/api';\nimport SentryTypes from 'sentry/sentryTypes';\nimport {Organization} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withLatestContext from 'sentry/utils/withLatestContext';\nimport AccountSettingsNavigation from 'sentry/views/settings/account/accountSettingsNavigation';\nimport SettingsLayout from 'sentry/views/settings/components/settingsLayout';\n\ntype Props = React.ComponentProps<typeof SettingsLayout> & {\n  api: Client;\n  organization: Organization;\n};\n\nclass AccountSettingsLayout extends Component<Props> {\n  static childContextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  getChildContext() {\n    return {\n      organization: this.props.organization,\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {api, organization} = this.props;\n    if (prevProps.organization === organization) {\n      return;\n    }\n\n    // if there is no org in context, SidebarDropdown uses an org from `withLatestContext`\n    // (which queries the org index endpoint instead of org details)\n    // and does not have `access` info\n    if (organization && typeof organization.access === 'undefined') {\n      fetchOrganizationDetails(api, organization.slug, {\n        setActive: true,\n        loadProjects: true,\n      });\n    }\n  }\n\n  render() {\n    const {organization} = this.props;\n\n    return (\n      <SettingsLayout\n        {...this.props}\n        renderNavigation={() => <AccountSettingsNavigation organization={organization} />}\n      >\n        {this.props.children}\n      </SettingsLayout>\n    );\n  }\n}\n\nexport default withLatestContext(withApi(AccountSettingsLayout));\n"],"names":["AccountSettingsNavigation","_ref","organization","_jsx","SettingsNavigation","navigationObjects","getConfiguration","displayName","AccountSettingsLayout","Component","getChildContext","this","props","componentDidUpdate","prevProps","api","access","fetchOrganizationDetails","slug","setActive","loadProjects","render","SettingsLayout","renderNavigation","children","_defineProperty","SentryTypes","Organization","withLatestContext","withApi"],"sourceRoot":""}