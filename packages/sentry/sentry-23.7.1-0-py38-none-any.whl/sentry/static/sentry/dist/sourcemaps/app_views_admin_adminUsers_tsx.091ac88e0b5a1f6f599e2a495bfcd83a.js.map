{"version":3,"file":"chunks/app_views_admin_adminUsers_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/resultGrid.tsx","webpack:///./app/views/admin/adminUsers.tsx"],"sourcesContent":["import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {Client, RequestOptions} from 'sentry/api';\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport MenuItem from 'sentry/components/menuItem';\nimport Pagination from 'sentry/components/pagination';\nimport {IconSearch} from 'sentry/icons';\nimport withApi from 'sentry/utils/withApi';\n\ntype Option = [value: string, label: string];\n\ntype FilterProps = {\n  location: Location;\n  name: string;\n  options: Option[];\n  path: string;\n  queryKey: string;\n  value: string;\n};\n\nclass Filter extends Component<FilterProps> {\n  getCurrentLabel() {\n    const selected = this.props.options.find(\n      item => item[0] === (this.props.value ?? '')\n    );\n    if (selected) {\n      return this.props.name + ': ' + selected[1];\n    }\n    return this.props.name + ': ' + 'Any';\n  }\n\n  getDefaultItem() {\n    const query = {...this.props.location.query, cursor: ''};\n    delete query[this.props.queryKey];\n\n    return (\n      <MenuItem\n        key=\"\"\n        isActive={this.props.value === '' || !this.props.value}\n        to={{pathname: this.props.path, query}}\n      >\n        Any\n      </MenuItem>\n    );\n  }\n\n  getSelector = () => (\n    <DropdownLink title={this.getCurrentLabel()}>\n      {this.getDefaultItem()}\n      {this.props.options.map(([value, label]) => {\n        const filterQuery = {\n          [this.props.queryKey]: value,\n          cursor: '',\n        };\n\n        const query = {...this.props.location.query, ...filterQuery};\n        return (\n          <MenuItem\n            key={value}\n            isActive={this.props.value === value}\n            to={{pathname: this.props.path, query}}\n          >\n            {label}\n          </MenuItem>\n        );\n      })}\n    </DropdownLink>\n  );\n\n  render() {\n    return (\n      <div className=\"filter-options\">\n        {this.props.options.length === 1 ? (\n          <strong>{this.getCurrentLabel()}</strong>\n        ) : (\n          this.getSelector()\n        )}\n      </div>\n    );\n  }\n}\n\ntype SortByProps = {\n  location: Location;\n  options: Option[];\n  path: string;\n  value: string;\n};\n\nclass SortBy extends Component<SortByProps> {\n  getCurrentSortLabel() {\n    return this.props.options.find(([value]) => value === this.props.value)?.[1];\n  }\n\n  getSortBySelector() {\n    return (\n      <DropdownLink title={this.getCurrentSortLabel()} className=\"sorted-by\">\n        {this.props.options.map(([value, label]) => {\n          const query = {...this.props.location.query, sortBy: value, cursor: ''};\n          return (\n            <MenuItem\n              isActive={this.props.value === value}\n              key={value}\n              to={{pathname: this.props.path, query}}\n            >\n              {label}\n            </MenuItem>\n          );\n        })}\n      </DropdownLink>\n    );\n  }\n\n  render() {\n    if (this.props.options.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"sort-options\">\n        Showing results sorted by\n        {this.props.options.length === 1 ? (\n          <strong className=\"sorted-by\">{this.getCurrentSortLabel()}</strong>\n        ) : (\n          this.getSortBySelector()\n        )}\n      </div>\n    );\n  }\n}\n\ntype FilterConfig = {\n  name: string;\n  options: Option[];\n};\n\n// XXX(ts): Using Partial here on the DefaultProps is not really correct, since\n// defaultProps guarantees they'll be set. But because this component is\n// wrapped with a HoC, we lose the defaultProps, and users of the component\ntype Props = {\n  api: Client;\n  location: Location;\n} & Partial<DefaultProps>;\n\ntype DefaultProps = {\n  columns: React.ReactNode[];\n  columnsForRow: (row: any) => React.ReactNode[];\n  defaultParams: Record<string, any>;\n  defaultSort: string;\n  endpoint: string;\n  filters: Record<string, FilterConfig>;\n  hasPagination: boolean;\n  hasSearch: boolean;\n  keyForRow: (row: any) => string;\n  method: RequestOptions['method'];\n  path: string;\n  sortOptions: Option[];\n};\n\ntype State = {\n  error: string | boolean;\n  filters: Record<string, string>;\n  loading: boolean;\n  pageLinks: null | string;\n  query: string;\n  rows: any[];\n  sortBy: string;\n};\n\nclass ResultGrid extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    path: '',\n    endpoint: '',\n    method: 'GET',\n    columns: [],\n    sortOptions: [],\n    filters: {},\n    defaultSort: '',\n    keyForRow: row => row.id,\n    columnsForRow: () => [],\n    defaultParams: {\n      per_page: 50,\n    },\n    hasPagination: true,\n    hasSearch: false,\n  };\n\n  state: State = this.defaultState;\n\n  UNSAFE_componentWillMount() {\n    this.fetchData();\n  }\n\n  UNSAFE_componentWillReceiveProps() {\n    const queryParams = this.query;\n    this.setState(\n      {\n        query: queryParams.query ?? '',\n        sortBy: queryParams.sortBy ?? this.props.defaultSort,\n        filters: {...queryParams},\n        pageLinks: null,\n        loading: true,\n        error: false,\n      },\n      this.fetchData\n    );\n  }\n\n  get defaultState() {\n    const queryParams = this.query;\n\n    return {\n      rows: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n      query: queryParams.query ?? '',\n      sortBy: queryParams.sortBy ?? this.props.defaultSort,\n      filters: {...queryParams},\n    } as State;\n  }\n\n  get query() {\n    return ((this.props.location ?? {}).query ?? {}) as {[k: string]: string};\n  }\n\n  remountComponent() {\n    this.setState(this.defaultState, this.fetchData);\n  }\n\n  refresh() {\n    this.setState({loading: true}, this.fetchData);\n  }\n\n  fetchData() {\n    // TODO(dcramer): this should explicitly allow filters/sortBy/cursor/perPage\n    const queryParams = {\n      ...this.props.defaultParams,\n      sortBy: this.state.sortBy,\n      ...this.query,\n    };\n\n    this.props.api.request(this.props.endpoint!, {\n      method: this.props.method,\n      data: queryParams,\n      success: (data, _, resp) => {\n        this.setState({\n          loading: false,\n          error: false,\n          rows: data,\n          pageLinks: resp?.getResponseHeader('Link') ?? null,\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n  }\n\n  onSearch = (e: React.FormEvent<HTMLFormElement>) => {\n    const location = this.props.location ?? {};\n    const {query} = this.state;\n    const targetQueryParams = {...(location.query ?? {}), query, cursor: ''};\n\n    e.preventDefault();\n\n    browserHistory.push({\n      pathname: this.props.path,\n      query: targetQueryParams,\n    });\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({query: evt.target.value});\n  };\n\n  renderLoading() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>\n          <div className=\"loading\">\n            <div className=\"loading-indicator\" />\n            <div className=\"loading-message\">Hold on to your butts!</div>\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  renderError() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>\n          <div className=\"alert-block alert-error\">Something bad happened :(</div>\n        </td>\n      </tr>\n    );\n  }\n\n  renderNoResults() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>No results found.</td>\n      </tr>\n    );\n  }\n\n  renderResults() {\n    return this.state.rows.map(row => (\n      <tr key={this.props.keyForRow?.(row)}>{this.props.columnsForRow?.(row)}</tr>\n    ));\n  }\n\n  render() {\n    const {filters, sortOptions, path, location} = this.props;\n    return (\n      <div className=\"result-grid\">\n        <div className=\"table-options\">\n          {this.props.hasSearch && (\n            <div className=\"result-grid-search\">\n              <form onSubmit={this.onSearch}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control input-search\"\n                    placeholder=\"search\"\n                    style={{width: 300}}\n                    name=\"query\"\n                    autoComplete=\"off\"\n                    value={this.state.query}\n                    onChange={this.onQueryChange}\n                  />\n                  <button type=\"submit\" className=\"btn btn-sm btn-primary\">\n                    <IconSearch size=\"xs\" />\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n          <SortBy\n            options={sortOptions ?? []}\n            value={this.state.sortBy}\n            path={path ?? ''}\n            location={location}\n          />\n          {Object.keys(filters ?? {}).map(filterKey => (\n            <Filter\n              key={filterKey}\n              queryKey={filterKey}\n              value={this.state.filters[filterKey]}\n              path={path ?? ''}\n              location={location}\n              {...(filters?.[filterKey] as FilterConfig)}\n            />\n          ))}\n        </div>\n\n        <table className=\"table table-grid\">\n          <thead>\n            <tr>{this.props.columns}</tr>\n          </thead>\n          <tbody>\n            {this.state.loading\n              ? this.renderLoading()\n              : this.state.error\n              ? this.renderError()\n              : this.state.rows.length === 0\n              ? this.renderNoResults()\n              : this.renderResults()}\n          </tbody>\n        </table>\n        {this.props.hasPagination && this.state.pageLinks && (\n          <Pagination pageLinks={this.state.pageLinks} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport {ResultGrid};\n\nexport default withApi(ResultGrid);\n","import {RouteComponentProps} from 'react-router';\nimport moment from 'moment';\n\nimport Link from 'sentry/components/links/link';\nimport ResultGrid from 'sentry/components/resultGrid';\nimport {t} from 'sentry/locale';\n\ntype Row = {\n  dateJoined: string;\n  email: string;\n  id: string;\n  lastLogin: string;\n  username: string;\n};\n\ntype Props = RouteComponentProps<{}, {}>;\n\nconst getRow = (row: Row) => [\n  <td key=\"username\">\n    <strong>\n      <Link to={`/manage/users/${row.id}/`}>{row.username}</Link>\n    </strong>\n    <br />\n    {row.email !== row.username && <small>{row.email}</small>}\n  </td>,\n  <td key=\"dateJoined\" style={{textAlign: 'center'}}>\n    {moment(row.dateJoined).format('ll')}\n  </td>,\n  <td key=\"lastLogin\" style={{textAlign: 'center'}}>\n    {moment(row.lastLogin).format('ll')}\n  </td>,\n];\n\nfunction AdminUsers(props: Props) {\n  const columns = [\n    <th key=\"username\">User</th>,\n    <th key=\"dateJoined\" style={{textAlign: 'center', width: 150}}>\n      Joined\n    </th>,\n    <th key=\"lastLogin\" style={{textAlign: 'center', width: 150}}>\n      Last Login\n    </th>,\n  ];\n\n  return (\n    <div>\n      <h3>{t('Users')}</h3>\n      <ResultGrid\n        path=\"/manage/users/\"\n        endpoint=\"/users/\"\n        method=\"GET\"\n        columns={columns}\n        columnsForRow={getRow}\n        hasSearch\n        filters={{\n          status: {\n            name: 'Status',\n            options: [\n              ['active', 'Active'],\n              ['disabled', 'Disabled'],\n            ],\n          },\n        }}\n        sortOptions={[['date', 'Date Joined']]}\n        defaultSort=\"date\"\n        {...props}\n      />\n    </div>\n  );\n}\n\nexport default AdminUsers;\n"],"names":["Filter","Component","constructor","arguments","_defineProperty","_jsxs","DropdownLink","title","this","getCurrentLabel","children","getDefaultItem","props","options","map","_ref","value","label","filterQuery","queryKey","cursor","query","location","_jsx","MenuItem","isActive","to","pathname","path","selected","find","item","name","render","className","length","getSelector","displayName","SortBy","getCurrentSortLabel","_ref2","getSortBySelector","_ref3","sortBy","ResultGrid","defaultState","e","state","targetQueryParams","preventDefault","browserHistory","push","evt","setState","target","UNSAFE_componentWillMount","fetchData","UNSAFE_componentWillReceiveProps","queryParams","defaultSort","filters","pageLinks","loading","error","rows","remountComponent","refresh","defaultParams","api","request","endpoint","method","data","success","_","resp","getResponseHeader","renderLoading","colSpan","columns","renderError","renderNoResults","renderResults","row","columnsForRow","keyForRow","sortOptions","hasSearch","onSubmit","onSearch","type","placeholder","style","width","autoComplete","onChange","onQueryChange","IconSearch","size","Object","keys","filterKey","hasPagination","Pagination","id","per_page","withApi","getRow","Link","username","email","textAlign","moment","dateJoined","format","lastLogin","AdminUsers","t","status"],"sourceRoot":""}