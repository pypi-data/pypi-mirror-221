{"version":3,"file":"chunks/app_gettingStartedDocs_kotlin_kotlin_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"skBASA,MAAMA,GAAeC,EAAAA,EAAAA,IACnB,kdACA,CACEC,+BACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,8CAErBC,4BACEH,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,2CAErBE,QAAQJ,EAAAA,EAAAA,IAAA,eAICK,EAAQ,eAAC,IACpBC,GAGDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAA2B,CAC/B,CACEG,KAAMC,EAAAA,GAASC,QACfC,aAAaC,EAAAA,EAAAA,GAAE,wCACfC,eAAgB,CACd,CACEC,SAAU,SACVH,aACEb,EAAAA,EAAAA,IAAA,KAAAiB,UACGnB,EAAAA,EAAAA,IAAI,6DAA8D,CACjEM,QAAQJ,EAAAA,EAAAA,IAAA,aACRkB,MAAMlB,EAAAA,EAAAA,IAAA,eAIZkB,KAAO,wMAWT,CACEF,SAAU,MACVH,aACEb,EAAAA,EAAAA,IAAA,KAAAiB,UACGnB,EAAAA,EAAAA,IAAI,uDAAwD,CAC3DM,QAAQJ,EAAAA,EAAAA,IAAA,aACRkB,MAAMlB,EAAAA,EAAAA,IAAA,eAIZkB,KAAO,6IAUb,CACER,KAAMC,EAAAA,GAASQ,UACfN,aAAaC,EAAAA,EAAAA,GACX,yEAEFC,eAAgB,CACd,CACEC,SAAU,SACVE,KAAO,2EAIIZ,6SAWjB,CACEI,KAAMC,EAAAA,GAASS,OACfP,aACEb,EAAAA,EAAAA,IAAA,KAAAiB,UACGnB,EAAAA,EAAAA,IACC,oLACA,CAACoB,MAAMlB,EAAAA,EAAAA,IAAA,eAIbe,eAAgB,CACd,CACEC,SAAU,SACVE,KAAO,8KAYXG,gBACEC,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAN,SAAA,EACNH,EAAAA,EAAAA,GACC,qGAEFd,EAAAA,EAAAA,IAAA,KAAAiB,UACGH,EAAAA,EAAAA,GACC,4FAMV,CACEU,OAAOV,EAAAA,EAAAA,GAAE,uBACTD,aAAaC,EAAAA,EAAAA,GAAE,4DACfC,eAAgB,CACd,CACEC,SAAU,SACVE,KAAO,0ZAkBXG,gBACErB,EAAAA,EAAAA,IAAA,KAAAiB,UACGnB,EAAAA,EAAAA,IACC,yGACA,CACE2B,UACEzB,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CAACC,KAAK,4DAOhC,EAGM,SAASwB,EAAwBC,GAA+B,IAA9B,IAACrB,KAAQsB,GAAmBD,EACnE,OAAO3B,EAAAA,EAAAA,IAAC6B,EAAAA,EAAM,CAACxB,MAAOA,EAAM,CAACC,QAAOT,aAAcA,KAAkB+B,GACtE,CAFgBF,EAAwBI,YAAA,2BAIxC,S","sources":["webpack:///./app/gettingStartedDocs/kotlin/kotlin.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nconst introduction = tct(\n  \"Sentry supports Kotlin for both JVM and [Android. This wizard guides you through set up in the JVM scenario. If you're interested in [strong:Android], head over to the [gettingStartedWithAndroidLink:Getting Started] for that SDK instead. At its core, Sentry for Java provides a raw client for sending events to Sentry. If you use [strong:Spring Boot, Spring, Logback, JUL, or Log4j2], head over to our [gettingStartedWithJavaLink:Getting Started for Sentry Java].\",\n  {\n    gettingStartedWithAndroidLink: (\n      <ExternalLink href=\"https://docs.sentry.io/platforms/android/\" />\n    ),\n    gettingStartedWithJavaLink: (\n      <ExternalLink href=\"https://docs.sentry.io/platforms/java/\" />\n    ),\n    strong: <strong />,\n  }\n);\n\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: t('Install the SDK via Gradle or Maven:'),\n    configurations: [\n      {\n        language: 'groovy',\n        description: (\n          <p>\n            {tct('For [strong:Gradle], add to your [code:build.gradle] file:', {\n              strong: <strong />,\n              code: <code />,\n            })}\n          </p>\n        ),\n        code: `\n// Make sure mavenCentral is there.\nrepositories {\n  mavenCentral()\n}\n\ndependencies {\n  implementation 'io.sentry:sentry:{{@inject packages.version('sentry.java', '4.0.0') }}'\n}\n        `,\n      },\n      {\n        language: 'xml',\n        description: (\n          <p>\n            {tct('For [strong:Maven], add to your [code:pom.xml] file:', {\n              strong: <strong />,\n              code: <code />,\n            })}\n          </p>\n        ),\n        code: `\n<dependency>\n  <groupId>io.sentry</groupId>\n  <artifactId>sentry</artifactId>\n  <version>6.25.0</version>\n</dependency>\n        `,\n      },\n    ],\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: t(\n      \"Configure Sentry as soon as possible in your application's lifecycle:\"\n    ),\n    configurations: [\n      {\n        language: 'kotlin',\n        code: `\nimport io.sentry.Sentry\n\nSentry.init { options ->\n  options.dsn = \"${dsn}\"\n  // Set tracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n  // We recommend adjusting this value in production.\n  options.tracesSampleRate = 1.0\n  // When first trying Sentry it's good to see what the SDK is doing:\n  options.isDebug = true\n}\n        `,\n      },\n    ],\n  },\n  {\n    type: StepType.VERIFY,\n    description: (\n      <p>\n        {tct(\n          'Trigger your first event from your development environment by intentionally creating an error with the [code:Sentry#captureException] method, to test that everything is working:',\n          {code: <code />}\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'kotlin',\n        code: `\nimport java.lang.Exception\nimport io.sentry.Sentry\n\ntry {\n  throw Exception(\"This is a test.\")\n} catch (e: Exception) {\n  Sentry.captureException(e)\n}\n        `,\n      },\n    ],\n    additionalInfo: (\n      <Fragment>\n        {t(\n          \"If you're new to Sentry, use the email alert to access your account and complete a product tour.\"\n        )}\n        <p>\n          {t(\n            \"If you're an existing user and have disabled alerts, you won't receive this email.\"\n          )}\n        </p>\n      </Fragment>\n    ),\n  },\n  {\n    title: t('Measure Performance'),\n    description: t('You can capture transactions using the SDK. For example:'),\n    configurations: [\n      {\n        language: 'kotlin',\n        code: `\nimport io.sentry.Sentry\nimport io.sentry.SpanStatus\n\n// A good name for the transaction is key, to help identify what this is about\nval transaction = Sentry.startTransaction(\"processOrderBatch()\", \"task\")\ntry {\n  processOrderBatch()\n} catch (e: Exception) {\n  transaction.throwable = e\n  transaction.status = SpanStatus.INTERNAL_ERROR\nthrow e\n} finally {\n  transaction.finish();\n}\n        `,\n      },\n    ],\n    additionalInfo: (\n      <p>\n        {tct(\n          'For more information about the API and automatic instrumentations included in the SDK, visit the docs.',\n          {\n            docsLink: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/java/performance/\" />\n            ),\n          }\n        )}\n      </p>\n    ),\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithKotlin({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} introduction={introduction} {...props} />;\n}\n\nexport default GettingStartedWithKotlin;\n"],"names":["introduction","tct","gettingStartedWithAndroidLink","_jsx","ExternalLink","href","gettingStartedWithJavaLink","strong","steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","t","configurations","language","children","code","CONFIGURE","VERIFY","additionalInfo","_jsxs","Fragment","title","docsLink","GettingStartedWithKotlin","_ref","props","Layout","displayName"],"sourceRoot":""}