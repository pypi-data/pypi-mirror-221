{"version":3,"file":"chunks/app_components_forms_formPanel_tsx-app_views_settings_account_accountEmails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/forms/formPanel.tsx","webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/views/settings/account/accountEmails.tsx"],"sourcesContent":["import {useCallback, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport FieldFromConfig from 'sentry/components/forms/fieldFromConfig';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport {IconChevron} from 'sentry/icons';\nimport {Scope} from 'sentry/types';\nimport {sanitizeQuerySelector} from 'sentry/utils/sanitizeQuerySelector';\n\nimport {FieldObject, JsonFormObject} from './types';\n\ntype Props = {\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n  access?: Set<Scope>;\n  additionalFieldProps?: {[key: string]: any};\n  /**\n   * Can the PanelBody be hidden with a click?\n   */\n  collapsible?: boolean;\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n  features?: Record<string, any>;\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n  initiallyCollapsed?: boolean;\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n};\n\nfunction FormPanel({\n  additionalFieldProps = {},\n  title,\n  fields,\n  access,\n  disabled,\n  renderFooter,\n  renderHeader,\n  collapsible,\n  initiallyCollapsed = false,\n  ...otherProps\n}: Props) {\n  const [collapsed, setCollapse] = useState(initiallyCollapsed);\n  const handleCollapseToggle = useCallback(() => setCollapse(current => !current), []);\n\n  return (\n    <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n      {title && (\n        <PanelHeader>\n          {title}\n          {collapsible && (\n            <Collapse onClick={handleCollapseToggle}>\n              <IconChevron\n                data-test-id=\"form-panel-collapse-chevron\"\n                direction={collapsed ? 'down' : 'up'}\n                size=\"xs\"\n              />\n            </Collapse>\n          )}\n        </PanelHeader>\n      )}\n      <PanelBody hidden={collapsed}>\n        {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n        {fields.map(field => {\n          if (typeof field === 'function') {\n            return field();\n          }\n\n          const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n          // Allow the form panel disabled prop to override the fields\n          // disabled prop, with fallback to the fields disabled state.\n          if (disabled === true) {\n            fieldWithoutDefaultValue.disabled = true;\n            fieldWithoutDefaultValue.disabledReason = undefined;\n          }\n\n          return (\n            <FieldFromConfig\n              access={access}\n              disabled={disabled}\n              key={field.name}\n              {...otherProps}\n              {...additionalFieldProps}\n              field={fieldWithoutDefaultValue}\n              highlighted={otherProps.highlighted === `#${field.name}`}\n            />\n          );\n        })}\n        {typeof renderFooter === 'function' && renderFooter({title, fields})}\n      </PanelBody>\n    </Panel>\n  );\n}\n\nexport default FormPanel;\n\nconst Collapse = styled('span')`\n  cursor: pointer;\n`;\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {RequestOptions} from 'sentry/api';\nimport AlertLink from 'sentry/components/alertLink';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport Form, {FormProps} from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport PanelItem from 'sentry/components/panels/panelItem';\nimport Tag from 'sentry/components/tag';\nimport accountEmailsFields from 'sentry/data/forms/accountEmails';\nimport {IconDelete, IconStack} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {UserEmail} from 'sentry/types';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nconst ENDPOINT = '/users/me/emails/';\n\ntype Props = DeprecatedAsyncView['props'];\n\ntype State = DeprecatedAsyncView['state'] & {\n  emails: UserEmail[];\n};\n\nclass AccountEmails extends DeprecatedAsyncView<Props, State> {\n  getTitle() {\n    return t('Emails');\n  }\n\n  getEndpoints() {\n    return [];\n  }\n\n  handleSubmitSuccess: FormProps['onSubmitSuccess'] = (_change, model, id) => {\n    if (id === undefined) {\n      return;\n    }\n    model.setValue(id, '');\n    this.remountComponent();\n  };\n\n  renderBody() {\n    return (\n      <Fragment>\n        <SettingsPageHeader title={t('Email Addresses')} />\n        <EmailAddresses />\n        <Form\n          apiMethod=\"POST\"\n          apiEndpoint={ENDPOINT}\n          saveOnBlur\n          allowUndo={false}\n          onSubmitSuccess={this.handleSubmitSuccess}\n        >\n          <JsonForm forms={accountEmailsFields} />\n        </Form>\n\n        <AlertLink to=\"/settings/account/notifications\" icon={<IconStack />}>\n          {t('Want to change how many emails you get? Use the notifications panel.')}\n        </AlertLink>\n      </Fragment>\n    );\n  }\n}\n\nexport default AccountEmails;\n\nexport class EmailAddresses extends DeprecatedAsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    return [['emails', ENDPOINT]];\n  }\n  doApiCall(endpoint: string, requestParams: RequestOptions) {\n    this.setState({loading: true, emails: []}, () =>\n      this.api\n        .requestPromise(endpoint, requestParams)\n        .then(() => this.remountComponent())\n        .catch(err => {\n          this.remountComponent();\n\n          if (err?.responseJSON?.email) {\n            addErrorMessage(err.responseJSON.email);\n          }\n        })\n    );\n  }\n  handleSetPrimary = (email: string) =>\n    this.doApiCall(ENDPOINT, {\n      method: 'PUT',\n      data: {email},\n    });\n\n  handleRemove = (email: string) =>\n    this.doApiCall(ENDPOINT, {\n      method: 'DELETE',\n      data: {email},\n    });\n\n  handleVerify = (email: string) =>\n    this.doApiCall(`${ENDPOINT}confirm/`, {\n      method: 'POST',\n      data: {email},\n    });\n\n  render() {\n    const {emails, loading} = this.state;\n    const primary = emails?.find(({isPrimary}) => isPrimary);\n    const secondary = emails?.filter(({isPrimary}) => !isPrimary);\n\n    if (loading) {\n      return (\n        <Panel>\n          <PanelHeader>{t('Email Addresses')}</PanelHeader>\n          <PanelBody>\n            <LoadingIndicator />\n          </PanelBody>\n        </Panel>\n      );\n    }\n    return (\n      <Panel>\n        <PanelHeader>{t('Email Addresses')}</PanelHeader>\n        <PanelBody>\n          {primary && (\n            <EmailRow\n              onRemove={this.handleRemove}\n              onVerify={this.handleVerify}\n              {...primary}\n            />\n          )}\n\n          {secondary?.map(emailObj => (\n            <EmailRow\n              key={emailObj.email}\n              onSetPrimary={this.handleSetPrimary}\n              onRemove={this.handleRemove}\n              onVerify={this.handleVerify}\n              {...emailObj}\n            />\n          ))}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype EmailRowProps = {\n  email: string;\n  onRemove: (email: string, e: React.MouseEvent) => void;\n  onVerify: (email: string, e: React.MouseEvent) => void;\n  hideRemove?: boolean;\n  isPrimary?: boolean;\n  isVerified?: boolean;\n  onSetPrimary?: (email: string, e: React.MouseEvent) => void;\n};\n\nfunction EmailRow({\n  email,\n  onRemove,\n  onVerify,\n  onSetPrimary,\n  isVerified,\n  isPrimary,\n  hideRemove,\n}: EmailRowProps) {\n  return (\n    <EmailItem>\n      <EmailTags>\n        {email}\n        {!isVerified && <Tag type=\"warning\">{t('Unverified')}</Tag>}\n        {isPrimary && <Tag type=\"success\">{t('Primary')}</Tag>}\n      </EmailTags>\n      <ButtonBar gap={1}>\n        {!isPrimary && isVerified && (\n          <Button size=\"sm\" onClick={e => onSetPrimary?.(email, e)}>\n            {t('Set as primary')}\n          </Button>\n        )}\n        {!isVerified && (\n          <Button size=\"sm\" onClick={e => onVerify(email, e)}>\n            {t('Resend verification')}\n          </Button>\n        )}\n        {!hideRemove && !isPrimary && (\n          <Button\n            aria-label={t('Remove email')}\n            data-test-id=\"remove\"\n            priority=\"danger\"\n            size=\"sm\"\n            icon={<IconDelete />}\n            onClick={e => onRemove(email, e)}\n          />\n        )}\n      </ButtonBar>\n    </EmailItem>\n  );\n}\n\nconst EmailTags = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n  align-items: center;\n`;\n\nconst EmailItem = styled(PanelItem)`\n  justify-content: space-between;\n`;\n"],"names":["FormPanel","_ref","additionalFieldProps","title","fields","access","disabled","renderFooter","renderHeader","collapsible","initiallyCollapsed","otherProps","collapsed","setCollapse","useState","handleCollapseToggle","useCallback","current","_jsxs","Panel","id","sanitizeQuerySelector","undefined","children","PanelHeader","_jsx","Collapse","onClick","IconChevron","direction","size","PanelBody","hidden","map","field","defaultValue","_","fieldWithoutDefaultValue","disabledReason","FieldFromConfig","highlighted","name","displayName","_styled","target","styles","getPadding","disablePadding","hasButtons","css","space","p","lightText","theme","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary","ENDPOINT","AccountEmails","DeprecatedAsyncView","constructor","arguments","_defineProperty","_change","model","setValue","this","remountComponent","getTitle","t","getEndpoints","renderBody","Fragment","SettingsPageHeader","EmailAddresses","Form","apiMethod","apiEndpoint","saveOnBlur","allowUndo","onSubmitSuccess","handleSubmitSuccess","JsonForm","forms","accountEmailsFields","AlertLink","to","icon","IconStack","DeprecatedAsyncComponent","email","doApiCall","method","data","endpoint","requestParams","setState","loading","emails","api","requestPromise","then","catch","err","responseJSON","addErrorMessage","render","state","primary","find","isPrimary","secondary","filter","_ref2","LoadingIndicator","EmailRow","onRemove","handleRemove","onVerify","handleVerify","emailObj","onSetPrimary","handleSetPrimary","_ref3","isVerified","hideRemove","EmailItem","EmailTags","Tag","type","ButtonBar","gap","Button","e","priority","IconDelete","PanelItem"],"sourceRoot":""}