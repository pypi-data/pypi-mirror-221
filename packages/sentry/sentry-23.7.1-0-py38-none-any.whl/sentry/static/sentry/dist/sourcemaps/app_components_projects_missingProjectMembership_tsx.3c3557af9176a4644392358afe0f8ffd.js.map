{"version":3,"file":"chunks/app_components_projects_missingProjectMembership_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/projects/missingProjectMembership.tsx"],"sourcesContent":["import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {joinTeam} from 'sentry/actionCreators/teams';\nimport {Client} from 'sentry/api';\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport SelectControl from 'sentry/components/forms/controls/selectControl';\nimport Panel from 'sentry/components/panels/panel';\nimport {IconFlag} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  project?: Project | null;\n};\n\ntype State = {\n  error: boolean;\n  loading: boolean;\n  team: string | null;\n  project?: Project | null;\n};\n\nclass MissingProjectMembership extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    error: false,\n    project: this.props.project,\n    team: '',\n  };\n\n  joinTeam(teamSlug: string) {\n    this.setState({\n      loading: true,\n    });\n\n    joinTeam(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        teamId: teamSlug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(t('Request to join team sent.'));\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(t('There was an error while trying to request access.'));\n        },\n      }\n    );\n  }\n\n  renderJoinTeam(teamSlug: string, features: string[]) {\n    const team = TeamStore.getBySlug(teamSlug);\n\n    if (!team) {\n      return null;\n    }\n    if (this.state.loading) {\n      if (features.includes('open-membership')) {\n        return <Button busy>{t('Join Team')}</Button>;\n      }\n      return <Button busy>{t('Request Access')}</Button>;\n    }\n    if (team?.isPending) {\n      return <Button disabled>{t('Request Pending')}</Button>;\n    }\n    if (features.includes('open-membership')) {\n      return (\n        <Button priority=\"primary\" onClick={this.joinTeam.bind(this, teamSlug)}>\n          {t('Join Team')}\n        </Button>\n      );\n    }\n    return (\n      <Button priority=\"primary\" onClick={this.joinTeam.bind(this, teamSlug)}>\n        {t('Request Access')}\n      </Button>\n    );\n  }\n\n  getTeamsForAccess() {\n    const request: string[] = [];\n    const pending: string[] = [];\n    const teams = this.state.project?.teams ?? [];\n    teams.forEach(({slug}) => {\n      const team = TeamStore.getBySlug(slug);\n      if (!team) {\n        return;\n      }\n      team.isPending ? pending.push(team.slug) : request.push(team.slug);\n    });\n\n    return [request, pending];\n  }\n\n  getPendingTeamOption = (team: string) => {\n    return {\n      value: team,\n      label: <DisabledLabel>{`#${team}`}</DisabledLabel>,\n    };\n  };\n\n  render() {\n    const {organization} = this.props;\n    const teamSlug = this.state.team;\n    const teams = this.state.project?.teams ?? [];\n\n    const teamAccess = [\n      {\n        label: t('Request Access'),\n        options: this.getTeamsForAccess()[0].map(request => ({\n          value: request,\n          label: `#${request}`,\n        })),\n      },\n      {\n        label: t('Pending Requests'),\n        options: this.getTeamsForAccess()[1].map(pending =>\n          this.getPendingTeamOption(pending)\n        ),\n      },\n    ];\n\n    return (\n      <StyledPanel>\n        {!teams.length ? (\n          <EmptyMessage icon={<IconFlag size=\"xl\" />}>\n            {t(\n              'No teams have access to this project yet. Ask an admin to add your team to this project.'\n            )}\n          </EmptyMessage>\n        ) : (\n          <EmptyMessage\n            icon={<IconFlag size=\"xl\" />}\n            title={t(\"You're not a member of this project.\")}\n            description={t(\n              `You'll need to join a team with access before you can view this data.`\n            )}\n            action={\n              <Field>\n                <StyledSelectControl\n                  name=\"select\"\n                  placeholder={t('Select a Team')}\n                  options={teamAccess}\n                  onChange={teamObj => {\n                    const team = teamObj ? teamObj.value : null;\n                    this.setState({team});\n                  }}\n                />\n                {teamSlug ? (\n                  this.renderJoinTeam(teamSlug, organization.features)\n                ) : (\n                  <Button disabled>{t('Select a Team')}</Button>\n                )}\n              </Field>\n            }\n          />\n        )}\n      </StyledPanel>\n    );\n  }\n}\n\nconst StyledPanel = styled(Panel)`\n  margin: ${space(2)} 0;\n`;\n\nconst Field = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(2)};\n  text-align: left;\n`;\n\nconst StyledSelectControl = styled(SelectControl)`\n  width: 250px;\n`;\n\nconst DisabledLabel = styled('div')`\n  display: flex;\n  opacity: 0.5;\n  overflow: hidden;\n`;\n\nexport default withApi(MissingProjectMembership);\n"],"names":["MissingProjectMembership","Component","constructor","arguments","_defineProperty","loading","error","project","this","props","team","value","label","_jsx","DisabledLabel","children","joinTeam","teamSlug","setState","api","orgId","organization","slug","teamId","success","addSuccessMessage","t","addErrorMessage","renderJoinTeam","features","TeamStore","getBySlug","state","includes","Button","busy","isPending","disabled","priority","onClick","bind","getTeamsForAccess","request","pending","teams","forEach","_ref","push","render","teamAccess","options","map","getPendingTeamOption","StyledPanel","length","EmptyMessage","icon","IconFlag","size","title","description","action","_jsxs","Field","StyledSelectControl","name","placeholder","onChange","teamObj","displayName","_styled","Panel","target","space","SelectControl","styles","withApi"],"sourceRoot":""}