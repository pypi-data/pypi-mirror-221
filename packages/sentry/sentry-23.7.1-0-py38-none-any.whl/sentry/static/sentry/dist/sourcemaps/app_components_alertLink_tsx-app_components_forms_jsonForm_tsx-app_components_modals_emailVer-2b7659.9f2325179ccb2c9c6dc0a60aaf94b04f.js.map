{"version":3,"file":"chunks/app_components_alertLink_tsx-app_components_forms_jsonForm_tsx-app_components_modals_emailVer-2b7659.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/alertLink.tsx","webpack:///./app/components/forms/jsonForm.tsx","webpack:///./app/components/modals/emailVerificationModal.tsx","webpack:///./app/components/tag.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/utils/getRouteStringFromRoutes.tsx","webpack:///./app/utils/withProject.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/components/text/textBlock.tsx","webpack:///../node_modules/lodash/findLastIndex.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport {IconChevron} from 'sentry/icons';\nimport {space} from 'sentry/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  children?: React.ReactNode;\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  openInNewTab: boolean;\n  priority: Priority;\n  size: Size;\n  withoutMarginBottom: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & Partial<DefaultProps> & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nfunction AlertLink({\n  size = 'normal',\n  priority = 'warning',\n  icon,\n  children,\n  onClick,\n  withoutMarginBottom = false,\n  openInNewTab = false,\n  to,\n  href,\n  ['data-test-id']: dataTestId,\n}: Props) {\n  return (\n    <StyledLink\n      data-test-id={dataTestId}\n      to={to}\n      href={href}\n      onClick={onClick}\n      size={size}\n      priority={priority}\n      withoutMarginBottom={withoutMarginBottom}\n      openInNewTab={openInNewTab}\n    >\n      {icon && <IconWrapper>{icon}</IconWrapper>}\n      <AlertLinkText>{children}</AlertLinkText>\n      <IconLink>\n        <IconChevron direction=\"right\" />\n      </IconLink>\n    </StyledLink>\n  );\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  align-items: center;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeMedium};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  height: calc(${p => p.theme.fontSizeMedium} * ${p => p.theme.text.lineHeightBody});\n  margin-right: ${space(1)};\n  align-items: center;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin-right: 0;\n  margin-left: ${space(1)};\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: ${p => p.theme.text.lineHeightBody};\n  flex-grow: 1;\n`;\n","import {Component, Fragment} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'sentry/utils';\nimport {sanitizeQuerySelector} from 'sentry/utils/sanitizeQuerySelector';\n// eslint-disable-next-line no-restricted-imports\nimport withSentryRouter from 'sentry/utils/withSentryRouter';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './types';\n\ntype Props = {\n  additionalFieldProps?: {[key: string]: any};\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n} & WithRouterProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends Component<Props, State> {\n  state: State = {\n    // location.hash is optional because of tests.\n    highlighted: this.props.location?.hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.location && this.props.location.hash !== prevProps.location.hash) {\n      const hash = this.props.location.hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    // location.hash is optional because of tests.\n    const hash = toHash || this.props.location?.hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      collapsible,\n      initiallyCollapsed,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      params: _params,\n      router: _router,\n      routes: _routes,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n      collapsible,\n      initiallyCollapsed,\n    };\n\n    return (\n      <div {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <Fragment key={i}>{this.renderForm({formPanelProps, ...formGroup})}</Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </div>\n    );\n  }\n}\n\nexport default withSentryRouter(JsonForm);\n","import {Fragment} from 'react';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Link from 'sentry/components/links/link';\nimport {t, tct} from 'sentry/locale';\nimport {EmailAddresses} from 'sentry/views/settings/account/accountEmails';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = Pick<ModalRenderProps, 'Body' | 'Header'> & {\n  actionMessage?: string;\n};\n\nfunction EmailVerificationModal({\n  Header,\n  Body,\n  actionMessage = 'taking this action',\n}: Props) {\n  return (\n    <Fragment>\n      <Header closeButton>{t('Action Required')}</Header>\n      <Body>\n        <TextBlock>\n          {tct('Please verify your email before [actionMessage], or [link].', {\n            actionMessage,\n            link: (\n              <Link to=\"/settings/account/emails/\" data-test-id=\"email-settings-link\">\n                {t('go to your email settings')}\n              </Link>\n            ),\n          })}\n        </TextBlock>\n        <EmailAddresses />\n      </Body>\n    </Fragment>\n  );\n}\n\nexport default EmailVerificationModal;\nexport {EmailVerificationModal};\n","import {cloneElement, isValidElement} from 'react';\nimport {Theme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link, {LinkProps} from 'sentry/components/links/link';\nimport {Tooltip, TooltipProps} from 'sentry/components/tooltip';\nimport {IconClose, IconOpen} from 'sentry/icons';\nimport {SVGIconProps} from 'sentry/icons/svgIcon';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport theme, {Color} from 'sentry/utils/theme';\n\nconst TAG_HEIGHT = '20px';\n\ninterface Props extends React.HTMLAttributes<HTMLSpanElement> {\n  /**\n   * Makes the tag clickable. Use for external links.\n   * If no icon is passed, it defaults to IconOpen (can be removed by passing icon={null})\n   */\n  href?: string;\n  /**\n   * Icon on the left side.\n   */\n  icon?: React.ReactNode;\n  /**\n   * Triggered when the item is clicked\n   */\n  onClick?: (eventKey: any) => void;\n  /**\n   * Shows clickable IconClose on the right side.\n   */\n  onDismiss?: () => void;\n  /**\n   * Max width of the tag's text\n   */\n  textMaxWidth?: number;\n  /**\n   * Makes the tag clickable. Use for internal links handled by react router.\n   * If no icon is passed, it defaults to IconOpen (can be removed by passing icon={null})\n   */\n  to?: LinkProps['to'];\n  /**\n   * Additional properites for the Tooltip when `tooltipText` is set.\n   */\n  tooltipProps?: Omit<TooltipProps, 'children' | 'title' | 'skipWrapper'>;\n  /**\n   * Text to show up on a hover.\n   */\n  tooltipText?: TooltipProps['title'];\n  /**\n   * Dictates color scheme of the tag.\n   */\n  type?: keyof Theme['tag'];\n}\n\nfunction Tag({\n  type = 'default',\n  icon,\n  tooltipText,\n  tooltipProps,\n  to,\n  onClick,\n  href,\n  onDismiss,\n  children,\n  textMaxWidth = 150,\n  ...props\n}: Props) {\n  const iconsProps: SVGIconProps = {\n    size: 'xs',\n    color: theme.tag[type].iconColor as Color,\n  };\n\n  const tag = (\n    <Tooltip title={tooltipText} containerDisplayMode=\"inline-flex\" {...tooltipProps}>\n      <Background type={type}>\n        {tagIcon()}\n\n        <Text type={type} maxWidth={textMaxWidth}>\n          {children}\n        </Text>\n\n        {defined(onDismiss) && (\n          <DismissButton\n            onClick={handleDismiss}\n            size=\"zero\"\n            priority=\"link\"\n            aria-label={t('Dismiss')}\n            icon={<IconClose isCircled {...iconsProps} />}\n          />\n        )}\n      </Background>\n    </Tooltip>\n  );\n\n  function handleDismiss(event: React.MouseEvent) {\n    event.preventDefault();\n    onDismiss?.();\n  }\n\n  const trackClickEvent = () => {\n    trackAnalytics('tag.clicked', {\n      is_clickable: defined(onClick) || defined(to) || defined(href),\n      organization: null,\n    });\n  };\n\n  function tagIcon() {\n    if (isValidElement(icon)) {\n      return <IconWrapper>{cloneElement(icon, {...iconsProps})}</IconWrapper>;\n    }\n\n    if ((defined(href) || defined(to)) && icon === undefined) {\n      return (\n        <IconWrapper>\n          <IconOpen {...iconsProps} />\n        </IconWrapper>\n      );\n    }\n\n    return null;\n  }\n\n  function tagWithParent() {\n    if (defined(href)) {\n      return <ExternalLink href={href}>{tag}</ExternalLink>;\n    }\n\n    if (defined(to) && defined(onClick)) {\n      return (\n        <Link to={to} onClick={onClick}>\n          {tag}\n        </Link>\n      );\n    }\n    if (defined(to)) {\n      return <Link to={to}>{tag}</Link>;\n    }\n\n    return tag;\n  }\n\n  return (\n    <TagWrapper {...props} onClick={trackClickEvent}>\n      {tagWithParent()}\n    </TagWrapper>\n  );\n}\n\nconst TagWrapper = styled('span')`\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nexport const Background = styled('div')<{type: keyof Theme['tag']}>`\n  display: inline-flex;\n  align-items: center;\n  height: ${TAG_HEIGHT};\n  border-radius: ${TAG_HEIGHT};\n  background-color: ${p => p.theme.tag[p.type].background};\n  border: solid 1px ${p => p.theme.tag[p.type].border};\n  padding: 0 ${space(1)};\n`;\n\nconst IconWrapper = styled('span')`\n  margin-right: ${space(0.5)};\n  display: inline-flex;\n`;\n\nconst Text = styled('span')<{maxWidth: number; type: keyof Theme['tag']}>`\n  color: ${p =>\n    ['black', 'white'].includes(p.type)\n      ? p.theme.tag[p.type].iconColor\n      : p.theme.textColor};\n  max-width: ${p => p.maxWidth}px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  line-height: ${TAG_HEIGHT};\n`;\n\nconst DismissButton = styled(Button)`\n  margin-left: ${space(0.5)};\n  margin-right: -${space(0.5)};\n  border: none;\n`;\n\nexport default Tag;\n","import {JsonFormObject} from 'sentry/components/forms/types';\nimport {t} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: t('Add Secondary Emails'),\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: t('Additional Email'),\n        placeholder: t('e.g. secondary@example.com'),\n        help: t('Designate an alternative email for this account'),\n        saveOnBlur: false,\n        saveMessage: t('Add this new email address to your account?'),\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import {PlainRoute} from 'react-router';\nimport findLastIndex from 'lodash/findLastIndex';\n\ntype RouteWithPath = Omit<PlainRoute, 'path'> & Required<Pick<PlainRoute, 'path'>>;\n\n/**\n * Creates a route string from an array of `routes` from react-router\n *\n * It will look for the last route path that begins with a `/` and\n * concatenate all of the following routes. Skips any routes without a path\n *\n * @param {Array<{}>} routes An array of route objects from react-router\n * @return String Returns a route path\n */\nexport default function getRouteStringFromRoutes(routes?: PlainRoute[]): string {\n  if (!Array.isArray(routes)) {\n    return '';\n  }\n\n  const routesWithPaths = routes.filter((route): route is RouteWithPath => !!route.path);\n\n  const lastAbsolutePathIndex = findLastIndex(routesWithPaths, ({path}) =>\n    path.startsWith('/')\n  );\n\n  return routesWithPaths\n    .slice(lastAbsolutePathIndex)\n    .filter(({path}) => !!path)\n    .map(({path}) => path)\n    .join('');\n}\n","import {Component} from 'react';\n\nimport SentryTypes from 'sentry/sentryTypes';\nimport {Project} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedProjectProps = {\n  project?: Project;\n};\n\n/**\n * Currently wraps component with project from context\n */\nconst withProject = <P extends InjectedProjectProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  class extends Component<\n    Omit<P, keyof InjectedProjectProps> & Partial<InjectedProjectProps>\n  > {\n    static displayName = `withProject(${getDisplayName(WrappedComponent)})`;\n    static contextTypes = {\n      project: SentryTypes.Project,\n    };\n\n    render() {\n      const {project, ...props} = this.props;\n      return (\n        <WrappedComponent\n          {...({project: project ?? this.context.project, ...props} as P)}\n        />\n      );\n    }\n  };\n\nexport default withProject;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * The page title\n   */\n  title: React.ReactNode;\n  /**\n   * A CTA Button\n   */\n  action?: React.ReactNode;\n  body?: React.ReactNode;\n  className?: string;\n  /**\n   * Use a purple color for the subtitle\n   */\n  colorSubtitle?: boolean;\n  /**\n   * Icon to the left of the title\n   */\n  icon?: React.ReactNode;\n  /**\n   * Disables font styles in the title. Allows for more custom titles.\n   */\n  noTitleStyles?: boolean;\n  subtitle?: React.ReactNode;\n  tabs?: React.ReactNode;\n};\n\nfunction UnstyledSettingsPageHeader({\n  icon,\n  title,\n  subtitle,\n  colorSubtitle,\n  action,\n  body,\n  tabs,\n  noTitleStyles = false,\n  ...props\n}: Props) {\n  // If Header is narrow, use align-items to center <Action>.\n  // Otherwise, use a fixed margin to prevent an odd alignment.\n  // This is needed as Actions could be a button or a dropdown.\n  const isNarrow = !subtitle;\n\n  return (\n    <div {...props}>\n      <TitleAndActions isNarrow={isNarrow}>\n        <TitleWrapper>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n              {subtitle && <Subtitle colorSubtitle={colorSubtitle}>{subtitle}</Subtitle>}\n            </Title>\n          )}\n        </TitleWrapper>\n        {action && <Action isNarrow={isNarrow}>{action}</Action>}\n      </TitleAndActions>\n\n      {body && <BodyWrapper>{body}</BodyWrapper>}\n      {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n    </div>\n  );\n}\n\ninterface TitleProps extends React.HTMLAttributes<HTMLDivElement> {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n}\n\nconst HeaderTitle = styled('h4')`\n  ${p => p.theme.text.pageTitle};\n  color: ${p => p.theme.headingColor};\n  flex: 1;\n  margin: 0;\n`;\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')<{colorSubtitle?: boolean}>`\n  color: ${p => (p.colorSubtitle ? p.theme.purple400 : p.theme.gray400)};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  noMargin?: boolean;\n};\n\nconst TextBlock = styled('div')<Props>`\n  line-height: 1.5;\n  ${p => (p.noMargin ? '' : 'margin-bottom:' + space(3))};\n`;\n\nexport default TextBlock;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n"],"names":["AlertLink","_ref","size","priority","icon","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","_jsxs","StyledLink","_jsx","IconWrapper","AlertLinkText","IconLink","IconChevron","direction","displayName","_styled","_ref2","props","linkProps","omit","ExternalLink","Link","target","p","theme","alert","backgroundLight","textColor","fontSizeMedium","border","space","text","lineHeightBody","JsonForm","Component","constructor","arguments","_defineProperty","highlighted","this","location","hash","componentDidMount","scrollToHash","componentDidUpdate","prevProps","setState","toHash","scrollToElement","sanitizeQuerySelector","decodeURIComponent","align","offset","err","Sentry","shouldDisplayForm","fields","fieldsWithVisibleProp","filter","field","defined","visible","length","additionalFieldProps","every","renderForm","formPanelProps","title","renderFooter","renderHeader","FormPanel","render","access","collapsible","initiallyCollapsed","forms","disabled","features","_location","params","_params","router","_router","routes","_routes","otherProps","state","map","formGroup","i","Fragment","withSentryRouter","EmailVerificationModal","Header","Body","actionMessage","closeButton","t","TextBlock","tct","link","EmailAddresses","TAG_HEIGHT","Tag","type","tooltipText","tooltipProps","onDismiss","textMaxWidth","iconsProps","color","tag","iconColor","Tooltip","containerDisplayMode","Background","isValidElement","cloneElement","undefined","IconOpen","Text","maxWidth","DismissButton","event","preventDefault","IconClose","isCircled","TagWrapper","trackClickEvent","trackAnalytics","is_clickable","organization","fontSizeSmall","background","includes","Button","route","name","label","placeholder","help","saveOnBlur","saveMessage","getRouteStringFromRoutes","Array","isArray","routesWithPaths","path","lastAbsolutePathIndex","findLastIndex","startsWith","slice","_ref3","join","WrappedComponent","_class","project","context","getDisplayName","SentryTypes","Project","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","SentryDocumentTitle","renderComponent","UnstyledSettingsPageHeader","subtitle","colorSubtitle","action","body","tabs","noTitleStyles","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","HeaderTitle","Subtitle","Action","BodyWrapper","TabsWrapper","pageTitle","headingColor","styles","purple400","gray400","fontSizeLarge","SettingsPageHeader","noMargin","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","nativeMin","min","module","exports","array","predicate","fromIndex","index"],"sourceRoot":""}