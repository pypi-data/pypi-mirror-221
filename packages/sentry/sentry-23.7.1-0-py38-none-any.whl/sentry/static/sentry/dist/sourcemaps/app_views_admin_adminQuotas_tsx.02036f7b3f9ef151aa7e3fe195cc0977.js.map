{"version":3,"file":"chunks/app_views_admin_adminQuotas_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/internalStatChart.tsx","webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/views/admin/adminQuotas.tsx","webpack:///./app/views/deprecatedAsyncView.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport {Client} from 'sentry/api';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  label: string;\n  resolution: string;\n  since: number;\n  stat: string;\n  height?: number;\n};\n\ntype State = {\n  data: [number, number][] | null;\n  error: boolean;\n  loading: boolean;\n};\n\nclass InternalStatChart extends Component<Props, State> {\n  state: State = {\n    error: false,\n    loading: true,\n    data: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  shouldComponentUpdate(_nextProps: Props, nextState: State) {\n    return this.state.loading !== nextState.loading;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.since !== this.props.since ||\n      prevProps.stat !== this.props.stat ||\n      prevProps.resolution !== this.props.resolution\n    ) {\n      this.fetchData();\n    }\n  }\n\n  fetchData = () => {\n    this.setState({loading: true});\n    this.props.api.request('/internal/stats/', {\n      method: 'GET',\n      data: {\n        since: this.props.since,\n        resolution: this.props.resolution,\n        key: this.props.stat,\n      },\n      success: data =>\n        this.setState({\n          data,\n          loading: false,\n          error: false,\n        }),\n      error: () => this.setState({error: true, loading: false}),\n    });\n  };\n\n  render() {\n    const {loading, error, data} = this.state;\n    const {label, height} = this.props;\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n    if (error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    const series = {\n      seriesName: label,\n      data:\n        data?.map(([timestamp, value]) => ({\n          name: timestamp * 1000,\n          value,\n        })) ?? [],\n    };\n    return (\n      <MiniBarChart\n        height={height ?? 150}\n        series={[series]}\n        isGroupedByDate\n        showTimeInTooltip\n        labelYAxisExtents\n      />\n    );\n  }\n}\n\nexport default withApi(InternalStatChart);\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","import {Fragment} from 'react';\n\nimport TextField from 'sentry/components/forms/fields/textField';\nimport InternalStatChart from 'sentry/components/internalStatChart';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport {t} from 'sentry/locale';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\n\ntype Config = {\n  backend: string;\n  options: Record<string, string>;\n};\n\ntype State = DeprecatedAsyncView['state'] & {\n  config: Config;\n  resolution: string;\n  since: number;\n};\n\nexport default class AdminQuotas extends DeprecatedAsyncView<{}, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      since: new Date().getTime() / 1000 - 3600 * 24 * 7,\n      resolution: '1h',\n    };\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    return [['config', '/internal/quotas/']];\n  }\n\n  renderBody() {\n    const {config} = this.state;\n    return (\n      <Fragment>\n        <h3>Quotas</h3>\n\n        <Panel>\n          <PanelHeader>{t('Config')}</PanelHeader>\n          <PanelBody withPadding>\n            <TextField\n              name=\"backend\"\n              value={config.backend}\n              label=\"Backend\"\n              disabled\n              inline={false}\n              stacked\n            />\n            <TextField\n              name=\"rateLimit\"\n              value={config.options['system.rate-limit']}\n              label=\"Rate Limit\"\n              disabled\n              inline={false}\n              stacked\n            />\n          </PanelBody>\n        </Panel>\n\n        <Panel>\n          <PanelHeader>{t('Total Events')}</PanelHeader>\n          <PanelBody withPadding>\n            <InternalStatChart\n              since={this.state.since}\n              resolution={this.state.resolution}\n              stat=\"events.total\"\n              label=\"Events\"\n            />\n          </PanelBody>\n        </Panel>\n\n        <Panel>\n          <PanelHeader>{t('Dropped Events')}</PanelHeader>\n          <PanelBody withPadding>\n            <InternalStatChart\n              since={this.state.since}\n              resolution={this.state.resolution}\n              stat=\"events.dropped\"\n              label=\"Events\"\n            />\n          </PanelBody>\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["InternalStatChart","Component","constructor","arguments","_defineProperty","error","loading","data","this","setState","props","api","request","method","since","resolution","key","stat","success","componentDidMount","fetchData","shouldComponentUpdate","_nextProps","nextState","state","componentDidUpdate","prevProps","render","label","height","_jsx","LoadingIndicator","LoadingError","onRetry","series","seriesName","map","_ref","timestamp","value","name","MiniBarChart","isGroupedByDate","showTimeInTooltip","labelYAxisExtents","displayName","withApi","getPadding","disablePadding","hasButtons","css","space","_styled","target","p","lightText","theme","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary","AdminQuotas","DeprecatedAsyncView","getDefaultState","super","Date","getTime","getEndpoints","renderBody","config","_jsxs","Fragment","children","Panel","PanelHeader","t","PanelBody","withPadding","TextField","backend","disabled","inline","stacked","options","DeprecatedAsyncComponent","getTitle","SentryDocumentTitle","title","renderComponent"],"sourceRoot":""}