{"version":3,"file":"chunks/app_gettingStartedDocs_java_java_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"4jBASA,MAAMA,GAAeC,EAAAA,EAAAA,IACnB,kUACA,CACEC,QAAQC,EAAAA,EAAAA,IAAA,aACRC,MAAMD,EAAAA,EAAAA,IAACE,EAAAA,EAAY,CAACC,KAAK,6CAIhBC,EAAQ,eAAC,IACpBC,GAGDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAA2B,CAC/B,CACEG,KAAMC,EAAAA,GAASC,QACfC,aAAaC,EAAAA,EAAAA,GAAE,8CACfC,eAAgB,CACd,CACEF,aAAaZ,EAAAA,EAAAA,IAAA,MAAAe,UAAKF,EAAAA,EAAAA,GAAE,YACpBC,eAAgB,CACd,CACEE,SAAU,SACVJ,aACEZ,EAAAA,EAAAA,IAAA,KAAAe,UACGjB,EAAAA,EAAAA,IAAI,oDAAqD,CACxDmB,MAAMjB,EAAAA,EAAAA,IAAA,eAIZiB,KAAO,qMAYT,CACED,SAAU,SACVJ,aAAaC,EAAAA,EAAAA,GACX,mGAEFI,KAAO,0fAyBb,CACEL,aAAaZ,EAAAA,EAAAA,IAAA,MAAAe,UAAKF,EAAAA,EAAAA,GAAE,WACpBC,eAAgB,CACd,CACEE,SAAU,MACVJ,aACEZ,EAAAA,EAAAA,IAAA,KAAAe,UACGjB,EAAAA,EAAAA,IAAI,8CAA+C,CAACmB,MAAMjB,EAAAA,EAAAA,IAAA,eAG/DiB,KAAO,+IAQT,CACED,SAAU,MACVJ,aAAaC,EAAAA,EAAAA,GACX,kGAEFI,KAAO,6zCA2Cb,CACEL,aAAaZ,EAAAA,EAAAA,IAAA,MAAAe,UAAKF,EAAAA,EAAAA,GAAE,SACpBC,eAAgB,CACd,CACEF,aAAaZ,EAAAA,EAAAA,IAAA,KAAAe,UAAIjB,EAAAA,EAAAA,IAAI,oBAAqB,CAACC,QAAQC,EAAAA,EAAAA,IAAA,iBACnDgB,SAAU,QACVC,KAAO,+DAKfC,gBACElB,EAAAA,EAAAA,IAAA,KAAAe,UACGjB,EAAAA,EAAAA,IACC,qIACA,CACEG,MACED,EAAAA,EAAAA,IAACE,EAAAA,EAAY,CAACC,KAAK,+DAO/B,CACEM,KAAMC,EAAAA,GAASS,UACfP,aAAaC,EAAAA,EAAAA,GACX,yEAEFC,eAAgB,CACd,CACEE,SAAU,OACVC,KAAO,6EAIKZ,mTAWlB,CACEI,KAAMC,EAAAA,GAASU,OACfR,aACEZ,EAAAA,EAAAA,IAAA,KAAAe,UACGjB,EAAAA,EAAAA,IACC,oLACA,CAACmB,MAAMjB,EAAAA,EAAAA,IAAA,eAIbc,eAAgB,CACd,CACEE,SAAU,OACVC,KAAO,mLAYXC,gBACEG,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAP,SAAA,EACPf,EAAAA,EAAAA,IAAA,KAAAe,UACGF,EAAAA,EAAAA,GACC,uGAGJb,EAAAA,EAAAA,IAAA,KAAAe,UACGF,EAAAA,EAAAA,GACC,4FAMV,CACEU,OAAOV,EAAAA,EAAAA,GAAE,uBACTD,aAAaC,EAAAA,EAAAA,GAAE,4DACfC,eAAgB,CACd,CACEE,SAAU,OACVC,KAAO,qcAmBXC,gBACElB,EAAAA,EAAAA,IAAA,KAAAe,UACGjB,EAAAA,EAAAA,IACC,gHACA,CACEG,MACED,EAAAA,EAAAA,IAACE,EAAAA,EAAY,CAACC,KAAK,4DAOhC,EAGM,SAASqB,EAAsBC,GAA+B,IAA9B,IAACpB,KAAQqB,GAAmBD,EACjE,OAAOzB,EAAAA,EAAAA,IAAC2B,EAAAA,EAAM,CAACvB,MAAOA,EAAM,CAACC,QAAOR,aAAcA,KAAkB6B,GACtE,CAFgBF,EAAsBI,YAAA,yBAItC,S","sources":["webpack:///./app/gettingStartedDocs/java/java.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nconst introduction = tct(\n  'Sentry for Java is a collection of modules provided by Sentry; it supports Java 1.8 and above. At its core, Sentry for Java provides a raw client for sending events to Sentry. If you use [strong:Spring Boot, Spring, Logback, or Log4j2], we recommend visiting our Sentry Java documentation for installation instructions.',\n  {\n    strong: <strong />,\n    link: <ExternalLink href=\"https://docs.sentry.io/platforms/java/\" />,\n  }\n);\n\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: t('Install the SDK via Gradle, Maven, or SBT:'),\n    configurations: [\n      {\n        description: <h5>{t('Gradle')}</h5>,\n        configurations: [\n          {\n            language: 'groovy',\n            description: (\n              <p>\n                {tct('For Gradle, add to your [code:build.gradle] file:', {\n                  code: <code />,\n                })}\n              </p>\n            ),\n            code: `\n// Make sure mavenCentral is there.\nrepositories {\n    mavenCentral()\n}\n\n// Add Sentry's SDK as a dependency.\ndependencies {\n    implementation 'io.sentry:sentry:6.25.2'\n}\n          `,\n          },\n          {\n            language: 'groovy',\n            description: t(\n              'To upload your source code to Sentry so it can be shown in stack traces, use our Gradle plugin.'\n            ),\n            code: `\nbuildscript {\n  repositories {\n    mavenCentral()\n  }\n}\n\nplugins {\n  id \"io.sentry.jvm.gradle\" version \"3.11.1\"\n}\n\nsentry {\n  // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.\n  // This enables source context, allowing you to see your source\n  // code as part of your stack traces in Sentry.\n  includeSourceContext = true\n\n  org = \"___ORG_SLUG___\"\n  projectName = \"___PROJECT_SLUG___\"\n  authToken = \"your-sentry-auth-token\"\n}\n        `,\n          },\n        ],\n      },\n      {\n        description: <h5>{t('Maven')}</h5>,\n        configurations: [\n          {\n            language: 'xml',\n            description: (\n              <p>\n                {tct('For Maven, add to your [code:pom.xml] file:', {code: <code />})}\n              </p>\n            ),\n            code: `\n<dependency>\n  <groupId>io.sentry</groupId>\n  <artifactId>sentry</artifactId>\n  <version>6.25.2</version>\n</dependency>\n            `,\n          },\n          {\n            language: 'xml',\n            description: t(\n              'To upload your source code to Sentry so it can be shown in stack traces, use our Maven plugin.'\n            ),\n            code: `\n<build>\n  <plugins>\n    <plugin>\n      <groupId>io.sentry</groupId>\n      <artifactId>sentry-maven-plugin</artifactId>\n      <version>0.0.2</version>\n      <configuration>\n      <!-- for showing output of sentry-cli -->\n      <debugSentryCli>true</debugSentryCli>\n\n      <!-- download the latest sentry-cli and provide path to it here -->\n      <!-- download it here: https://github.com/getsentry/sentry-cli/releases -->\n      <!-- minimum required version is 2.17.3 -->\n      <sentryCliExecutablePath>/path/to/sentry-cli</sentryCliExecutablePath>\n\n      <org>___ORG_SLUG___</org>\n\n      <project>___PROJECT_SLUG___</project>\n\n      <!-- in case you're self hosting, provide the URL here -->\n      <!--<url>http://localhost:8000/</url>-->\n\n      <!-- provide your auth token via SENTRY_AUTH_TOKEN environment variable -->\n      <!-- you can find it in Sentry UI: Settings > Account > API > Auth Tokens -->\n      <authToken>env.SENTRY_AUTH_TOKEN</authToken>\n      </configuration>\n      <executions>\n        <execution>\n            <phase>generate-resources</phase>\n            <goals>\n                <goal>uploadSourceBundle</goal>\n            </goals>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n...\n</build>\n            `,\n          },\n        ],\n      },\n      {\n        description: <h5>{t('SBT')}</h5>,\n        configurations: [\n          {\n            description: <p>{tct('For [strong:SBT]:', {strong: <strong />})}</p>,\n            language: 'scala',\n            code: `libraryDependencies += \"io.sentry\" % \"sentry\" % \"6.25.2\"`,\n          },\n        ],\n      },\n    ],\n    additionalInfo: (\n      <p>\n        {tct(\n          'To upload your source code to Sentry so it can be shown in stack traces, please refer to [link:Manually Uploading Source Context].',\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/java/source-context/\" />\n            ),\n          }\n        )}\n      </p>\n    ),\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: t(\n      \"Configure Sentry as soon as possible in your application's lifecycle:\"\n    ),\n    configurations: [\n      {\n        language: 'java',\n        code: `\nimport io.sentry.Sentry;\n\nSentry.init(options -> {\n  options.setDsn(\"${dsn}\");\n  // Set tracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n  // We recommend adjusting this value in production.\n  options.setTracesSampleRate(1.0);\n  // When first trying Sentry it's good to see what the SDK is doing:\n  options.setDebug(true);\n});\n      `,\n      },\n    ],\n  },\n  {\n    type: StepType.VERIFY,\n    description: (\n      <p>\n        {tct(\n          'Trigger your first event from your development environment by intentionally creating an error with the [code:Sentry#captureException] method, to test that everything is working:',\n          {code: <code />}\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'java',\n        code: `\nimport java.lang.Exception;\nimport io.sentry.Sentry;\n\ntry {\n  throw new Exception(\"This is a test.\");\n} catch (Exception e) {\n  Sentry.captureException(e);\n}\n      `,\n      },\n    ],\n    additionalInfo: (\n      <Fragment>\n        <p>\n          {t(\n            \"If you're new to Sentry, use the email alert to access your account and complete a product tour.\"\n          )}\n        </p>\n        <p>\n          {t(\n            \"If you're an existing user and have disabled alerts, you won't receive this email.\"\n          )}\n        </p>\n      </Fragment>\n    ),\n  },\n  {\n    title: t('Measure Performance'),\n    description: t('You can capture transactions using the SDK. For example:'),\n    configurations: [\n      {\n        language: 'java',\n        code: `\nimport io.sentry.ITransaction;\nimport io.sentry.Sentry;\nimport io.sentry.SpanStatus;\n\n// A good name for the transaction is key, to help identify what this is about\nITransaction transaction = Sentry.startTransaction(\"processOrderBatch()\", \"task\");\ntry {\nprocessOrderBatch();\n} catch (Exception e) {\ntransaction.setThrowable(e);\ntransaction.setStatus(SpanStatus.INTERNAL_ERROR);\nthrow e;\n} finally {\ntransaction.finish();\n}\n        `,\n      },\n    ],\n    additionalInfo: (\n      <p>\n        {tct(\n          'For more information about the API and automatic instrumentations included in the SDK, [link:visit the docs].',\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/java/performance/\" />\n            ),\n          }\n        )}\n      </p>\n    ),\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithJava({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} introduction={introduction} {...props} />;\n}\n\nexport default GettingStartedWithJava;\n"],"names":["introduction","tct","strong","_jsx","link","ExternalLink","href","steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","t","configurations","children","language","code","additionalInfo","CONFIGURE","VERIFY","_jsxs","Fragment","title","GettingStartedWithJava","_ref","props","Layout","displayName"],"sourceRoot":""}