{"version":3,"file":"chunks/app_gettingStartedDocs_java_spring-boot_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/gettingStartedDocs/java/spring-boot.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nconst introduction = tct(\n  \"There are two variants of Sentry available for Spring Boot. If you're using Spring Boot 2, use [springBootStarterLink:sentry-spring-boot-starter]. If you're using Spring Boot 3, use [springBootStarterJakartaLink:sentry-spring-boot-starter-jakarta] instead. Sentry's integration with [springBootLink:Spring Boot] supports Spring Boot 2.1.0 and above to report unhandled exceptions as well as release and registration of beans. If you're on an older version, use [legacyIntegrationLink:our legacy integration].\",\n  {\n    springBootStarterLink: (\n      <ExternalLink href=\"https://github.com/getsentry/sentry-java/tree/master/sentry-spring-boot-starter\" />\n    ),\n    springBootStarterJakartaLink: (\n      <ExternalLink href=\"https://github.com/getsentry/sentry-java/tree/master/sentry-spring-boot-starter-jakarta\" />\n    ),\n    springBootLink: <ExternalLink href=\"https://spring.io/projects/spring-boot\" />,\n    legacyIntegrationLink: (\n      <ExternalLink href=\"https://docs.sentry.io/platforms/java/legacy/spring/\" />\n    ),\n  }\n);\n\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: t('Install using either Maven or Gradle:'),\n    configurations: [\n      {\n        description: <h5>{t('Maven')}</h5>,\n        configurations: [\n          {\n            language: 'xml',\n            description: <strong>{t('Spring Boot 2')}</strong>,\n            code: `\n<dependency>\n    <groupId>io.sentry</groupId>\n    <artifactId>sentry-spring-boot-starter</artifactId>\n    <version>{{@inject packages.version('sentry.java.spring-boot', '4.0.0') }}</version>\n</dependency>\n          `,\n          },\n          {\n            language: 'xml',\n            description: <strong>{t('Spring Boot 3')}</strong>,\n            code: `\n<dependency>\n    <groupId>io.sentry</groupId>\n    <artifactId>sentry-spring-boot-starter-jakarta</artifactId>\n    <version>{{@inject packages.version('sentry.java.spring-boot.jakarta', '6.7.0') }}</version>\n</dependency>\n        `,\n          },\n        ],\n      },\n      {\n        description: <h5>{t('Graddle')}</h5>,\n        configurations: [\n          {\n            language: 'properties',\n            description: <strong>{t('Spring Boot 2')}</strong>,\n            code: \"implementation 'io.sentry:sentry-spring-boot-starter:{{@inject packages.version('sentry.java.spring-boot', '4.0.0') }}'\",\n          },\n          {\n            language: 'properties',\n            description: <strong>{t('Spring Boot 3')}</strong>,\n            code: \"implementation 'io.sentry:sentry-spring-boot-starter-jakarta:{{@inject packages.version('sentry.java.spring-boot.jakarta', '6.7.0') }}'\",\n          },\n        ],\n      },\n    ],\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: (\n      <p>\n        {tct(\n          'Open up [applicationPropertiesCode:src/main/application.properties] (or [applicationYmlCode:src/main/application.yml]) and configure the DSN, and any other settings you need:',\n          {\n            applicationPropertiesCode: <code />,\n            applicationYmlCode: <code />,\n          }\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'properties',\n        description: (\n          <p>{tct('Modify [code:src/main/application.properties]:', {code: <code />})}</p>\n        ),\n        code: `\nsentry.dsn=${dsn}\n# Set traces-sample-rate to 1.0 to capture 100% of transactions for performance monitoring.\n# We recommend adjusting this value in production.\nsentry.traces-sample-rate=1.0\n        `,\n      },\n      {\n        language: 'properties',\n        description: (\n          <p>{tct('Or, modify [code:src/main/application.yml]:', {code: <code />})}</p>\n        ),\n        code: `\nsentry:\n  dsn:${dsn}\n  # Set traces-sample-rate to 1.0 to capture 100% of transactions for performance monitoring.\n  # We recommend adjusting this value in production.\n  traces-sample-rate: 1.0\n        `,\n        additionalInfo: (\n          <p>\n            {tct(\n              'If you use Logback for logging you may also want to send error logs to Sentry. Add a dependency to the [sentryLogbackCode:sentry-logback] module using either Maven or Gradle. Sentry Spring Boot Starter will auto-configure [sentryAppenderCode:SentryAppender].',\n              {sentryAppenderCode: <code />, sentryLogbackCode: <code />}\n            )}\n          </p>\n        ),\n      },\n      {\n        description: <h5>{t('Maven')}</h5>,\n        configurations: [\n          {\n            language: 'xml',\n            code: `\n<dependency>\n    <groupId>io.sentry</groupId>\n    <artifactId>sentry-logback</artifactId>\n    <version>{{@inject packages.version('sentry.java.logback', '4.0.0') }}</version>\n</dependency>\n          `,\n          },\n          {\n            language: 'xml',\n            description: t(\n              'To upload your source code to Sentry so it can be shown in stack traces, use our Maven plugin.'\n            ),\n            code: `\n<build>\n  <plugins>\n    <plugin>\n      <groupId>io.sentry</groupId>\n      <artifactId>sentry-maven-plugin</artifactId>\n      <version>{{@inject packages.version('sentry.java.mavenplugin', '0.0.2') }}</version>\n      <configuration>\n        <!-- for showing output of sentry-cli -->\n        <debugSentryCli>true</debugSentryCli>\n\n        <!-- download the latest sentry-cli and provide path to it here -->\n        <!-- download it here: https://github.com/getsentry/sentry-cli/releases -->\n        <!-- minimum required version is 2.17.3 -->\n        <sentryCliExecutablePath>/path/to/sentry-cli</sentryCliExecutablePath>\n\n        <org>___ORG_SLUG___</org>\n\n        <project>___PROJECT_SLUG___</project>\n\n        <!-- in case you're self hosting, provide the URL here -->\n        <!--<url>http://localhost:8000/</url>-->\n\n        <!-- provide your auth token via SENTRY_AUTH_TOKEN environment variable -->\n        <!-- you can find it in Sentry UI: Settings > Account > API > Auth Tokens -->\n        <authToken>env.SENTRY_AUTH_TOKEN}</authToken>\n      </configuration>\n      <executions>\n        <execution>\n          <phase>generate-resources</phase>\n          <goals>\n            <goal>uploadSourceBundle</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n...\n</build>\n        `,\n          },\n        ],\n      },\n      {\n        description: <h5>{t('Gradle')}</h5>,\n        configurations: [\n          {\n            language: 'properties',\n            code: \"implementation 'io.sentry:sentry-logback:{{@inject packages.version('sentry.java.logback', '4.0.0') }}'\",\n          },\n          {\n            language: 'javascript', // TODO: This shouldn't be javascript but because of better formatting we use it for now\n            description: t(\n              'To upload your source code to Sentry so it can be shown in stack traces, use our Gradle plugin.'\n            ),\n            code: `\nbuildscript {\n  repositories {\n    mavenCentral()\n  }\n}\n\nplugins {\n  id \"io.sentry.jvm.gradle\" version \"{{@inject packages.version('sentry.java.android.gradle-plugin', '3.9.0') }}\"\n}\n\nsentry {\n  // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.\n  // This enables source context, allowing you to see your source\n  // code as part of your stack traces in Sentry.\n  includeSourceContext = true\n\n  org = \"___ORG_SLUG___\"\n  projectName = \"___PROJECT_SLUG___\"\n  authToken = \"your-sentry-auth-token\"\n}\n        `,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    type: StepType.VERIFY,\n    description: t(\n      'Then create an intentional error, so you can test that everything is working using either Java or Kotlin:'\n    ),\n    configurations: [\n      {\n        description: <h5>Java</h5>,\n        language: 'javascript', // TODO: This shouldn't be javascript but because of better formatting we use it for now\n        code: `\n        import java.lang.Exception;\n        import io.sentry.Sentry;\n\n        try {\n          throw new Exception(\"This is a test.\");\n        } catch (Exception e) {\n          Sentry.captureException(e);\n        }\n        `,\n      },\n      {\n        description: <h5>Kotlin</h5>,\n        language: 'javascript', // TODO: This shouldn't be javascript but because of better formatting we use it for now\n        code: `\n        import java.lang.Exception\n        import io.sentry.Sentry\n\n        try {\n          throw Exception(\"This is a test.\")\n        } catch (e: Exception) {\n          Sentry.captureException(e)\n        }\n        `,\n      },\n    ],\n    additionalInfo: (\n      <Fragment>\n        <p>\n          {t(\n            \"If you're new to Sentry, use the email alert to access your account and complete a product tour.\"\n          )}\n        </p>\n        <p>\n          {t(\n            \"If you're an existing user and have disabled alerts, you won't receive this email.\"\n          )}\n        </p>\n      </Fragment>\n    ),\n  },\n  {\n    title: t('Measure Performance'),\n    description: (\n      <p>\n        {tct(\n          'Each incoming Spring MVC HTTP request is automatically turned into a transaction. To create spans around bean method executions, annotate bean method with [code:@SentrySpan] annotation:',\n          {code: <code />}\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        description: <h5>Java</h5>,\n        configurations: [\n          {\n            language: 'javascript', // TODO: This shouldn't be javascript but because of better formatting we use it for now\n            description: <strong>{t('Spring Boot 2')}</strong>,\n            code: `\nimport org.springframework.stereotype.Component;\nimport io.sentry.spring.tracing.SentrySpan;\n\n@Component\nclass PersonService {\n\n  @SentrySpan\n  Person findById(Long id) {\n    ...\n  }\n}\n            `,\n          },\n          {\n            language: 'javascript', // TODO: This shouldn't be javascript but because of better formatting we use it for now\n            description: <strong>{t('Spring Boot 3')}</strong>,\n            code: `\n            import org.springframework.stereotype.Component;\n            import io.sentry.spring.jakarta.tracing.SentrySpan;\n\n            @Component\n            class PersonService {\n\n              @SentrySpan\n              Person findById(Long id) {\n                ...\n              }\n            }\n            `,\n          },\n        ],\n      },\n      {\n        description: <h5>Kotlin</h5>,\n        configurations: [\n          {\n            language: 'javascript', // TODO: This shouldn't be javascript but because of better formatting we use it for now\n            description: <strong>{t('Spring Boot 2')}</strong>,\n            code: `\nimport org.springframework.stereotype.Component\nimport io.sentry.spring.tracing.SentrySpan\n\n@Component\nclass PersonService {\n\n  @SentrySpan(operation = \"task\")\n  fun findById(id: Long): Person {\n    ...\n  }\n}\n            `,\n          },\n          {\n            language: 'javascript', // TODO: This shouldn't be javascript but because of better formatting we use it for now\n            description: <strong>{t('Spring Boot 3')}</strong>,\n            code: `\nimport org.springframework.stereotype.Component\nimport io.sentry.spring.jakarta.tracing.SentrySpan\n\n@Component\nclass PersonService {\n\n  @SentrySpan(operation = \"task\")\n  fun findById(id: Long): Person {\n    ...\n  }\n}\n            `,\n          },\n        ],\n      },\n    ],\n    additionalInfo: (\n      <p>\n        {tct(\n          'Check out [docLink:the documentation] to learn more about the API and integrated instrumentations.',\n          {\n            docLink: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/java/guides/spring-boot/performance/instrumentation/\" />\n            ),\n          }\n        )}\n      </p>\n    ),\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithSpringBoot({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} introduction={introduction} {...props} />;\n}\n\nexport default GettingStartedWithSpringBoot;\n"],"names":["introduction","tct","springBootStarterLink","_jsx","ExternalLink","href","springBootStarterJakartaLink","springBootLink","legacyIntegrationLink","steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","t","configurations","children","language","code","CONFIGURE","applicationPropertiesCode","applicationYmlCode","additionalInfo","sentryAppenderCode","sentryLogbackCode","VERIFY","_jsxs","Fragment","title","docLink","GettingStartedWithSpringBoot","_ref","props","Layout","displayName"],"sourceRoot":""}