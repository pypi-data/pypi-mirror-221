{"version":3,"file":"chunks/app_gettingStartedDocs_java_spring_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/gettingStartedDocs/java/spring.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nconst introduction = tct(\n  \"There are two variants of Sentry available for Spring. If you're using Spring 5, use [sentrySpringLink:sentry-spring]. If you're using Spring 6, use [sentrySpringJakartaLink:sentry-spring-jakarta] instead. Sentry's integration with Spring supports Spring Framework 5.1.2 and above to report unhandled exceptions and optional user information. If you're on an older version, use [legacyIntegrationLink:our legacy integration].\",\n  {\n    sentrySpringLink: (\n      <ExternalLink href=\"https://github.com/getsentry/sentry-java/tree/master/sentry-spring\" />\n    ),\n    sentrySpringJakartaLink: (\n      <ExternalLink href=\"https://github.com/getsentry/sentry-java/tree/master/sentry-spring-jakarta\" />\n    ),\n    legacyIntegrationLink: (\n      <ExternalLink href=\"https://docs.sentry.io/platforms/java/guides/spring/legacy/\" />\n    ),\n  }\n);\n\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: t(\n      \"Install Sentry's integration with Spring using either Maven or Gradle:\"\n    ),\n    configurations: [\n      {\n        description: <h5>{t('Maven')}</h5>,\n        configurations: [\n          {\n            language: 'xml',\n            description: <strong>{t('Spring 5')}</strong>,\n            code: `\n<dependency>\n  <groupId>io.sentry</groupId>\n  <artifactId>sentry-spring</artifactId>\n  <version>6.25.2</version>\n</dependency>\n          `,\n          },\n          {\n            language: 'xml',\n            description: <strong>{t('Spring 6')}</strong>,\n            code: `\n<dependency>\n  <groupId>io.sentry</groupId>\n  <artifactId>sentry-spring-jakarta</artifactId>\n  <version>6.25.2</version>\n</dependency>\n        `,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: (\n      <Fragment>\n        {t(\"Configure Sentry as soon as possible in your application's lifecycle:\")}\n        <p>\n          {tct(\n            'The [codeSentrySpring:sentry-spring] and [codeSentrySpringJakarta:sentry-spring-jakarta] libraries provide an [codeEnableSentry:@EnableSentry] annotation that registers all required Spring beans. [codeEnableSentry:@EnableSentry] can be placed on any class annotated with [configurationLink:@Configuration] including the main entry class in Spring Boot applications annotated with [springBootApplicationLink:@SpringBootApplication].',\n            {\n              codeSentrySpring: <code />,\n              codeSentrySpringJakarta: <code />,\n              codeEnableSentry: <code />,\n              configurationLink: (\n                <ExternalLink href=\"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Configuration.html\" />\n              ),\n              springBootApplicationLink: (\n                <ExternalLink href=\"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/SpringBootApplication.html\" />\n              ),\n            }\n          )}\n        </p>\n      </Fragment>\n    ),\n    configurations: [\n      {\n        description: <h5>{t('Java')}</h5>,\n        configurations: [\n          {\n            language: 'java',\n            description: <strong>{t('Spring 5')}</strong>,\n            code: `\nimport io.sentry.spring.EnableSentry;\n\n@EnableSentry(dsn = \"${dsn}\")\n@Configuration\nclass SentryConfiguration {\n}\n          `,\n          },\n          {\n            language: 'java',\n            description: <strong>{t('Spring 6')}</strong>,\n            code: `\nimport io.sentry.spring.jakarta.EnableSentry;\n\n@EnableSentry(dsn = \"${dsn}\")\n@Configuration\nclass SentryConfiguration {\n}\n        `,\n          },\n        ],\n      },\n      {\n        description: <h5>{t('Kotlin')}</h5>,\n        configurations: [\n          {\n            language: 'java',\n            description: <strong>{t('Spring 5')}</strong>,\n            code: `\nimport io.sentry.spring.EnableSentry\nimport org.springframework.core.Ordered\n\n@EnableSentry(\n  dsn = \"${dsn}\",\n  exceptionResolverOrder = Ordered.LOWEST_PRECEDENCE\n)\n          `,\n          },\n          {\n            language: 'java',\n            description: <strong>{t('Spring 6')}</strong>,\n            code: `\nimport io.sentry.spring.jakarta.EnableSentry\nimport org.springframework.core.Ordered\n\n@EnableSentry(\n  dsn = \"${dsn}\",\n  exceptionResolverOrder = Ordered.LOWEST_PRECEDENCE\n)\n        `,\n          },\n        ],\n      },\n      {\n        description: <h5>{t('Source Context')}</h5>,\n        configurations: [\n          {\n            language: 'xml',\n            description: t(\n              'To upload your source code to Sentry so it can be shown in stack traces, use our Maven plugin.'\n            ),\n            code: `\n<build>\n  <plugins>\n    <plugin>\n    <groupId>io.sentry</groupId>\n    <artifactId>sentry-maven-plugin</artifactId>\n    <version>0.0.2</version>\n    <configuration>\n      <!-- for showing output of sentry-cli -->\n      <debugSentryCli>true</debugSentryCli>\n\n      <!-- download the latest sentry-cli and provide path to it here -->\n      <!-- download it here: https://github.com/getsentry/sentry-cli/releases -->\n      <!-- minimum required version is 2.17.3 -->\n      <sentryCliExecutablePath>/path/to/sentry-cli</sentryCliExecutablePath>\n\n      <org>___ORG_SLUG___</org>\n\n      <project>___PROJECT_SLUG___</project>\n\n      <!-- in case you're self hosting, provide the URL here -->\n      <!--<url>http://localhost:8000/</url>-->\n\n      <!-- provide your auth token via SENTRY_AUTH_TOKEN environment variable -->\n      <!-- you can find it in Sentry UI: Settings > Account > API > Auth Tokens -->\n      <authToken>env.SENTRY_AUTH_TOKEN</authToken>\n    </configuration>\n    <executions>\n      <execution>\n        <phase>generate-resources</phase>\n        <goals>\n        <goal>uploadSourceBundle</goal>\n        </goals>\n      </execution>\n    </executions>\n  </plugin>\n</plugins>\n...\n        `,\n          },\n        ],\n      },\n      {\n        description: <h5>{t('Graddle')}</h5>,\n        configurations: [\n          {\n            description: <strong>{t('Spring 5')}</strong>,\n            language: 'groovy',\n            code: `implementation 'io.sentry:sentry-spring:6.25.2'`,\n          },\n          {\n            description: <strong>{t('Spring 6')}</strong>,\n            language: 'groovy',\n            code: `implementation 'io.sentry:sentry-spring-jakarta:6.25.2'`,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    type: StepType.VERIFY,\n    description: t(\n      'Last, create an intentional error, so you can test that everything is working:'\n    ),\n    configurations: [\n      {\n        description: <h5>Java</h5>,\n        language: 'java',\n        code: `\nimport java.lang.Exception;\nimport io.sentry.Sentry;\n\ntry {\n  throw new Exception(\"This is a test.\");\n} catch (Exception e) {\n  Sentry.captureException(e);\n}\n        `,\n      },\n      {\n        description: <h5>Kotlin</h5>,\n        language: 'java',\n        code: `\nimport java.lang.Exception\nimport io.sentry.Sentry\n\ntry {\n  throw Exception(\"This is a test.\")\n} catch (e: Exception) {\n  Sentry.captureException(e)\n}\n        `,\n      },\n    ],\n    additionalInfo: (\n      <Fragment>\n        <p>\n          {t(\n            \"If you're new to Sentry, use the email alert to access your account and complete a product tour.\"\n          )}\n        </p>\n        <p>\n          {t(\n            \"If you're an existing user and have disabled alerts, you won't receive this email.\"\n          )}\n        </p>\n      </Fragment>\n    ),\n  },\n  {\n    title: t('Source Context'),\n    configurations: [\n      {\n        language: 'groovy',\n        description: t(\n          'To upload your source code to Sentry so it can be shown in stack traces, use our Gradle plugin.'\n        ),\n        code: `\nbuildscript {\nrepositories {\n  mavenCentral()\n}\n}\n\nplugins {\nid \"io.sentry.jvm.gradle\" version \"3.11.1\"\n}\n\nsentry {\n// Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.\n// This enables source context, allowing you to see your source\n// code as part of your stack traces in Sentry.\nincludeSourceContext = true\n\norg = \"___ORG_SLUG___\"\nprojectName = \"___PROJECT_SLUG___\"\nauthToken = \"your-sentry-auth-token\"\n}\n          `,\n      },\n    ],\n\n    additionalInfo: (\n      <p>\n        {tct(\n          'For other dependency managers see the [mavenRepositorySpring5Link:central Maven repository (Spring 5)] and [mavenRepositorySpring6Link:central Maven repository (Spring 6)].',\n          {\n            mavenRepositorySpring5Link: (\n              <ExternalLink href=\"https://central.sonatype.com/artifact/io.sentry/sentry-spring/6.26.0\" />\n            ),\n            mavenRepositorySpring6Link: (\n              <ExternalLink href=\"https://central.sonatype.com/artifact/io.sentry/sentry-spring-jakarta/6.26.0\" />\n            ),\n          }\n        )}\n      </p>\n    ),\n  },\n  {\n    title: t('Measure Performance'),\n    description: (\n      <p>\n        {tct(\n          'Check out [link:the documentation] to learn how to configure and use Sentry Performance Monitoring with Spring.',\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/java/guides/spring/performance/\" />\n            ),\n          }\n        )}\n      </p>\n    ),\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithSpring({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} introduction={introduction} {...props} />;\n}\n\nexport default GettingStartedWithSpring;\n"],"names":["introduction","tct","sentrySpringLink","_jsx","ExternalLink","href","sentrySpringJakartaLink","legacyIntegrationLink","steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","t","configurations","children","language","code","CONFIGURE","_jsxs","Fragment","codeSentrySpring","codeSentrySpringJakarta","codeEnableSentry","configurationLink","springBootApplicationLink","VERIFY","additionalInfo","title","mavenRepositorySpring5Link","mavenRepositorySpring6Link","link","GettingStartedWithSpring","_ref","props","Layout","displayName"],"sourceRoot":""}