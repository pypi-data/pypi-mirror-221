{"version":3,"file":"chunks/app_views_settings_components_settingsPageHeader_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6aA+BA,SAASA,EAA0BC,GAUzB,IAV0B,KAClCC,EAAI,MACJC,EAAK,SACLC,EAAQ,cACRC,EAAa,OACbC,EAAM,KACNC,EAAI,KACJC,EAAI,cACJC,GAAgB,KACbC,GACGT,EAIN,MAAMU,GAAYP,EAElB,OACEQ,EAAAA,EAAAA,IAAA,UAASF,EAAKG,SAAA,EACZD,EAAAA,EAAAA,IAACE,EAAe,CAACH,SAAUA,EAASE,SAAA,EAClCD,EAAAA,EAAAA,IAACG,EAAY,CAAAF,SAAA,CACVX,IAAQc,EAAAA,EAAAA,IAACC,EAAI,CAAAJ,SAAEX,IACfC,IACCS,EAAAA,EAAAA,IAACM,EAAK,CAACV,KAAMA,EAAMW,OAAQV,EAAcI,SAAA,EACvCG,EAAAA,EAAAA,IAACI,EAAW,CAAAP,SAAEV,IACbC,IAAYY,EAAAA,EAAAA,IAACK,EAAQ,CAAChB,cAAeA,EAAcQ,SAAET,UAI3DE,IAAUU,EAAAA,EAAAA,IAACM,EAAM,CAACX,SAAUA,EAASE,SAAEP,OAGzCC,IAAQS,EAAAA,EAAAA,IAACO,EAAW,CAAAV,SAAEN,IACtBC,IAAQQ,EAAAA,EAAAA,IAACQ,EAAW,CAAAX,SAAEL,MAG7B,CAnCSR,EAA0ByB,YAAA,6BA0CnC,MAAML,GAAcM,EAAAA,EAAAA,GAAO,KAAI,CAAAC,OAAA,aAAXD,EAChBE,GAAKA,EAAEC,MAAMC,KAAKC,WAAS,WACpBH,GAAKA,EAAEC,MAAMG,cAAY,qBAK9BlB,GAAkBY,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,6BAEpBE,GAAMA,EAAEjB,SAAW,SAAW,cAAa,KAEtDI,GAAeW,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,CAAAO,KAAA,SAAAC,OAAA,WAI5BhB,GAAQQ,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,EACVE,IAAMA,EAAET,QAAW,sCAAmC,YAC9CgB,EAAAA,EAAAA,GAAM,GAAE,KAAIA,EAAAA,EAAAA,GAAM,GAAE,KAAIA,EAAAA,EAAAA,GAAM,GAAE,OAEtCd,GAAWK,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,UACnBE,GAAMA,EAAEvB,cAAgBuB,EAAEC,MAAMO,UAAYR,EAAEC,MAAMQ,SAAQ,+BAExDT,GAAKA,EAAEC,MAAMS,eAAa,aAC5BH,EAAAA,EAAAA,GAAM,KAAI,SAGjBlB,GAAOS,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,iBACRS,EAAAA,EAAAA,GAAM,GAAE,KAGpBb,GAASI,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,eACZE,GAAMA,EAAEjB,SAAW,KAAMwB,EAAAA,EAAAA,GAAM,IAAG,KAG5CI,GAAqBb,EAAAA,EAAAA,GAAO1B,EAA0B,CAAA2B,OAAA,aAAjCD,CAAkC,+BAI5CS,EAAAA,EAAAA,GAAM,GAAE,KAGnBZ,GAAcG,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,sBAEjBS,EAAAA,EAAAA,GAAM,GAAE,KAElBX,GAAcE,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,CAAAO,KAAA,SAAAC,OAAA,oBAKjC,G","sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * The page title\n   */\n  title: React.ReactNode;\n  /**\n   * A CTA Button\n   */\n  action?: React.ReactNode;\n  body?: React.ReactNode;\n  className?: string;\n  /**\n   * Use a purple color for the subtitle\n   */\n  colorSubtitle?: boolean;\n  /**\n   * Icon to the left of the title\n   */\n  icon?: React.ReactNode;\n  /**\n   * Disables font styles in the title. Allows for more custom titles.\n   */\n  noTitleStyles?: boolean;\n  subtitle?: React.ReactNode;\n  tabs?: React.ReactNode;\n};\n\nfunction UnstyledSettingsPageHeader({\n  icon,\n  title,\n  subtitle,\n  colorSubtitle,\n  action,\n  body,\n  tabs,\n  noTitleStyles = false,\n  ...props\n}: Props) {\n  // If Header is narrow, use align-items to center <Action>.\n  // Otherwise, use a fixed margin to prevent an odd alignment.\n  // This is needed as Actions could be a button or a dropdown.\n  const isNarrow = !subtitle;\n\n  return (\n    <div {...props}>\n      <TitleAndActions isNarrow={isNarrow}>\n        <TitleWrapper>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n              {subtitle && <Subtitle colorSubtitle={colorSubtitle}>{subtitle}</Subtitle>}\n            </Title>\n          )}\n        </TitleWrapper>\n        {action && <Action isNarrow={isNarrow}>{action}</Action>}\n      </TitleAndActions>\n\n      {body && <BodyWrapper>{body}</BodyWrapper>}\n      {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n    </div>\n  );\n}\n\ninterface TitleProps extends React.HTMLAttributes<HTMLDivElement> {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n}\n\nconst HeaderTitle = styled('h4')`\n  ${p => p.theme.text.pageTitle};\n  color: ${p => p.theme.headingColor};\n  flex: 1;\n  margin: 0;\n`;\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')<{colorSubtitle?: boolean}>`\n  color: ${p => (p.colorSubtitle ? p.theme.purple400 : p.theme.gray400)};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n"],"names":["UnstyledSettingsPageHeader","_ref","icon","title","subtitle","colorSubtitle","action","body","tabs","noTitleStyles","props","isNarrow","_jsxs","children","TitleAndActions","TitleWrapper","_jsx","Icon","Title","styled","HeaderTitle","Subtitle","Action","BodyWrapper","TabsWrapper","displayName","_styled","target","p","theme","text","pageTitle","headingColor","name","styles","space","purple400","gray400","fontSizeLarge","SettingsPageHeader"],"sourceRoot":""}