{"version":3,"file":"chunks/app_views_settings_projectAlerts_settings_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6pBAgDA,SAASA,EAASC,GAWR,IAXS,qBACjBC,EAAuB,CAAC,EAAC,MACzBC,EAAK,OACLC,EAAM,OACNC,EAAM,SACNC,EAAQ,aACRC,EAAY,aACZC,EAAY,YACZC,EAAW,mBACXC,GAAqB,KAClBC,GACGV,EACN,MAAOW,EAAWC,IAAeC,EAAAA,EAAAA,UAASJ,GACpCK,GAAuBC,EAAAA,EAAAA,cAAY,IAAMH,GAAYI,IAAYA,KAAU,IAEjF,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAK,CAACC,GAAqB,iBAAVjB,GAAqBkB,EAAAA,EAAAA,GAAsBlB,QAASmB,EAAUC,SAAA,CAC7EpB,IACCe,EAAAA,EAAAA,IAACM,EAAAA,EAAW,CAAAD,SAAA,CACTpB,EACAM,IACCgB,EAAAA,EAAAA,IAACC,EAAQ,CAACC,QAASZ,EAAqBQ,UACtCE,EAAAA,EAAAA,IAACG,EAAAA,GAAW,CACV,eAAa,8BACbC,UAAWjB,EAAY,OAAS,KAChCkB,KAAK,aAMfZ,EAAAA,EAAAA,IAACa,EAAAA,EAAS,CAACC,OAAQpB,EAAUW,SAAA,CACF,mBAAjBf,GAA+BA,EAAa,CAACL,QAAOC,WAE3DA,EAAO6B,KAAIC,IACV,GAAqB,mBAAVA,EACT,OAAOA,IAGT,MAAOC,aAAcC,KAAMC,GAA4BH,EASvD,OALiB,IAAb5B,IACF+B,EAAyB/B,UAAW,EACpC+B,EAAyBC,oBAAiBhB,IAI1CG,EAAAA,EAAAA,IAACc,EAAAA,EAAe,CACdlC,OAAQA,EACRC,SAAUA,KAENK,KACAT,EACJgC,MAAOG,EACPG,YAAa7B,EAAW6B,cAAiB,IAAGN,EAAMO,QAJ7CP,EAAMO,KAKX,IAGmB,mBAAjBlC,GAA+BA,EAAa,CAACJ,QAAOC,gBAIpE,CAhESJ,EAAS0C,YAAA,YAkElB,UAEMhB,GAAWiB,EAAAA,EAAAA,GAAO,OAAM,CAAAC,OAAA,WAAbD,CAAc,CAAAF,KAAA,SAAAI,OAAA,kB,ojBC/E/B,MAAMC,UAAiBC,EAAAA,UAAwBC,cAAA,SAAAC,YAAAC,EAAAA,EAAAA,GAAA,aAC9B,CAEbV,YAAaW,KAAKC,MAAMC,UAAUC,MACnC,CAEDC,oBACEJ,KAAKK,cACP,CAEAC,mBAAmBC,GACjB,GAAIP,KAAKC,MAAMC,UAAYF,KAAKC,MAAMC,SAASC,OAASI,EAAUL,SAASC,KAAM,CAC/E,MAAMA,EAAOH,KAAKC,MAAMC,SAASC,KACjCH,KAAKK,aAAaF,GAClBH,KAAKQ,SAAS,CAACnB,YAAac,GAC9B,CACF,CAEAE,aAAaI,GAEX,MAAMN,EAAOM,GAAUT,KAAKC,MAAMC,UAAUC,KAE5C,GAAKA,EAOL,IACEO,KAAgBxC,EAAAA,EAAAA,GAAsByC,mBAAmBR,IAAQ,CAC/DS,MAAO,SACPC,QAAS,KAEb,CAAE,MAAOC,GACPC,EAAAA,GAAwBD,EAC1B,CACF,CAEAE,kBAAkB/D,GAChB,MAAMgE,EAAwBhE,EAAOiE,QACnCnC,GAA0B,mBAAVA,IAAwBoC,EAAAA,EAAAA,IAAQpC,GAAOqC,WAGzD,GAAInE,EAAOoE,SAAWJ,EAAsBI,OAAQ,CAClD,MAAM,qBAACtE,KAAyBkD,GAASD,KAAKC,MAS9C,OAP2BgB,EAAsBK,OAAMvC,GACxB,mBAAlBA,EAAMqC,SACPrC,EAAMqC,QAAQ,IAAInB,KAAUlD,KAE9BgC,EAAMqC,SAIlB,CAEA,OAAO,CACT,CAEAG,WAAUzE,GAiBP,IAjBQ,OACTG,EAAM,eACNuE,EAAc,MACdxE,GAcDF,EAGC,OAF0BkD,KAAKgB,kBAAkB/D,IAI9CuE,GAAgBpE,cAChBoE,GAAgBnE,cAKZiB,EAAAA,EAAAA,IAACzB,EAAAA,EAAS,CAACG,MAAOA,EAAOC,OAAQA,KAAYuE,IAH3C,IAIX,CAEAC,SACE,MAAM,OACJvE,EAAM,YACNI,EAAW,mBACXC,EAAkB,OAClBN,EAAM,MACND,EAAK,MACL0E,EAAK,SACLvE,EAAQ,SACRwE,EAAQ,qBACR5E,EAAoB,aACpBK,EAAY,aACZC,EACA6C,SAAU0B,EACVC,OAAQC,EACRC,OAAQC,EACRC,OAAQC,KACL1E,GACDwC,KAAKC,MAEHuB,EAAiB,CACrBtE,SACAC,WACAwE,WACA5E,uBACAK,eACAC,eACAgC,YAAaW,KAAKmC,MAAM9C,YACxB/B,cACAC,sBAGF,OACEQ,EAAAA,EAAAA,IAAA,UAASP,EAAUY,SAAA,MACC,IAAVsD,GACNA,EAAM5C,KAAI,CAACsD,EAAWC,KACpB/D,EAAAA,EAAAA,IAACgE,EAAAA,SAAQ,CAAAlE,SAAU4B,KAAKuB,WAAW,CAACC,oBAAmBY,KAAxCC,UAED,IAAVX,QACY,IAAXzE,GACP+C,KAAKuB,WAAW,CAACtE,SAAQuE,iBAAgBxE,YAGjD,EAtII2C,EAAQJ,YAAA,WAyId,SAAegD,EAAAA,EAAAA,GAAiB5C,E,4nBC5JhC,SAAS6C,EAAe1F,GAA6C,IAA5C,SAACK,EAAQ,QAAEsF,EAAO,eAAEC,GAAsB5F,EACjE,OAAuB,IAAnB2F,EAAQpB,OACH,MAIPtD,EAAAA,EAAAA,IAACC,EAAAA,EAAK,CAAAI,SAAA,EACJE,EAAAA,EAAAA,IAACD,EAAAA,EAAW,CAAAD,UAAEuE,EAAAA,EAAAA,GAAE,4BAEhBrE,EAAAA,EAAAA,IAACM,EAAAA,EAAS,CAAAR,UACRE,EAAAA,EAAAA,IAACsE,EAAO,CAAAxE,SACLqE,EAAQ3D,KAAI+D,IACXvE,EAAAA,EAAAA,IAACwE,EAAiB,CAChB3F,SAAUA,EACVH,MACEG,GAAWwF,EAAAA,EAAAA,GAAE,wDAA0D,GAGzEnE,QAASA,IAAMkE,EAAeG,GAC9BE,UAAY,qBAAoBF,EAAO5E,KAAKG,UAE5CL,EAAAA,EAAAA,IAACiF,EAAK,CAAA5E,SAAA,EACJE,EAAAA,EAAAA,IAAC2E,EAAgB,CAACC,SAAUL,EAAO5E,MACnCK,EAAAA,EAAAA,IAAC6E,EAAAA,EAAY,CAAA/E,SAAEyE,EAAOO,WAAaP,EAAOvD,WANvCuD,EAAO5E,YAc1B,CA/BSuE,EAAejD,YAAA,kBAiCxB,MAAMqD,GAAUpD,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,yBAEhB6D,EAAAA,EAAAA,GAAM,GAAE,2BAKfP,GAAoBtD,EAAAA,EAAAA,GAAO8D,EAAAA,GAAM,CAAA7D,OAAA,aAAbD,CAAc,WAC5B6D,EAAAA,EAAAA,GAAM,GAAE,6CAGLE,GAAKA,EAAEC,MAAMC,eAAa,wIAOtBF,GAAKA,EAAEC,MAAME,cAAY,6CAQtCV,GAAQxD,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,CAAAF,KAAA,UAAAI,OAAA,2DAMrBuD,GAAmBzD,EAAAA,EAAAA,GAAOmE,EAAAA,GAAU,CAAAlE,OAAA,aAAjBD,CAAkB,iBACzB6D,EAAAA,EAAAA,GAAM,GAAE,KAG1B,I,0FCtEA,SAASO,EAAU9G,GAMT,IANU,aAClB+G,EAAY,QACZC,EAAO,WACPC,EAAU,gBACVC,EAAkBA,SAAQ,eAC1BtB,EAAiBA,UACX5F,EACN,MAAMmH,GAAiBC,EAAAA,EAAAA,GAAe,CAAC,iBAAkB,CAACL,eAAcC,YAYlEK,EAAuBtB,KAC3BuB,EAAAA,EAAAA,IAAc,CACZC,UAAWP,EAAQQ,KACnBC,MAAOV,EAAaS,KACpBpB,SAAUL,EAAOyB,OAGnBN,EAAgBnB,EAAO,EAGzB,OAAKkB,EAAW1C,QAWdtD,EAAAA,EAAAA,IAAA,OAAAK,SAAA,CACG2F,EACE7C,QAAOqC,GAAKA,EAAEiB,UACd1F,KAAI2F,IACHnG,EAAAA,EAAAA,IAACoG,EAAAA,EAAY,CACXD,KAAMA,EACNZ,aAAcA,EACdC,QAASA,EAETE,gBAAiBG,GADZM,EAAKxG,OAKhBK,EAAAA,EAAAA,IAACkE,EAAe,CACdrF,UAAW8G,EACXxB,QAASsB,EAAW7C,QAAOqC,IAAMA,EAAEiB,UAAYjB,EAAEoB,WACjDjC,eA/CsBG,KAC1B+B,EAAAA,EAAAA,IAAa,CACXP,UAAWP,EAAQQ,KACnBC,MAAOV,EAAaS,KACpBpB,SAAUL,EAAOyB,OAGnB5B,EAAeG,EAAO,QAepBvE,EAAAA,EAAAA,IAACN,EAAAA,EAAK,CAAAI,UACJE,EAAAA,EAAAA,IAACuG,EAAAA,EAAS,CAAAzG,UACPuE,EAAAA,EAAAA,GAAE,0EA2Bb,CA5DSiB,EAAUrE,YAAA,aA8DnB,S,sHC3EO,MAAMuF,EAAQ,+CAEfC,EAAiBC,IACrBA,EAAQC,OAAOD,GAAS,IACjBE,EAAAA,EAAAA,IAAG,YAAa,aAAcF,IAG1B/H,EAAiC,CAC5CkI,gBAAiB,CACf7F,KAAM,kBACN8F,KAAM,SAGNC,OAAO1C,EAAAA,EAAAA,GAAE,oBACT2C,YAAa,yBACbC,MAAM5C,EAAAA,EAAAA,GACJ,yMAGJ6C,gBAAiB,CACflG,KAAM,kBACN8F,KAAM,QACNK,IAAK,GACLC,IAAK,KACLC,KAAM,GACN3G,aAAc,IACdqG,OAAO1C,EAAAA,EAAAA,GAAE,6BACT4C,MAAM5C,EAAAA,EAAAA,GAAE,uDACRiD,YAAab,GAEfc,gBAAiB,CACfvG,KAAM,kBACN8F,KAAM,QACNK,IAAK,GACLC,IAAK,KACLC,KAAM,GACN3G,aAAc,IACdqG,OAAO1C,EAAAA,EAAAA,GAAE,6BACT4C,MAAM5C,EAAAA,EAAAA,GAAE,wDACRiD,YAAab,G,0DC/BjB,QAZA,SACEe,EACAC,GAGQ,IADRC,EAAoBlG,UAAAuB,OAAA,EAAAvB,UAAA,QAAA3B,EAEpB,MAAM8H,EAAY,GAAEH,OAAeC,IAC7BG,EAAOF,EAAe,GAAEC,OAAcD,IAAgBC,EAE5D,OANmBnG,UAAAuB,OAAA,QAAAlD,IAAA2B,UAAA,KAAAA,UAAA,GAMsBoG,EAApB,GAAEA,YACzB,C,4QCGe,MAAMC,UAGXC,EAAAA,EACRC,WACE,MAAO,EACT,CAEA5E,SACE,OACEnD,EAAAA,EAAAA,IAACgI,EAAAA,EAAmB,CAACtJ,MAAOgD,KAAKqG,WAAWjI,SACzC4B,KAAKuG,mBAGZ,EAdmBJ,EAAmB5G,YAAA,qB,qRCFjC,MAAMiH,GAAsB7D,EAAAA,EAAAA,GACjC,qHAGF,SAAS8D,EAAe3J,GAA+D,IAA9D,OAACI,EAAS,CAAC,iBAAgB,QAAE4G,EAAO,KAAE4C,KAASzG,GAAanD,EACnF,OACEwB,EAAAA,EAAAA,IAACqI,EAAAA,EAAM,CAACzJ,OAAQA,EAAQ4G,QAASA,EAAS4C,KAAMA,EAAKtI,SAClDwI,IAAA,IAAC,UAACC,GAAUD,EAAA,OACVC,IACCvI,EAAAA,EAAAA,IAACwI,EAAAA,GAAK,CAAC,eAAa,2BAA2B1B,KAAK,aAAcnF,EAAK7B,SACpEoI,GAEJ,GAIT,CAZSC,EAAelH,YAAA,kBAcxB,S,4zBCEA,MAAMwH,UAAiBZ,EAAAA,EAAkCtG,cAAA,SAAAC,YAAAC,EAAAA,EAAAA,GAAA,2BAuBjC8C,IACpB7C,KAAKQ,UAASwG,IAAa,CACzBjD,YAAaiD,EAAUjD,YAAc,IAAIjF,KAAIyE,GACvCA,EAAEtF,KAAO4E,EAAO5E,GACXsF,EAEF,IACFV,EACH2B,SAAS,QAGZ,KACJzE,EAAAA,EAAAA,GAAA,4BAEsB8C,IACrB7C,KAAKQ,UAASwG,IAAa,CACzBjD,YAAaiD,EAAUjD,YAAc,IAAIjF,KAAIyE,GACvCA,EAAEtF,KAAO4E,EAAO5E,GACXsF,EAEF,IACFV,EACH2B,SAAS,QAGZ,GACJ,CAhDDyC,kBACE,MAAO,IACFC,MAAMD,kBACTnD,QAAS,KACTC,WAAY,GAEhB,CAEAoD,qBACE,MAAM,aAACtD,EAAY,OAAEhC,GAAU7B,KAAKC,MACpC,MAAQ,aAAY4D,EAAaS,QAAQzC,EAAOwC,YAClD,CAEA+C,eACE,MAAM,aAACvD,EAAY,OAAEhC,GAAU7B,KAAKC,MAEpC,MAAO,CACL,CAAC,UAFqBD,KAAKmH,sBAG3B,CAAC,aAAe,aAAYtD,EAAaS,QAAQzC,EAAOwC,sBAE5D,CA8BAgC,WACE,MAAM,UAAChC,GAAarE,KAAKC,MAAM4B,OAC/B,OAAOwF,EAAAA,EAAAA,IAAc1E,EAAAA,EAAAA,GAAE,mBAAoB0B,GAAW,EACxD,CAEAiD,aACE,MAAM,YAACC,EAAW,aAAE1D,GAAgB7D,KAAKC,OACnC,QAAC6D,EAAO,WAAEC,GAAc/D,KAAKmC,MAEnC,IAAK2B,EACH,OAAO,KAGT,MAAM0D,EAAkBxH,KAAKmH,qBAE7B,OACEpJ,EAAAA,EAAAA,IAACuE,EAAAA,SAAQ,CAAAlE,SAAA,EACPE,EAAAA,EAAAA,IAACmJ,EAAAA,EAAkB,CACjBzK,OAAO2F,EAAAA,EAAAA,GAAE,mBACT+E,QACEpJ,EAAAA,EAAAA,IAACgF,EAAAA,GAAM,CACLqE,GAAI,CACFC,SAAW,kBAAiB/D,EAAaS,qBACzCuD,MAAO,CAAC/D,QAASA,EAAQ7F,KAE3BU,KAAK,KAAIP,UAERuE,EAAAA,EAAAA,GAAE,yBAITrE,EAAAA,EAAAA,IAACmI,EAAAA,EAAe,CAAC3C,QAASA,KAC1BxF,EAAAA,EAAAA,IAACwJ,EAAAA,EAAS,CAACH,GAAG,mCAAmCI,MAAMzJ,EAAAA,EAAAA,IAAC0J,EAAAA,EAAQ,IAAI5J,UACjEuE,EAAAA,EAAAA,GACC,+FAIJ5E,EAAAA,EAAAA,IAACkK,EAAAA,EAAI,CACHC,YAAU,EACVC,WAAS,EACTC,YAAa,CACXjD,gBAAiBrB,EAAQqB,gBACzBK,gBAAiB1B,EAAQ0B,gBACzBK,gBAAiB/B,EAAQ+B,iBAE3BwC,UAAU,MACVC,YAAad,EAAgBpJ,SAAA,EAE7BE,EAAAA,EAAAA,IAACqB,EAAAA,EAAQ,CACPxC,UAAWoK,EACXvK,OAAO2F,EAAAA,EAAAA,GAAE,kBACT1F,OAAQ,CAACA,EAAAA,OAAOkI,oBAGlB7G,EAAAA,EAAAA,IAACqB,EAAAA,EAAQ,CACP3C,OAAO2F,EAAAA,EAAAA,GAAE,WACTxF,UAAWoK,EACXtK,OAAQ,CAACA,EAAAA,OAAOuI,gBAAiBvI,EAAAA,OAAO4I,iBACxCxI,aAAcA,KACZiB,EAAAA,EAAAA,IAACiK,EAAAA,EAAU,CAACnD,KAAK,OAAMhH,UACpBuE,EAAAA,EAAAA,GACC,wNAOT4E,IACCjJ,EAAAA,EAAAA,IAACsF,EAAAA,EAAU,CACTC,aAAcA,EACdC,QAASA,EACTC,YAAaA,GAAc,IAAI7C,QAC7BqC,GAAgB,iBAAXA,EAAE6B,MAA2B7B,EAAEiF,mBAEtC9F,eAAgB1C,KAAKyI,mBACrBzE,gBAAiBhE,KAAKmE,wBAKhC,EAGF,S","sources":["webpack:///./app/components/forms/formPanel.tsx","webpack:///./app/components/forms/jsonForm.tsx","webpack:///./app/components/inactivePlugins.tsx","webpack:///./app/components/pluginList.tsx","webpack:///./app/data/forms/projectAlerts.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectAlerts/settings.tsx"],"sourcesContent":["import {useCallback, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport FieldFromConfig from 'sentry/components/forms/fieldFromConfig';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport {IconChevron} from 'sentry/icons';\nimport {Scope} from 'sentry/types';\nimport {sanitizeQuerySelector} from 'sentry/utils/sanitizeQuerySelector';\n\nimport {FieldObject, JsonFormObject} from './types';\n\ntype Props = {\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n  access?: Set<Scope>;\n  additionalFieldProps?: {[key: string]: any};\n  /**\n   * Can the PanelBody be hidden with a click?\n   */\n  collapsible?: boolean;\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n  features?: Record<string, any>;\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n  initiallyCollapsed?: boolean;\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n};\n\nfunction FormPanel({\n  additionalFieldProps = {},\n  title,\n  fields,\n  access,\n  disabled,\n  renderFooter,\n  renderHeader,\n  collapsible,\n  initiallyCollapsed = false,\n  ...otherProps\n}: Props) {\n  const [collapsed, setCollapse] = useState(initiallyCollapsed);\n  const handleCollapseToggle = useCallback(() => setCollapse(current => !current), []);\n\n  return (\n    <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n      {title && (\n        <PanelHeader>\n          {title}\n          {collapsible && (\n            <Collapse onClick={handleCollapseToggle}>\n              <IconChevron\n                data-test-id=\"form-panel-collapse-chevron\"\n                direction={collapsed ? 'down' : 'up'}\n                size=\"xs\"\n              />\n            </Collapse>\n          )}\n        </PanelHeader>\n      )}\n      <PanelBody hidden={collapsed}>\n        {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n        {fields.map(field => {\n          if (typeof field === 'function') {\n            return field();\n          }\n\n          const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n          // Allow the form panel disabled prop to override the fields\n          // disabled prop, with fallback to the fields disabled state.\n          if (disabled === true) {\n            fieldWithoutDefaultValue.disabled = true;\n            fieldWithoutDefaultValue.disabledReason = undefined;\n          }\n\n          return (\n            <FieldFromConfig\n              access={access}\n              disabled={disabled}\n              key={field.name}\n              {...otherProps}\n              {...additionalFieldProps}\n              field={fieldWithoutDefaultValue}\n              highlighted={otherProps.highlighted === `#${field.name}`}\n            />\n          );\n        })}\n        {typeof renderFooter === 'function' && renderFooter({title, fields})}\n      </PanelBody>\n    </Panel>\n  );\n}\n\nexport default FormPanel;\n\nconst Collapse = styled('span')`\n  cursor: pointer;\n`;\n","import {Component, Fragment} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'sentry/utils';\nimport {sanitizeQuerySelector} from 'sentry/utils/sanitizeQuerySelector';\n// eslint-disable-next-line no-restricted-imports\nimport withSentryRouter from 'sentry/utils/withSentryRouter';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './types';\n\ntype Props = {\n  additionalFieldProps?: {[key: string]: any};\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n} & WithRouterProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends Component<Props, State> {\n  state: State = {\n    // location.hash is optional because of tests.\n    highlighted: this.props.location?.hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.location && this.props.location.hash !== prevProps.location.hash) {\n      const hash = this.props.location.hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    // location.hash is optional because of tests.\n    const hash = toHash || this.props.location?.hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      collapsible,\n      initiallyCollapsed,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      params: _params,\n      router: _router,\n      routes: _routes,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n      collapsible,\n      initiallyCollapsed,\n    };\n\n    return (\n      <div {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <Fragment key={i}>{this.renderForm({formPanelProps, ...formGroup})}</Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </div>\n    );\n  }\n}\n\nexport default withSentryRouter(JsonForm);\n","import styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {t} from 'sentry/locale';\nimport PluginIcon from 'sentry/plugins/components/pluginIcon';\nimport {space} from 'sentry/styles/space';\nimport {Plugin} from 'sentry/types';\n\ntype Props = {\n  onEnablePlugin: (plugin: Plugin) => void;\n  plugins: Plugin[];\n  disabled?: boolean;\n};\n\nfunction InactivePlugins({disabled, plugins, onEnablePlugin}: Props) {\n  if (plugins.length === 0) {\n    return null;\n  }\n\n  return (\n    <Panel>\n      <PanelHeader>{t('Inactive Integrations')}</PanelHeader>\n\n      <PanelBody>\n        <Plugins>\n          {plugins.map(plugin => (\n            <IntegrationButton\n              disabled={disabled}\n              title={\n                disabled ? t('You do not have permission to set up an integration.') : ''\n              }\n              key={plugin.id}\n              onClick={() => onEnablePlugin(plugin)}\n              className={`ref-plugin-enable-${plugin.id}`}\n            >\n              <Label>\n                <StyledPluginIcon pluginId={plugin.id} />\n                <TextOverflow>{plugin.shortName || plugin.name}</TextOverflow>\n              </Label>\n            </IntegrationButton>\n          ))}\n        </Plugins>\n      </PanelBody>\n    </Panel>\n  );\n}\n\nconst Plugins = styled('div')`\n  display: flex;\n  padding: ${space(1)};\n  flex: 1;\n  flex-wrap: wrap;\n`;\n\nconst IntegrationButton = styled(Button)`\n  margin: ${space(1)};\n  width: 175px;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: #889ab0;\n  letter-spacing: 0.1px;\n  font-weight: 600;\n  text-transform: uppercase;\n  border: 1px solid #eee;\n  background: inherit;\n  border-radius: ${p => p.theme.borderRadius};\n  padding: 10px;\n\n  &:hover {\n    border-color: #ccc;\n  }\n`;\n\nconst Label = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: ${space(1)};\n`;\n\nexport default InactivePlugins;\n","import {disablePlugin, enablePlugin} from 'sentry/actionCreators/plugins';\nimport {hasEveryAccess} from 'sentry/components/acl/access';\nimport InactivePlugins from 'sentry/components/inactivePlugins';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelItem from 'sentry/components/panels/panelItem';\nimport PluginConfig from 'sentry/components/pluginConfig';\nimport {t} from 'sentry/locale';\nimport {Organization, Plugin, Project} from 'sentry/types';\n\ntype Props = {\n  organization: Organization;\n  pluginList: Plugin[];\n  project: Project;\n  onDisablePlugin?: (plugin: Plugin) => void;\n  onEnablePlugin?: (plugin: Plugin) => void;\n};\n\nfunction PluginList({\n  organization,\n  project,\n  pluginList,\n  onDisablePlugin = () => {},\n  onEnablePlugin = () => {},\n}: Props) {\n  const hasWriteAccess = hasEveryAccess(['project:write'], {organization, project});\n\n  const handleEnablePlugin = (plugin: Plugin) => {\n    enablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onEnablePlugin(plugin);\n  };\n\n  const handleDisablePlugin = (plugin: Plugin) => {\n    disablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onDisablePlugin(plugin);\n  };\n\n  if (!pluginList.length) {\n    return (\n      <Panel>\n        <PanelItem>\n          {t(\"Oops! Looks like there aren't any available integrations installed.\")}\n        </PanelItem>\n      </Panel>\n    );\n  }\n\n  return (\n    <div>\n      {pluginList\n        .filter(p => p.enabled)\n        .map(data => (\n          <PluginConfig\n            data={data}\n            organization={organization}\n            project={project}\n            key={data.id}\n            onDisablePlugin={handleDisablePlugin}\n          />\n        ))}\n\n      <InactivePlugins\n        disabled={!hasWriteAccess}\n        plugins={pluginList.filter(p => !p.enabled && !p.isHidden)}\n        onEnablePlugin={handleEnablePlugin}\n      />\n    </div>\n  );\n}\n\nexport default PluginList;\n","import {Field} from 'sentry/components/forms/types';\nimport {t, tn} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/alerts/';\n\nconst formatMinutes = (value: number | '') => {\n  value = Number(value) / 60;\n  return tn('%s minute', '%s minutes', value);\n};\n\nexport const fields: {[key: string]: Field} = {\n  subjectTemplate: {\n    name: 'subjectTemplate',\n    type: 'string',\n\n    // additional data/props that is related to rendering of form field rather than data\n    label: t('Subject Template'),\n    placeholder: 'e.g. $shortID - $title',\n    help: t(\n      'The email subject to use (excluding the prefix) for individual alerts. Usable variables include: $title, $shortID, $projectID, $orgID, and ${tag:key}, such as ${tag:environment} or ${tag:release}.'\n    ),\n  },\n  digestsMinDelay: {\n    name: 'digestsMinDelay',\n    type: 'range',\n    min: 60,\n    max: 3600,\n    step: 60,\n    defaultValue: 300,\n    label: t('Minimum delivery interval'),\n    help: t('Notifications will be delivered at most this often.'),\n    formatLabel: formatMinutes,\n  },\n  digestsMaxDelay: {\n    name: 'digestsMaxDelay',\n    type: 'range',\n    min: 60,\n    max: 3600,\n    step: 60,\n    defaultValue: 300,\n    label: t('Maximum delivery interval'),\n    help: t('Notifications will be delivered at least this often.'),\n    formatLabel: formatMinutes,\n  },\n};\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Project, Scope, Team} from 'sentry/types';\n\ninterface Props extends React.ComponentPropsWithoutRef<typeof Alert> {\n  access?: Scope[];\n  project?: Project | null | undefined;\n  team?: Team | null | undefined;\n}\n\nexport const permissionAlertText = t(\n  'These settings can only be edited by users with the organization-level owner, manager, or team-level admin roles.'\n);\n\nfunction PermissionAlert({access = ['project:write'], project, team, ...props}: Props) {\n  return (\n    <Access access={access} project={project} team={team}>\n      {({hasAccess}) =>\n        !hasAccess && (\n          <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n            {permissionAlertText}\n          </Alert>\n        )\n      }\n    </Access>\n  );\n}\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport AlertLink from 'sentry/components/alertLink';\nimport {Button} from 'sentry/components/button';\nimport Form from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport PanelAlert from 'sentry/components/panels/panelAlert';\nimport PluginList from 'sentry/components/pluginList';\nimport {fields} from 'sentry/data/forms/projectAlerts';\nimport {IconMail} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, Plugin, Project} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\n\ntype RouteParams = {projectId: string};\n\ntype Props = RouteComponentProps<RouteParams, {}> &\n  DeprecatedAsyncView['props'] & {\n    canEditRule: boolean;\n    organization: Organization;\n  };\n\ntype State = DeprecatedAsyncView['state'] & {\n  pluginList: Array<Plugin> | null;\n  project: Project | null;\n};\n\nclass Settings extends DeprecatedAsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      project: null,\n      pluginList: [],\n    };\n  }\n\n  getProjectEndpoint() {\n    const {organization, params} = this.props;\n    return `/projects/${organization.slug}/${params.projectId}/`;\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    const {organization, params} = this.props;\n    const projectEndpoint = this.getProjectEndpoint();\n    return [\n      ['project', projectEndpoint],\n      ['pluginList', `/projects/${organization.slug}/${params.projectId}/plugins/`],\n    ];\n  }\n\n  handleEnablePlugin = (plugin: Plugin) => {\n    this.setState(prevState => ({\n      pluginList: (prevState.pluginList ?? []).map(p => {\n        if (p.id !== plugin.id) {\n          return p;\n        }\n        return {\n          ...plugin,\n          enabled: true,\n        };\n      }),\n    }));\n  };\n\n  handleDisablePlugin = (plugin: Plugin) => {\n    this.setState(prevState => ({\n      pluginList: (prevState.pluginList ?? []).map(p => {\n        if (p.id !== plugin.id) {\n          return p;\n        }\n        return {\n          ...plugin,\n          enabled: false,\n        };\n      }),\n    }));\n  };\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Alerts Settings'), projectId, false);\n  }\n\n  renderBody() {\n    const {canEditRule, organization} = this.props;\n    const {project, pluginList} = this.state;\n\n    if (!project) {\n      return null;\n    }\n\n    const projectEndpoint = this.getProjectEndpoint();\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Alerts Settings')}\n          action={\n            <Button\n              to={{\n                pathname: `/organizations/${organization.slug}/alerts/rules/`,\n                query: {project: project.id},\n              }}\n              size=\"sm\"\n            >\n              {t('View Alert Rules')}\n            </Button>\n          }\n        />\n        <PermissionAlert project={project} />\n        <AlertLink to=\"/settings/account/notifications/\" icon={<IconMail />}>\n          {t(\n            'Looking to fine-tune your personal notification preferences? Visit your Account Settings'\n          )}\n        </AlertLink>\n\n        <Form\n          saveOnBlur\n          allowUndo\n          initialData={{\n            subjectTemplate: project.subjectTemplate,\n            digestsMinDelay: project.digestsMinDelay,\n            digestsMaxDelay: project.digestsMaxDelay,\n          }}\n          apiMethod=\"PUT\"\n          apiEndpoint={projectEndpoint}\n        >\n          <JsonForm\n            disabled={!canEditRule}\n            title={t('Email Settings')}\n            fields={[fields.subjectTemplate]}\n          />\n\n          <JsonForm\n            title={t('Digests')}\n            disabled={!canEditRule}\n            fields={[fields.digestsMinDelay, fields.digestsMaxDelay]}\n            renderHeader={() => (\n              <PanelAlert type=\"info\">\n                {t(\n                  'Sentry will automatically digest alerts sent by some services to avoid flooding your inbox with individual issue notifications. To control how frequently notifications are delivered, use the sliders below.'\n                )}\n              </PanelAlert>\n            )}\n          />\n        </Form>\n\n        {canEditRule && (\n          <PluginList\n            organization={organization}\n            project={project}\n            pluginList={(pluginList ?? []).filter(\n              p => p.type === 'notification' && p.hasConfiguration\n            )}\n            onEnablePlugin={this.handleEnablePlugin}\n            onDisablePlugin={this.handleDisablePlugin}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Settings;\n"],"names":["FormPanel","_ref","additionalFieldProps","title","fields","access","disabled","renderFooter","renderHeader","collapsible","initiallyCollapsed","otherProps","collapsed","setCollapse","useState","handleCollapseToggle","useCallback","current","_jsxs","Panel","id","sanitizeQuerySelector","undefined","children","PanelHeader","_jsx","Collapse","onClick","IconChevron","direction","size","PanelBody","hidden","map","field","defaultValue","_","fieldWithoutDefaultValue","disabledReason","FieldFromConfig","highlighted","name","displayName","_styled","target","styles","JsonForm","Component","constructor","arguments","_defineProperty","this","props","location","hash","componentDidMount","scrollToHash","componentDidUpdate","prevProps","setState","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","shouldDisplayForm","fieldsWithVisibleProp","filter","defined","visible","length","every","renderForm","formPanelProps","render","forms","features","_location","params","_params","router","_router","routes","_routes","state","formGroup","i","Fragment","withSentryRouter","InactivePlugins","plugins","onEnablePlugin","t","Plugins","plugin","IntegrationButton","className","Label","StyledPluginIcon","pluginId","TextOverflow","shortName","space","Button","p","theme","fontSizeSmall","borderRadius","PluginIcon","PluginList","organization","project","pluginList","onDisablePlugin","hasWriteAccess","hasEveryAccess","handleDisablePlugin","disablePlugin","projectId","slug","orgId","enabled","data","PluginConfig","isHidden","enablePlugin","PanelItem","route","formatMinutes","value","Number","tn","subjectTemplate","type","label","placeholder","help","digestsMinDelay","min","max","step","formatLabel","digestsMaxDelay","routeName","orgSlug","projectSlug","tmplBase","tmpl","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","SentryDocumentTitle","renderComponent","permissionAlertText","PermissionAlert","team","Access","_ref2","hasAccess","Alert","Settings","prevState","getDefaultState","super","getProjectEndpoint","getEndpoints","routeTitleGen","renderBody","canEditRule","projectEndpoint","SettingsPageHeader","action","to","pathname","query","AlertLink","icon","IconMail","Form","saveOnBlur","allowUndo","initialData","apiMethod","apiEndpoint","PanelAlert","hasConfiguration","handleEnablePlugin"],"sourceRoot":""}