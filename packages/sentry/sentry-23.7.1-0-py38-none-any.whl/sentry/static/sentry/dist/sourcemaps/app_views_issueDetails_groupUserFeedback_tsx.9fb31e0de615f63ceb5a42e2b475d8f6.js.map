{"version":3,"file":"chunks/app_views_issueDetails_groupUserFeedback_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"s6BAoCA,MAAMA,UAA0BC,EAAAA,UAAwBC,cAAA,SAAAC,YAAAC,EAAAA,EAAAA,GAAA,aACvC,CACbC,SAAS,EACTC,OAAO,EACPC,WAAY,GACZC,UAAW,MACZJ,EAAAA,EAAAA,GAAA,kBAgBW,KACVK,KAAKC,SAAS,CACZL,SAAS,EACTC,OAAO,KAGTK,EAAAA,EAAAA,IAAsBF,KAAKG,MAAMC,MAAMC,GAAI,IACtCL,KAAKG,MAAMG,OACdC,OAAQP,KAAKG,MAAMK,SAASC,MAAMF,QAAU,KAE3CG,MAAKC,IAAqB,IAAnBC,EAAMC,EAAGC,GAAKH,EACpBX,KAAKC,SAAS,CACZJ,OAAO,EACPD,SAAS,EACTE,WAAYc,EACZb,UAAWe,GAAMC,kBAAkB,SACnC,IAEHC,OAAM,KACLhB,KAAKC,SAAS,CACZJ,OAAO,EACPD,SAAS,GACT,GACF,GACL,CAtCDqB,oBACEjB,KAAKkB,WACP,CAEAC,mBAAmBC,GAEdC,IAAQD,EAAUd,OAAQN,KAAKG,MAAMG,SACtCc,EAAUZ,SAASc,WAAatB,KAAKG,MAAMK,SAASc,UACpDF,EAAUZ,SAASe,SAAWvB,KAAKG,MAAMK,SAASe,QAElDvB,KAAKkB,WAET,CA4BAM,SACE,MAAM,WAAC1B,EAAU,QAAEF,EAAO,MAAEC,GAASG,KAAKyB,OACpC,aAACC,EAAY,MAAEtB,GAASJ,KAAKG,MAEnC,OAAIP,GACK+B,EAAAA,EAAAA,IAACC,EAAAA,EAAgB,IAGtB/B,GACK8B,EAAAA,EAAAA,IAACE,EAAAA,EAAY,CAACC,QAAS9B,KAAKkB,YAGjCpB,EAAWiC,QAEXJ,EAAAA,EAAAA,IAACK,EAAAA,GAAW,CAAAC,UACVC,EAAAA,EAAAA,IAACF,EAAAA,GAAW,CAAAC,SAAA,CACTnC,EAAWqC,KAAI,CAACC,EAAMC,KACrBV,EAAAA,EAAAA,IAACW,EAAuB,CAEtBC,OAAQH,EACRI,MAAOd,EAAae,KACpBC,QAAStC,EAAMC,IAHVgC,MAMTV,EAAAA,EAAAA,IAACgB,EAAAA,EAAU,CAAC5C,UAAWC,KAAKyB,MAAM1B,aAAeC,KAAKG,cAO5DwB,EAAAA,EAAAA,IAACK,EAAAA,GAAW,CAAAC,UACVN,EAAAA,EAAAA,IAACK,EAAAA,GAAW,CAACY,WAAS,EAAAX,UACpBN,EAAAA,EAAAA,IAACkB,EAAAA,EAAiB,CAACC,WAAY,CAAC1C,EAAM2C,QAAQ1C,SAItD,EArFId,EAAiByD,YAAA,oBAwFvB,MAAMV,GAA0BW,EAAAA,EAAAA,GAAOC,EAAAA,EAAiB,CAAAC,OAAA,aAAxBF,CAAyB,kBACtCG,EAAAA,EAAAA,GAAM,GAAE,KAG3B,GAAeC,EAAAA,EAAAA,GAAiB9D,E","sources":["webpack:///./app/views/issueDetails/groupUserFeedback.tsx"],"sourcesContent":["import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport {EventUserFeedback} from 'sentry/components/events/userFeedback';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {space} from 'sentry/styles/space';\nimport {Group, Organization, Project, UserReport} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport {UserFeedbackEmpty} from 'sentry/views/userFeedback/userFeedbackEmpty';\n\nimport {fetchGroupUserReports} from './utils';\n\ntype RouteParams = {\n  groupId: string;\n  orgId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  environments: string[];\n  group: Group;\n  organization: Organization;\n  project: Project;\n};\n\ntype State = {\n  error: boolean;\n  loading: boolean;\n  reportList: UserReport[];\n  pageLinks?: string | null;\n};\n\nclass GroupUserFeedback extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    reportList: [],\n    pageLinks: '',\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      !isEqual(prevProps.params, this.props.params) ||\n      prevProps.location.pathname !== this.props.location.pathname ||\n      prevProps.location.search !== this.props.location.search\n    ) {\n      this.fetchData();\n    }\n  }\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n\n    fetchGroupUserReports(this.props.group.id, {\n      ...this.props.params,\n      cursor: this.props.location.query.cursor || '',\n    })\n      .then(([data, _, resp]) => {\n        this.setState({\n          error: false,\n          loading: false,\n          reportList: data,\n          pageLinks: resp?.getResponseHeader('Link'),\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    const {reportList, loading, error} = this.state;\n    const {organization, group} = this.props;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    if (reportList.length) {\n      return (\n        <Layout.Body>\n          <Layout.Main>\n            {reportList.map((item, idx) => (\n              <StyledEventUserFeedback\n                key={idx}\n                report={item}\n                orgId={organization.slug}\n                issueId={group.id}\n              />\n            ))}\n            <Pagination pageLinks={this.state.pageLinks} {...this.props} />\n          </Layout.Main>\n        </Layout.Body>\n      );\n    }\n\n    return (\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          <UserFeedbackEmpty projectIds={[group.project.id]} />\n        </Layout.Main>\n      </Layout.Body>\n    );\n  }\n}\n\nconst StyledEventUserFeedback = styled(EventUserFeedback)`\n  margin-bottom: ${space(2)};\n`;\n\nexport default withOrganization(GroupUserFeedback);\n"],"names":["GroupUserFeedback","Component","constructor","arguments","_defineProperty","loading","error","reportList","pageLinks","this","setState","fetchGroupUserReports","props","group","id","params","cursor","location","query","then","_ref","data","_","resp","getResponseHeader","catch","componentDidMount","fetchData","componentDidUpdate","prevProps","isEqual","pathname","search","render","state","organization","_jsx","LoadingIndicator","LoadingError","onRetry","length","Layout","children","_jsxs","map","item","idx","StyledEventUserFeedback","report","orgId","slug","issueId","Pagination","fullWidth","UserFeedbackEmpty","projectIds","project","displayName","_styled","EventUserFeedback","target","space","withOrganization"],"sourceRoot":""}