{"version":3,"file":"chunks/app_components_modals_redirectToProject_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/modals/redirectToProject.tsx","webpack:///./app/components/text.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/replaceRouterParams.tsx","webpack:///../node_modules/lodash/findLastIndex.js"],"sourcesContent":["import {Component, Fragment} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Button} from 'sentry/components/button';\nimport Text from 'sentry/components/text';\nimport {t, tct} from 'sentry/locale';\nimport recreateRoute from 'sentry/utils/recreateRoute';\n// eslint-disable-next-line no-restricted-imports\nimport withSentryRouter from 'sentry/utils/withSentryRouter';\n\ntype Props = ModalRenderProps &\n  WithRouterProps & {\n    slug: string;\n  };\n\ntype State = {\n  timer: number;\n};\n\nclass RedirectToProjectModal extends Component<Props, State> {\n  state: State = {\n    timer: 5,\n  };\n\n  componentDidMount() {\n    this.redirectInterval = window.setInterval(() => {\n      if (this.state.timer <= 1) {\n        window.location.assign(this.newPath);\n        return;\n      }\n\n      this.setState(state => ({\n        timer: state.timer - 1,\n      }));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.redirectInterval) {\n      window.clearInterval(this.redirectInterval);\n    }\n  }\n\n  redirectInterval: number | null = null;\n\n  get newPath() {\n    const {params, slug} = this.props;\n\n    return recreateRoute('', {\n      ...this.props,\n      params: {\n        ...params,\n        projectId: slug,\n      },\n    });\n  }\n\n  render() {\n    const {slug, Header, Body} = this.props;\n    return (\n      <Fragment>\n        <Header>{t('Redirecting to New Project...')}</Header>\n\n        <Body>\n          <div>\n            <Text>\n              <p>{t('The project slug has been changed.')}</p>\n\n              <p>\n                {tct(\n                  'You will be redirected to the new project [project] in [timer] seconds...',\n                  {\n                    project: <strong>{slug}</strong>,\n                    timer: `${this.state.timer}`,\n                  }\n                )}\n              </p>\n              <ButtonWrapper>\n                <Button priority=\"primary\" href={this.newPath}>\n                  {t('Continue to %s', slug)}\n                </Button>\n              </ButtonWrapper>\n            </Text>\n          </div>\n        </Body>\n      </Fragment>\n    );\n  }\n}\n\nexport default withSentryRouter(RedirectToProjectModal);\nexport {RedirectToProjectModal};\n\nconst ButtonWrapper = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import styled from '@emotion/styled';\n\nimport Panel from 'sentry/components/panels/panel';\nimport {space} from 'sentry/styles/space';\nimport textStyles from 'sentry/styles/text';\n\nconst Text = styled('div')`\n  ${textStyles};\n\n  ${Panel} & {\n    padding-left: ${space(2)};\n    padding-right: ${space(2)};\n\n    &:first-child {\n      padding-top: ${space(2)};\n    }\n  }\n`;\n\nexport default Text;\n","import {PlainRoute} from 'react-router';\nimport {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: PlainRoute[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => {\n    path = path || '';\n    if (path.length > 0 && !path.endsWith('/')) {\n      path = `${path}/`;\n    }\n    return path;\n  });\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","/**\n * Given a route string, replace path parameters (e.g. `:id`) with value from `params`\n *\n * e.g. {id: 'test'}\n */\nexport default function replaceRouterParams(\n  route: string,\n  params: {[key: string]: string | number | undefined}\n): string {\n  // parse route params from route\n  const matches = route.match(/:\\w+/g);\n\n  if (!matches || !matches.length) {\n    return route;\n  }\n\n  // replace with current params\n  matches.forEach(param => {\n    const paramName = param.slice(1);\n    if (typeof params[paramName] === 'undefined') {\n      return;\n    }\n\n    route = route.replace(param, String(params[paramName]));\n  });\n\n  return route;\n}\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n"],"names":["RedirectToProjectModal","Component","constructor","arguments","_defineProperty","timer","componentDidMount","this","redirectInterval","window","setInterval","state","location","assign","newPath","setState","componentWillUnmount","clearInterval","params","slug","props","recreateRoute","projectId","render","Header","Body","_jsxs","Fragment","children","_jsx","t","Text","tct","project","ButtonWrapper","Button","priority","href","displayName","withSentryRouter","_styled","target","name","styles","textStyles","Panel","space","to","options","routes","stepBack","paths","map","_ref","path","length","endsWith","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","route","matches","match","forEach","param","paramName","replace","String","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","nativeMin","min","module","exports","array","predicate","fromIndex","index","undefined"],"sourceRoot":""}