{"version":3,"file":"chunks/app_views_settings_projectTags_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectTags/index.tsx"],"sourcesContent":["import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Project, Scope, Team} from 'sentry/types';\n\ninterface Props extends React.ComponentPropsWithoutRef<typeof Alert> {\n  access?: Scope[];\n  project?: Project | null | undefined;\n  team?: Team | null | undefined;\n}\n\nexport const permissionAlertText = t(\n  'These settings can only be edited by users with the organization-level owner, manager, or team-level admin roles.'\n);\n\nfunction PermissionAlert({access = ['project:write'], project, team, ...props}: Props) {\n  return (\n    <Access access={access} project={project} team={team}>\n      {({hasAccess}) =>\n        !hasAccess && (\n          <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n            {permissionAlertText}\n          </Alert>\n        )\n      }\n    </Access>\n  );\n}\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport PanelItem from 'sentry/components/panels/panelItem';\nimport {IconDelete} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project, TagWithTopValues} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n} & DeprecatedAsyncView['props'];\n\ntype State = {\n  tags: Array<TagWithTopValues>;\n} & DeprecatedAsyncView['state'];\n\nclass ProjectTags extends DeprecatedAsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      tags: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n    return [['tags', `/projects/${organization.slug}/${projectId}/tags/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Tags'), projectId, false);\n  }\n\n  handleDelete = (key: TagWithTopValues['key'], idx: number) => async () => {\n    const {organization, params} = this.props;\n    const {projectId} = params;\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/tags/${key}/`,\n        {\n          method: 'DELETE',\n        }\n      );\n\n      const tags = [...this.state.tags];\n      tags.splice(idx, 1);\n      this.setState({tags});\n    } catch (error) {\n      this.setState({error: true, loading: false});\n    }\n  };\n\n  renderBody() {\n    const {project} = this.props;\n    const {tags} = this.state;\n    const isEmpty = !tags || !tags.length;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader title={t('Tags')} />\n        <TextBlock>\n          {tct(\n            `Each event in Sentry may be annotated with various tags (key and value pairs).\n                 Learn how to [link:add custom tags].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/enriching-events/tags/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <PermissionAlert project={project} />\n        <Panel>\n          <PanelHeader>{t('Tags')}</PanelHeader>\n          <PanelBody>\n            {isEmpty ? (\n              <EmptyMessage>\n                {tct('There are no tags, [link:learn how to add tags]', {\n                  link: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/enrich-data/\" />\n                  ),\n                })}\n              </EmptyMessage>\n            ) : (\n              <Access access={['project:write']} project={project}>\n                {({hasAccess}) =>\n                  tags.map(({key, canDelete}, idx) => {\n                    const enabled = canDelete && hasAccess;\n                    return (\n                      <TagPanelItem key={key} data-test-id=\"tag-row\">\n                        <TagName>{key}</TagName>\n                        <Actions>\n                          <Confirm\n                            message={t('Are you sure you want to remove this tag?')}\n                            onConfirm={this.handleDelete(key, idx)}\n                            disabled={!enabled}\n                          >\n                            <Button\n                              size=\"xs\"\n                              title={\n                                enabled\n                                  ? t('Remove tag')\n                                  : hasAccess\n                                  ? t('This tag cannot be deleted.')\n                                  : t('You do not have permission to remove tags.')\n                              }\n                              aria-label={t('Remove tag')}\n                              icon={<IconDelete size=\"xs\" />}\n                              data-test-id=\"delete\"\n                            />\n                          </Confirm>\n                        </Actions>\n                      </TagPanelItem>\n                    );\n                  })\n                }\n              </Access>\n            )}\n          </PanelBody>\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n\nexport default ProjectTags;\n\nconst TagPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst TagName = styled('div')`\n  flex: 1;\n  padding: ${space(2)};\n`;\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n`;\n"],"names":["getPadding","_ref","disablePadding","hasButtons","css","space","_styled","target","p","lightText","theme","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary","routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","permissionAlertText","t","PermissionAlert","access","project","team","props","Access","_ref2","hasAccess","Alert","type","ProjectTags","constructor","_defineProperty","key","idx","async","organization","params","projectId","api","requestPromise","slug","method","tags","state","splice","setState","error","loading","getDefaultState","super","getEndpoints","routeTitleGen","renderBody","isEmpty","_jsxs","Fragment","SettingsPageHeader","TextBlock","tct","link","ExternalLink","href","Panel","PanelHeader","PanelBody","EmptyMessage","map","canDelete","enabled","TagPanelItem","TagName","Actions","Confirm","message","onConfirm","handleDelete","disabled","Button","size","icon","IconDelete","PanelItem","name","styles"],"sourceRoot":""}