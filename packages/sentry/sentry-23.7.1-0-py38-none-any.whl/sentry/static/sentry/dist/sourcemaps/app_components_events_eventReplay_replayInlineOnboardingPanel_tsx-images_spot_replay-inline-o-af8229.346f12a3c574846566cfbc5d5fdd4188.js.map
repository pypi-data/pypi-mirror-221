{"version":3,"file":"chunks/app_components_events_eventReplay_replayInlineOnboardingPanel_tsx-images_spot_replay-inline-o-af8229.xxxxxxxxxxxxxxxxxxxx.js","mappings":"w2BAaA,MAAMA,EAAoB,uCACpBC,EAAc,OACdC,EAAe,QAMrB,SAASC,EAAiBC,GACxBC,EAAAA,EAAaC,QAAQN,EAAmBO,OAAOC,KAAKC,MAAQL,GAC9D,CAMe,SAASM,IACtB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,KACvC,MAAMC,EAbDC,OAAOV,EAAAA,EAAaW,QAAQhB,KAAuB,EAcxD,SAAIc,GAAiBN,KAAKC,MAAQK,KANpCT,EAAAA,EAAaY,WAAWjB,IAUf,EAAK,KAER,gBAACkB,IAAmBC,EAAAA,EAAAA,MAE1B,OAAIR,EACK,MAIPS,EAAAA,EAAAA,IAACC,EAAAA,EAAkB,CAAAC,UACjBC,EAAAA,EAAAA,IAACC,EAAqB,CAAAF,SAAA,EACpBC,EAAAA,EAAAA,IAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,IAACK,EAAO,CAAAH,UAAEI,EAAAA,EAAAA,GAAE,+BACZN,EAAAA,EAAAA,IAACO,EAAO,CAAAL,UACLI,EAAAA,EAAAA,GACC,iFAGJH,EAAAA,EAAAA,IAACK,EAAU,CAAAN,SAAA,EACTF,EAAAA,EAAAA,IAACS,EAAAA,GAAM,CAACC,QAASZ,EAAiBa,SAAS,UAAUC,KAAK,KAAIV,UAC3DI,EAAAA,EAAAA,GAAE,kBAELH,EAAAA,EAAAA,IAACU,EAAAA,GAAS,CAACC,QAAM,EAAAZ,SAAA,EACfF,EAAAA,EAAAA,IAACS,EAAAA,GAAM,CACLG,KAAK,KACLF,QAASA,KACP3B,EAAiBF,GACjBW,GAAY,EAAK,EACjBU,UAEDI,EAAAA,EAAAA,GAAE,aAELN,EAAAA,EAAAA,IAACS,EAAAA,GAAM,CACLG,KAAK,KACLF,QAASA,KACP3B,EAAiBD,GACjBU,GAAY,EAAK,EACjBU,UAEDI,EAAAA,EAAAA,GAAE,uBAKXN,EAAAA,EAAAA,IAACe,EAAY,CAACC,IAAKC,EAAyBC,MAAO,IAAKC,OAAQ,IAAKC,IAAI,SAIjF,CAvDwB9B,EAA2B+B,YAAA,8BAyDnD,MAAMjB,GAAwBkB,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,yEAIpBE,GAAKA,EAAEC,MAAMC,QAAM,mBACvBF,GAAKA,EAAEC,MAAME,cAAY,aAC/BC,EAAAA,EAAAA,GAAM,GAAE,mBACFA,EAAAA,EAAAA,GAAM,GAAE,wBAEJJ,GAAKA,EAAEC,MAAMI,YAAYC,OAAK,0BAK/CzB,GAAUiB,EAAAA,EAAAA,GAAO,KAAI,CAAAC,OAAA,aAAXD,CAAY,uCAEbE,GAAKA,EAAEC,MAAMM,eAAa,WAC9BP,GAAKA,EAAEC,MAAMO,SAAO,mBACZJ,EAAAA,EAAAA,GAAM,GAAE,KAGrBrB,GAAUe,EAAAA,EAAAA,GAAO,IAAG,CAAAC,OAAA,aAAVD,CAAW,kBACRM,EAAAA,EAAAA,GAAM,GAAE,eACZJ,GAAKA,EAAEC,MAAMQ,gBAAc,KAGpClB,GAAeO,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,oCAGXE,GAAKA,EAAEC,MAAMI,YAAYC,OAAK,qBAK/CtB,GAAac,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,4EAIrBM,EAAAA,EAAAA,GAAM,GAAE,I","sources":["webpack:///./app/components/events/eventReplay/replayInlineOnboardingPanel.tsx"],"sourcesContent":["import {useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport replaysInlineOnboarding from 'sentry-images/spot/replay-inline-onboarding.svg';\n\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {EventReplaySection} from 'sentry/components/events/eventReplay/eventReplaySection';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport localStorage from 'sentry/utils/localStorage';\nimport {useReplayOnboardingSidebarPanel} from 'sentry/utils/replays/hooks/useReplayOnboarding';\n\nconst LOCAL_STORAGE_KEY = 'replay-preview-onboarding-hide-until';\nconst SNOOZE_TIME = 1000 * 60 * 60 * 24 * 7; // 1 week\nconst DISMISS_TIME = 1000 * 60 * 60 * 24 * 365; // 1 year\n\nfunction getHideUntilTime() {\n  return Number(localStorage.getItem(LOCAL_STORAGE_KEY)) || 0;\n}\n\nfunction setHideUntilTime(offset: number) {\n  localStorage.setItem(LOCAL_STORAGE_KEY, String(Date.now() + offset));\n}\n\nfunction clearHideUntilTime() {\n  localStorage.removeItem(LOCAL_STORAGE_KEY);\n}\n\nexport default function ReplayInlineOnboardingPanel() {\n  const [isHidden, setIsHidden] = useState(() => {\n    const hideUntilTime = getHideUntilTime();\n    if (hideUntilTime && Date.now() < hideUntilTime) {\n      return true;\n    }\n    clearHideUntilTime();\n    return false;\n  });\n  const {activateSidebar} = useReplayOnboardingSidebarPanel();\n\n  if (isHidden) {\n    return null;\n  }\n\n  return (\n    <EventReplaySection>\n      <StyledOnboardingPanel>\n        <div>\n          <Heading>{t('Configure Session Replay')}</Heading>\n          <Content>\n            {t(\n              'Playback your app to identify the root cause of errors and latency issues.'\n            )}\n          </Content>\n          <ButtonList>\n            <Button onClick={activateSidebar} priority=\"primary\" size=\"sm\">\n              {t('Get Started')}\n            </Button>\n            <ButtonBar merged>\n              <Button\n                size=\"sm\"\n                onClick={() => {\n                  setHideUntilTime(SNOOZE_TIME);\n                  setIsHidden(true);\n                }}\n              >\n                {t('Snooze')}\n              </Button>\n              <Button\n                size=\"sm\"\n                onClick={() => {\n                  setHideUntilTime(DISMISS_TIME);\n                  setIsHidden(true);\n                }}\n              >\n                {t('Dismiss')}\n              </Button>\n            </ButtonBar>\n          </ButtonList>\n        </div>\n        <Illustration src={replaysInlineOnboarding} width={220} height={112} alt=\"\" />\n      </StyledOnboardingPanel>\n    </EventReplaySection>\n  );\n}\n\nconst StyledOnboardingPanel = styled('div')`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  border: 1px dashed ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  padding: ${space(3)};\n  margin-bottom: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex-direction: row;\n  }\n`;\n\nconst Heading = styled('h3')`\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n  margin-bottom: ${space(1)};\n`;\n\nconst Content = styled('p')`\n  margin-bottom: ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst Illustration = styled('img')`\n  display: none;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n  }\n`;\n\nconst ButtonList = styled('div')`\n  display: inline-flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 0 ${space(1)};\n`;\n"],"names":["LOCAL_STORAGE_KEY","SNOOZE_TIME","DISMISS_TIME","setHideUntilTime","offset","localStorage","setItem","String","Date","now","ReplayInlineOnboardingPanel","isHidden","setIsHidden","useState","hideUntilTime","Number","getItem","removeItem","activateSidebar","useReplayOnboardingSidebarPanel","_jsx","EventReplaySection","children","_jsxs","StyledOnboardingPanel","Heading","t","Content","ButtonList","Button","onClick","priority","size","ButtonBar","merged","Illustration","src","replaysInlineOnboarding","width","height","alt","displayName","_styled","target","p","theme","border","borderRadius","space","breakpoints","small","fontSizeSmall","gray300","fontSizeMedium"],"sourceRoot":""}