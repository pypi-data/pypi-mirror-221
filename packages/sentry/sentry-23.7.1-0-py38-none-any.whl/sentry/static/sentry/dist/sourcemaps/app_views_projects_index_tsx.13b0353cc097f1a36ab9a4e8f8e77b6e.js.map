{"version":3,"file":"chunks/app_views_projects_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6XAiBO,MAAMA,GAAmCC,EAAAA,EAAAA,eAAoC,CAClFC,aAASC,EACTC,WAAYA,SAQP,SAASC,EAAwCC,GAGtC,IAHuC,SACvDC,EAAQ,QACRL,GACcI,EACd,MAAOE,EAAgBC,IAAqBC,EAAAA,EAAAA,GAEzC,+BAAgC,CACjCR,YAGIS,GAAmBC,EAAAA,EAAAA,cACtBC,IACCJ,EAAkB,CAACP,QAASW,GAAY,GAE1C,CAACJ,IAGH,OACEK,EAAAA,EAAAA,IAACd,EAAiCe,SAAQ,CACxCC,MAAO,CACLd,QAASM,EAAeN,QACxBE,WAAYO,GACZJ,SAEDA,GAGP,CA3BgBF,EAAwCY,YAAA,0C,gPCrBzC,SAASC,EAAQZ,GAAoB,IAAnB,SAACC,GAAgBD,EAChD,OACEQ,EAAAA,EAAAA,IAACT,EAAAA,EAAwC,CAAAE,SACtCA,GAGP,CANwBW,EAAQD,YAAA,U","sources":["webpack:///./app/views/projects/gettingStartedWithProjectContext.tsx","webpack:///./app/views/projects/index.tsx"],"sourcesContent":["import {createContext, useCallback} from 'react';\n\nimport {OnboardingSelectedSDK, Project} from 'sentry/types';\nimport {IssueAlertRule} from 'sentry/types/alerts';\nimport {useSessionStorage} from 'sentry/utils/useSessionStorage';\n\ntype GettingStartedWithProject = Pick<Project, 'name' | 'id'> & {\n  alertRules: IssueAlertRule[];\n  platform: OnboardingSelectedSDK;\n  teamSlug?: Project['team']['slug'];\n};\n\nexport type ProjectsContextProps = {\n  setProject: (project: GettingStartedWithProject) => void;\n  project?: GettingStartedWithProject;\n};\n\nexport const GettingStartedWithProjectContext = createContext<ProjectsContextProps>({\n  project: undefined,\n  setProject: () => {},\n});\n\ntype ProviderProps = {\n  children: React.ReactNode;\n  project?: GettingStartedWithProject;\n};\n\nexport function GettingStartedWithProjectContextProvider({\n  children,\n  project,\n}: ProviderProps) {\n  const [sessionStorage, setSessionStorage] = useSessionStorage<{\n    project?: GettingStartedWithProject;\n  }>('getting-started-with-project', {\n    project,\n  });\n\n  const handleSetProject = useCallback(\n    (newProject?: GettingStartedWithProject) => {\n      setSessionStorage({project: newProject});\n    },\n    [setSessionStorage]\n  );\n\n  return (\n    <GettingStartedWithProjectContext.Provider\n      value={{\n        project: sessionStorage.project,\n        setProject: handleSetProject,\n      }}\n    >\n      {children}\n    </GettingStartedWithProjectContext.Provider>\n  );\n}\n","import {GettingStartedWithProjectContextProvider} from './gettingStartedWithProjectContext';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport default function Projects({children}: Props) {\n  return (\n    <GettingStartedWithProjectContextProvider>\n      {children}\n    </GettingStartedWithProjectContextProvider>\n  );\n}\n"],"names":["GettingStartedWithProjectContext","createContext","project","undefined","setProject","GettingStartedWithProjectContextProvider","_ref","children","sessionStorage","setSessionStorage","useSessionStorage","handleSetProject","useCallback","newProject","_jsx","Provider","value","displayName","Projects"],"sourceRoot":""}