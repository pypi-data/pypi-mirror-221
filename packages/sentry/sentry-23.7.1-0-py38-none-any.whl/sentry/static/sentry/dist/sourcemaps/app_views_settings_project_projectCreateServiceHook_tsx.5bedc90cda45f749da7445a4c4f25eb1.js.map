{"version":3,"file":"chunks/app_views_settings_project_projectCreateServiceHook_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/forms/fields/booleanField.tsx","webpack:///./app/components/switchButton.tsx","webpack:///./app/views/settings/project/projectCreateServiceHook.tsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport Confirm from 'sentry/components/confirm';\nimport FormField from 'sentry/components/forms/formField';\nimport Switch from 'sentry/components/switchButton';\nimport {Tooltip} from 'sentry/components/tooltip';\n\n// XXX(epurkhiser): This is wrong, it should not be inheriting these props\nimport {InputFieldProps, OnEvent} from './inputField';\n\nexport interface BooleanFieldProps extends InputFieldProps {\n  confirm?: {\n    false?: React.ReactNode;\n    true?: React.ReactNode;\n  };\n}\n\nexport default class BooleanField extends Component<BooleanFieldProps> {\n  coerceValue(value: any) {\n    return !!value;\n  }\n\n  handleChange = (\n    value: any,\n    onChange: OnEvent,\n    onBlur: OnEvent,\n    e: React.FormEvent<HTMLInputElement>\n  ) => {\n    // We need to toggle current value because Switch is not an input\n    const newValue = this.coerceValue(!value);\n    onChange(newValue, e);\n    onBlur(newValue, e);\n  };\n\n  render() {\n    const {confirm, disabledReason, ...fieldProps} = this.props;\n\n    return (\n      <FormField {...fieldProps} resetOnError>\n        {({\n          children: _children,\n          onChange,\n          onBlur,\n          value,\n          disabled,\n          ...props\n        }: {\n          disabled: boolean;\n          onBlur: OnEvent;\n          onChange: OnEvent;\n          type: string;\n          value: any;\n          children?: React.ReactNode;\n        }) => {\n          // Create a function with required args bound\n          const handleChange = this.handleChange.bind(this, value, onChange, onBlur);\n\n          const {type: _, ...propsWithoutType} = props;\n          const switchProps = {\n            ...propsWithoutType,\n            size: 'lg' as React.ComponentProps<typeof Switch>['size'],\n            isActive: !!value,\n            isDisabled: disabled,\n            toggle: handleChange,\n          };\n\n          if (confirm) {\n            return (\n              <Confirm\n                renderMessage={() => confirm[(!value).toString()]}\n                onConfirm={() => handleChange({})}\n              >\n                {({open}) => (\n                  <Tooltip title={disabledReason} skipWrapper disabled={!disabled}>\n                    <Switch\n                      {...switchProps}\n                      toggle={(e: React.MouseEvent) => {\n                        // If we have a `confirm` prop and enabling switch\n                        // Then show confirm dialog, otherwise propagate change as normal\n                        if (confirm[(!value).toString()]) {\n                          // Open confirm modal\n                          open();\n                          return;\n                        }\n\n                        handleChange(e);\n                      }}\n                    />\n                  </Tooltip>\n                )}\n              </Confirm>\n            );\n          }\n\n          return (\n            <Tooltip title={disabledReason} skipWrapper disabled={!disabled}>\n              <Switch {...switchProps} />\n            </Tooltip>\n          );\n        }}\n      </FormField>\n    );\n  }\n}\n","import {forwardRef} from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  toggle: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n  /**\n   * Toggle color is always active.\n   */\n  forceActiveColor?: boolean;\n  forwardedRef?: React.Ref<HTMLButtonElement>;\n  id?: string;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n  name?: string;\n  size?: 'sm' | 'lg';\n};\n\nfunction Switch({\n  forwardedRef,\n  size = 'sm',\n  isActive,\n  forceActiveColor,\n  isLoading,\n  isDisabled,\n  toggle,\n  id,\n  name,\n  className,\n  ...props\n}: Props) {\n  return (\n    <SwitchButton\n      ref={forwardedRef}\n      id={id}\n      name={name}\n      type=\"button\"\n      className={className}\n      onClick={isDisabled ? undefined : toggle}\n      role=\"checkbox\"\n      aria-checked={isActive}\n      isLoading={isLoading}\n      disabled={isDisabled}\n      isActive={isActive}\n      size={size}\n      data-test-id=\"switch\"\n      {...props}\n    >\n      <Toggle\n        isDisabled={isDisabled}\n        isActive={isActive}\n        forceActiveColor={forceActiveColor}\n        size={size}\n      />\n    </SwitchButton>\n  );\n}\n\ntype StyleProps = Partial<Props>;\n\nconst getSize = (p: StyleProps) => (p.size === 'sm' ? 16 : 24);\nconst getToggleSize = (p: StyleProps) => getSize(p) - (p.size === 'sm' ? 4 : 8);\nconst getToggleTop = (p: StyleProps) => (p.size === 'sm' ? 1 : 3);\nconst getTranslateX = (p: StyleProps) =>\n  p.isActive ? getToggleTop(p) + getSize(p) * 0.875 : getToggleTop(p);\n\nconst SwitchButton = styled('button')<StyleProps>`\n  display: inline-block;\n  background: none;\n  padding: 0;\n  border: 1px solid ${p => p.theme.border};\n  position: relative;\n  box-shadow: inset ${p => p.theme.dropShadowMedium};\n  height: ${getSize}px;\n  width: ${p => getSize(p) * 1.875}px;\n  border-radius: ${getSize}px;\n  transition: border 0.1s, box-shadow 0.1s;\n\n  &[disabled] {\n    cursor: not-allowed;\n  }\n\n  &:focus,\n  &.focus-visible {\n    outline: none;\n    border-color: ${p => p.theme.focusBorder};\n    box-shadow: ${p => p.theme.focusBorder} 0 0 0 1px;\n  }\n`;\n\nconst Toggle = styled('span')<StyleProps>`\n  display: block;\n  position: absolute;\n  border-radius: 50%;\n  transition: 0.25s all ease;\n  top: ${getToggleTop}px;\n  transform: translateX(${getTranslateX}px);\n  width: ${getToggleSize}px;\n  height: ${getToggleSize}px;\n  background: ${p =>\n    p.isActive || p.forceActiveColor ? p.theme.active : p.theme.border};\n  opacity: ${p => (p.isDisabled ? 0.4 : null)};\n`;\n\nexport default forwardRef<HTMLButtonElement, Props>((props, ref) => (\n  <Switch {...props} forwardedRef={ref} />\n));\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'sentry/views/settings/project/serviceHookSettingsForm';\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n};\n\nfunction ProjectCreateServiceHook({organization, params}: Props) {\n  const {projectId} = params;\n  const title = t('Create Service Hook');\n\n  return (\n    <SentryDocumentTitle title={title}>\n      <Fragment>\n        <SettingsPageHeader title={title} />\n        <ServiceHookSettingsForm\n          organization={organization}\n          projectId={projectId}\n          initialData={{events: [], isActive: true}}\n        />\n      </Fragment>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default withOrganization(ProjectCreateServiceHook);\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport ApiForm from 'sentry/components/forms/apiForm';\nimport MultipleCheckbox from 'sentry/components/forms/controls/multipleCheckbox';\nimport BooleanField from 'sentry/components/forms/fields/booleanField';\nimport TextField from 'sentry/components/forms/fields/textField';\nimport FormField from 'sentry/components/forms/formField';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport {t} from 'sentry/locale';\nimport {Organization, ServiceHook} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\nconst EVENT_CHOICES = ['event.alert', 'event.created'];\n\ntype Props = {\n  initialData: Partial<ServiceHook> & {isActive: boolean};\n  organization: Organization;\n  projectId: string;\n  hookId?: string;\n};\n\nexport default class ServiceHookSettingsForm extends Component<Props> {\n  onSubmitSuccess = () => {\n    const {organization, projectId} = this.props;\n    browserHistory.push(\n      normalizeUrl(`/settings/${organization.slug}/projects/${projectId}/hooks/`)\n    );\n  };\n\n  render() {\n    const {initialData, organization, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${organization.slug}/${projectId}/hooks/${hookId}/`\n      : `/projects/${organization.slug}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({name, value, onChange}) => (\n                <MultipleCheckbox onChange={onChange} value={value} name={name}>\n                  {EVENT_CHOICES.map(event => (\n                    <MultipleCheckbox.Item key={event} value={event}>\n                      {event}\n                    </MultipleCheckbox.Item>\n                  ))}\n                </MultipleCheckbox>\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n"],"names":["BooleanField","Component","constructor","arguments","_defineProperty","value","onChange","onBlur","e","newValue","this","coerceValue","render","confirm","disabledReason","fieldProps","props","_jsx","FormField","resetOnError","children","_ref","_children","disabled","handleChange","bind","type","_","propsWithoutType","switchProps","size","isActive","isDisabled","toggle","Confirm","renderMessage","toString","onConfirm","_ref2","open","Tooltip","title","skipWrapper","Switch","displayName","forwardedRef","forceActiveColor","isLoading","id","name","className","SwitchButton","ref","onClick","undefined","role","Toggle","getSize","p","getToggleSize","getToggleTop","getTranslateX","_styled","target","theme","border","dropShadowMedium","focusBorder","active","forwardRef","ProjectCreateServiceHook","organization","params","projectId","t","SentryDocumentTitle","_jsxs","Fragment","SettingsPageHeader","ServiceHookSettingsForm","initialData","events","withOrganization","EVENT_CHOICES","browserHistory","push","normalizeUrl","slug","hookId","endpoint","Panel","ApiForm","apiMethod","apiEndpoint","onSubmitSuccess","footerStyle","marginTop","paddingRight","submitLabel","PanelHeader","PanelBody","label","TextField","required","help","inline","MultipleCheckbox","map","event","Item"],"sourceRoot":""}