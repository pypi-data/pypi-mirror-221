{"version":3,"file":"chunks/app_views_discover_homepage_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"63BAkCA,MAAMA,UAAyBC,EAAAA,EAAoDC,cAAA,SAAAC,YAAAC,EAAAA,EAAAA,GAAA,qBAClE,IAAIA,EAAAA,EAAAA,GAAA,sBAoEFC,IACfC,KAAKC,SAAS,CAACC,WAAYH,GAAe,GAC3C,CApEDI,mBAAmBC,EAAGC,GACpB,MAAMC,GAAwBD,EAAUH,YAAcF,KAAKO,MAAML,WAC3DM,EAAqBH,EAAUI,UAAYT,KAAKO,MAAME,QACtDC,EAAiBV,KAAKO,MAAML,YAA6C,KAA/BF,KAAKW,MAAMC,SAASC,OAC9DC,EAAyBC,EAAAA,GAAUC,aAAahB,KAAKW,MAAMC,UAAUK,UAE3E,GACEjB,KAAKO,MAAML,aACTM,GAAsBF,IAAyBQ,GAC/CJ,GACF,CACA,MAAMQ,EAAYH,EAAAA,GAAUI,eAAenB,KAAKO,MAAML,YAChDkB,GAAkBC,EAAAA,EAAAA,IAAqBrB,KAAKW,MAAMW,aAAaC,MACrE,IAAIC,EAAQ,IACPN,EAAUO,6BAMXL,GAAiBM,eACnBN,EAAgBM,cAAcC,SAAQC,IACpC,GAAqB,aAAjBA,EACFJ,EAAMK,QAAUT,EAAgBb,MAAMsB,SAASC,IAAIC,aAC9C,GAAqB,aAAjBH,EAA6B,CACtC,MAAM,OAACI,EAAM,MAAEC,EAAK,IAAEC,EAAG,IAAEC,IAAOC,EAAAA,EAAAA,IAAqBhB,EAAgBb,OACvEiB,EAAQ,IACHA,EACHa,YAAaL,QAAUM,EACvBH,IAAKA,GAAKI,WACVN,OAAOO,EAAAA,EAAAA,IAAwBP,GAC/BC,KAAKM,EAAAA,EAAAA,IAAwBN,GAEjC,MACEV,EAAMI,GAAgBR,EAAgBb,MAAMqB,EAC9C,IAIJa,EAAAA,eAAeC,QAAQ,IAClB1C,KAAKW,MAAMC,SACdY,SAEJ,CACF,CAEAmB,eACE,MAAM,aAACrB,GAAgBtB,KAAKW,MAEtBiC,EAAkE,GAOxE,OANItB,EAAauB,SAASC,SAAS,mBACjCF,EAAUG,KAAK,CACb,aACC,kBAAiBzB,EAAaC,4BAG5BqB,CACT,CAEAI,iBAAgBC,GAAmB,IAAlB,SAACC,EAAQ,KAAEC,GAAKF,EAEd,eAAbC,GAAsC,KAATC,GAC/BnD,KAAKC,SAAS,CAACC,WAAY,MAE/B,CAMAkD,aACE,MAAM,WAAClD,EAAU,QAAEO,GAAWT,KAAKO,MACnC,OACE8C,EAAAA,EAAAA,IAACC,EAAAA,QAAO,IACFtD,KAAKW,MACTT,WAAYA,QAAcoC,EAC1B7B,QAASA,EACT8C,cAAevD,KAAKuD,cACpBC,YAAU,GAGhB,EAGF,SAASC,EAAkB9C,GACzB,OACE0C,EAAAA,EAAAA,IAACK,EAAAA,EAAoB,CAACC,yBAAuB,EAAAC,UAC3CP,EAAAA,EAAAA,IAAC3D,EAAgB,IAAKiB,KAG5B,CANS8C,EAAiBI,YAAA,oBAQ1B,SAAeC,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,EAAAA,GAAgBP,I","sources":["webpack:///./app/views/discover/homepage.tsx"],"sourcesContent":["import {browserHistory, InjectedRouter} from 'react-router';\nimport {Location} from 'history';\n\nimport {Client} from 'sentry/api';\nimport DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport {\n  getDatetimeFromState,\n  normalizeDateTimeString,\n} from 'sentry/components/organizations/pageFilters/parse';\nimport {getPageFilterStorage} from 'sentry/components/organizations/pageFilters/persistence';\nimport {Organization, PageFilters, SavedQuery} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport {Results} from './results';\n\ntype Props = {\n  api: Client;\n  loading: boolean;\n  location: Location;\n  organization: Organization;\n  router: InjectedRouter;\n  selection: PageFilters;\n  setSavedQuery: (savedQuery: SavedQuery) => void;\n};\n\ntype HomepageQueryState = DeprecatedAsyncComponent['state'] & {\n  savedQuery?: SavedQuery | null;\n  starfishResult?: null;\n};\n\nclass HomepageQueryAPI extends DeprecatedAsyncComponent<Props, HomepageQueryState> {\n  shouldReload = true;\n\n  componentDidUpdate(_, prevState) {\n    const hasFetchedSavedQuery = !prevState.savedQuery && this.state.savedQuery;\n    const hasInitiallyLoaded = prevState.loading && !this.state.loading;\n    const sidebarClicked = this.state.savedQuery && this.props.location.search === '';\n    const hasValidEventViewInURL = EventView.fromLocation(this.props.location).isValid();\n\n    if (\n      this.state.savedQuery &&\n      ((hasInitiallyLoaded && hasFetchedSavedQuery && !hasValidEventViewInURL) ||\n        sidebarClicked)\n    ) {\n      const eventView = EventView.fromSavedQuery(this.state.savedQuery);\n      const pageFilterState = getPageFilterStorage(this.props.organization.slug);\n      let query = {\n        ...eventView.generateQueryStringObject(),\n      };\n\n      // Handle locked filters explicitly because we can't expect\n      // PageFilterContainer to properly overwrite stored filters\n      // when pushing the homepage query to the URL\n      if (pageFilterState?.pinnedFilters) {\n        pageFilterState.pinnedFilters.forEach(pinnedFilter => {\n          if (pinnedFilter === 'projects') {\n            query.project = pageFilterState.state.project?.map(String);\n          } else if (pinnedFilter === 'datetime') {\n            const {period, start, end, utc} = getDatetimeFromState(pageFilterState.state);\n            query = {\n              ...query,\n              statsPeriod: period ?? undefined,\n              utc: utc?.toString(),\n              start: normalizeDateTimeString(start),\n              end: normalizeDateTimeString(end),\n            };\n          } else {\n            query[pinnedFilter] = pageFilterState.state[pinnedFilter];\n          }\n        });\n      }\n\n      browserHistory.replace({\n        ...this.props.location,\n        query,\n      });\n    }\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncComponent['getEndpoints']> {\n    const {organization} = this.props;\n\n    const endpoints: ReturnType<DeprecatedAsyncComponent['getEndpoints']> = [];\n    if (organization.features.includes('discover-query')) {\n      endpoints.push([\n        'savedQuery',\n        `/organizations/${organization.slug}/discover/homepage/`,\n      ]);\n    }\n    return endpoints;\n  }\n\n  onRequestSuccess({stateKey, data}) {\n    // No homepage query results in a 204, returning an empty string\n    if (stateKey === 'savedQuery' && data === '') {\n      this.setState({savedQuery: null});\n    }\n  }\n\n  setSavedQuery = (newSavedQuery?: SavedQuery) => {\n    this.setState({savedQuery: newSavedQuery});\n  };\n\n  renderBody(): React.ReactNode {\n    const {savedQuery, loading} = this.state;\n    return (\n      <Results\n        {...this.props}\n        savedQuery={savedQuery ?? undefined}\n        loading={loading}\n        setSavedQuery={this.setSavedQuery}\n        isHomepage\n      />\n    );\n  }\n}\n\nfunction HomepageContainer(props: Props) {\n  return (\n    <PageFiltersContainer skipInitializeUrlParams>\n      <HomepageQueryAPI {...props} />\n    </PageFiltersContainer>\n  );\n}\n\nexport default withApi(withOrganization(withPageFilters(HomepageContainer)));\n"],"names":["HomepageQueryAPI","DeprecatedAsyncComponent","constructor","arguments","_defineProperty","newSavedQuery","this","setState","savedQuery","componentDidUpdate","_","prevState","hasFetchedSavedQuery","state","hasInitiallyLoaded","loading","sidebarClicked","props","location","search","hasValidEventViewInURL","EventView","fromLocation","isValid","eventView","fromSavedQuery","pageFilterState","getPageFilterStorage","organization","slug","query","generateQueryStringObject","pinnedFilters","forEach","pinnedFilter","project","map","String","period","start","end","utc","getDatetimeFromState","statsPeriod","undefined","toString","normalizeDateTimeString","browserHistory","replace","getEndpoints","endpoints","features","includes","push","onRequestSuccess","_ref","stateKey","data","renderBody","_jsx","Results","setSavedQuery","isHomepage","HomepageContainer","PageFiltersContainer","skipInitializeUrlParams","children","displayName","withApi","withOrganization","withPageFilters"],"sourceRoot":""}