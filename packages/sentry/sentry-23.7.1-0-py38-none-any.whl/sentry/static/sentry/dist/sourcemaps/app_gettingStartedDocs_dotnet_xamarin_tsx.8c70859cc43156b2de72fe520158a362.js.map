{"version":3,"file":"chunks/app_gettingStartedDocs_dotnet_xamarin_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"ykBASO,MAAMA,EAAQ,eAAC,IACpBC,GAGDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAA2B,CAC/B,CACEG,KAAMC,EAAAA,GAASC,QACfC,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IAAI,sCAAuC,CAC1CC,QAAQH,EAAAA,EAAAA,IAAA,iBAIdI,eAAgB,CACd,CACEC,SAAU,QACVC,KAAO,oMAUb,CACEV,KAAMC,EAAAA,GAASU,UACfR,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,gSACA,CACEM,SAASR,EAAAA,EAAAA,IAAA,WACTS,mCAAmCT,EAAAA,EAAAA,IAAA,WACnCU,0BAA0BV,EAAAA,EAAAA,IAAA,eAKlCI,eAAgB,CACd,CACEL,aAAaC,EAAAA,EAAAA,IAAA,MAAAC,UAAKU,EAAAA,EAAAA,GAAE,aACpBP,eAAgB,CACd,CACEL,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IAAI,kDAAmD,CAACI,MAAMN,EAAAA,EAAAA,IAAA,eAGnEK,SAAW,SACXC,KAAO,yTAQUd,0dAavB,CACEO,aAAaC,EAAAA,EAAAA,IAAA,MAAAC,UAAKU,EAAAA,EAAAA,GAAE,SACpBP,eAAgB,CACd,CACEL,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IAAI,oDAAqD,CACxDI,MAAMN,EAAAA,EAAAA,IAAA,eAIZK,SAAW,SACXC,KAAO,iRAOUd,maAYvB,CACEO,aAAaC,EAAAA,EAAAA,IAAA,MAAAC,UAAKU,EAAAA,EAAAA,GAAE,SACpBP,eAAgB,CACd,CACEL,aACEa,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAZ,SAAA,EACPD,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IAAI,4CAA6C,CAChDI,MAAMN,EAAAA,EAAAA,IAAA,gBAGTW,EAAAA,EAAAA,GAAE,sEAGPN,SAAW,SACXC,KAAO,wMAOUd,qaAc3B,CACEI,KAAMC,EAAAA,GAASiB,OACff,aAAaY,EAAAA,EAAAA,GAAE,kEACfP,eAAgB,CACd,CACEC,SAAU,SACVC,KAAM,8CAGVS,gBAAgBJ,EAAAA,EAAAA,GACd,wFAGJ,CACEK,OAAOL,EAAAA,EAAAA,GAAE,0BACTZ,aAAaY,EAAAA,EAAAA,GACX,qFAEFP,eAAgB,CACd,CACEC,SAAU,SACVC,KAAO,ujBAmBXS,gBACEf,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,iGACA,CACEe,MACEjB,EAAAA,EAAAA,IAACkB,EAAAA,EAAY,CAACC,KAAK,8EAO/B,CACEH,OAAOL,EAAAA,EAAAA,GAAE,iBACTZ,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,4IACA,CACEe,MACEjB,EAAAA,EAAAA,IAACkB,EAAAA,EAAY,CAACC,KAAK,iEAO/B,CACEH,OAAOL,EAAAA,EAAAA,GAAE,eACTZ,aAAaY,EAAAA,EAAAA,GACX,iGAGJ,CACEK,OAAOL,EAAAA,EAAAA,GAAE,WACTZ,aACEC,EAAAA,EAAAA,IAAA,KAAAC,UACGC,EAAAA,EAAAA,IACC,0GACA,CACEe,MACEjB,EAAAA,EAAAA,IAACkB,EAAAA,EAAY,CAACC,KAAK,uEAOhC,EAGM,SAASC,EAAyBC,GAA+B,IAA9B,IAAC7B,KAAQ8B,GAAmBD,EACpE,OAAOrB,EAAAA,EAAAA,IAACuB,EAAAA,EAAM,CAAChC,MAAOA,EAAM,CAACC,WAAW8B,GAC1C,CAFgBF,EAAyBI,YAAA,4BAIzC,S","sources":["webpack:///./app/gettingStartedDocs/dotnet/xamarin.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Layout, LayoutProps} from 'sentry/components/onboarding/gettingStartedDoc/layout';\nimport {ModuleProps} from 'sentry/components/onboarding/gettingStartedDoc/sdkDocumentation';\nimport {StepType} from 'sentry/components/onboarding/gettingStartedDoc/step';\nimport {t, tct} from 'sentry/locale';\n\n// Configuration Start\nexport const steps = ({\n  dsn,\n}: {\n  dsn?: string;\n} = {}): LayoutProps['steps'] => [\n  {\n    type: StepType.INSTALL,\n    description: (\n      <p>\n        {tct('Install the [strong:NuGet] package:', {\n          strong: <strong />,\n        })}\n      </p>\n    ),\n    configurations: [\n      {\n        language: 'shell',\n        code: `\n# For Xamarin.Forms\nInstall-Package Sentry.Xamarin.Forms -Version 1.5.2\n\n# If you are not using Xamarin.Forms, but only Xamarin:\nInstall-Package Sentry.Xamarin -Version 1.5.2\n        `,\n      },\n    ],\n  },\n  {\n    type: StepType.CONFIGURE,\n    description: (\n      <p>\n        {tct(\n          'Initialize the SDK as early as possible, like in the constructor of the [appCode:App], and Add [sentryXamarinFormsIntegrationCode:SentryXamarinFormsIntegration] as a new Integration to [sentryXamarinOptionsCode:SentryXamarinOptions] if you are going to run your app with Xamarin Forms:',\n          {\n            appCode: <code />,\n            sentryXamarinFormsIntegrationCode: <code />,\n            sentryXamarinOptionsCode: <code />,\n          }\n        )}\n      </p>\n    ),\n    configurations: [\n      {\n        description: <h5>{t('Android')}</h5>,\n        configurations: [\n          {\n            description: (\n              <p>\n                {tct('Initialize the SDK on your [code:MainActivity].', {code: <code />})}\n              </p>\n            ),\n            language: `csharp`,\n            code: `\npublic class MainActivity : global::Xamarin.Forms.Platform.Android.FormsAppCompatActivity\n{\n    protected override void OnCreate(Bundle savedInstanceState)\n    {\n        SentryXamarin.Init(options =>\n        {\n            // Tells which project in Sentry to send events to:\n            options.Dsn = \"${dsn}\";\n            // When configuring for the first time, to see what the SDK is doing:\n            options.Debug = true;\n            // Set TracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n            // We recommend adjusting this value in production.\n            options.TracesSampleRate = 1.0;\n            // If you installed Sentry.Xamarin.Forms:\n            options.AddXamarinFormsIntegration();\n        });\n            `,\n          },\n        ],\n      },\n      {\n        description: <h5>{t('iOS')}</h5>,\n        configurations: [\n          {\n            description: (\n              <p>\n                {tct('Initialize the SDK on your [code:AppDelegate.cs].', {\n                  code: <code />,\n                })}\n              </p>\n            ),\n            language: `csharp`,\n            code: `\npublic partial class AppDelegate : global::Xamarin.Forms.Platform.iOS.FormsApplicationDelegate\n{\n    public override bool FinishedLaunching(UIApplication app, NSDictionary options)\n    {\n        SentryXamarin.Init(options =>\n        {\n            options.Dsn = \"${dsn}\";\n            // When configuring for the first time, to see what the SDK is doing:\n            options.Debug = true;\n            // Set TracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n            // We recommend adjusting this value in production.\n            options.TracesSampleRate = 1.0;\n            options.AddXamarinFormsIntegration();\n        });\n            `,\n          },\n        ],\n      },\n      {\n        description: <h5>{t('UWP')}</h5>,\n        configurations: [\n          {\n            description: (\n              <Fragment>\n                <p>\n                  {tct('Initialize the SDK on [code:App.xaml.cs].', {\n                    code: <code />,\n                  })}\n                </p>\n                {t(\"NOTE: It's recommended to not setup the CacheDirectory for UWP.\")}\n              </Fragment>\n            ),\n            language: `csharp`,\n            code: `\nsealed partial class App : Application\n{\n    protected override void OnLaunched(LaunchActivatedEventArgs e)\n    {\n        SentryXamarin.Init(options =>\n        {\n            options.Dsn = \"${dsn}\";\n            // When configuring for the first time, to see what the SDK is doing:\n            options.Debug = true;\n            // Set TracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n            // We recommend adjusting this value in production.\n            options.TracesSampleRate = 1.0;\n            options.AddXamarinFormsIntegration();\n        });\n            `,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    type: StepType.VERIFY,\n    description: t('To verify your set up, you can capture a message with the SDK:'),\n    configurations: [\n      {\n        language: 'csharp',\n        code: 'SentrySdk.CaptureMessage(\"Hello Sentry\");',\n      },\n    ],\n    additionalInfo: t(\n      'You might need to open the app again for the crash report to be sent to the server.'\n    ),\n  },\n  {\n    title: t('Performance Monitoring'),\n    description: t(\n      'You can measure the performance of your code by capturing transactions and spans.'\n    ),\n    configurations: [\n      {\n        language: 'csharp',\n        code: `\n// Transaction can be started by providing, at minimum, the name and the operation\nvar transaction = SentrySdk.StartTransaction(\n  \"test-transaction-name\",\n  \"test-transaction-operation\"\n);\n\n// Transactions can have child spans (and those spans can have child spans as well)\nvar span = transaction.StartChild(\"test-child-operation\");\n\n// ...\n// (Perform the operation represented by the span/transaction)\n// ...\n\nspan.Finish(); // Mark the span as finished\ntransaction.Finish(); // Mark the transaction as finished and send it to Sentry\n        `,\n      },\n    ],\n    additionalInfo: (\n      <p>\n        {tct(\n          'Check out [link:the documentation] to learn more about the API and automatic instrumentations.',\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/dotnet/performance/instrumentation/\" />\n            ),\n          }\n        )}\n      </p>\n    ),\n  },\n  {\n    title: t('Documentation'),\n    description: (\n      <p>\n        {tct(\n          \"Once you've verified the package is initialized properly and sent a test event, consider visiting our [link:complete Xamarin Forms docs].\",\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/dotnet/guides/xamarin/\" />\n            ),\n          }\n        )}\n      </p>\n    ),\n  },\n  {\n    title: t('Limitations'),\n    description: t(\n      'There are no line numbers on stack traces for UWP and in release builds for Android and iOS.'\n    ),\n  },\n  {\n    title: t('Samples'),\n    description: (\n      <p>\n        {tct(\n          'You can find an example of a Xamarin Forms app with Sentry integrated [link:on this GitHub repository].',\n          {\n            link: (\n              <ExternalLink href=\"https://github.com/getsentry/sentry-xamarin/tree/main/Samples\" />\n            ),\n          }\n        )}\n      </p>\n    ),\n  },\n];\n// Configuration End\n\nexport function GettingStartedWithXamarin({dsn, ...props}: ModuleProps) {\n  return <Layout steps={steps({dsn})} {...props} />;\n}\n\nexport default GettingStartedWithXamarin;\n"],"names":["steps","dsn","arguments","length","undefined","type","StepType","INSTALL","description","_jsx","children","tct","strong","configurations","language","code","CONFIGURE","appCode","sentryXamarinFormsIntegrationCode","sentryXamarinOptionsCode","t","_jsxs","Fragment","VERIFY","additionalInfo","title","link","ExternalLink","href","GettingStartedWithXamarin","_ref","props","Layout","displayName"],"sourceRoot":""}