{"version":3,"file":"chunks/app_views_settings_account_accountAuthorizations_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/account/accountAuthorizations.tsx"],"sourcesContent":["import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport PanelItem from 'sentry/components/panels/panelItem';\nimport {IconDelete} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {ApiApplication} from 'sentry/types';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\ntype Authorization = {\n  application: ApiApplication;\n  homepageUrl: string;\n  id: string;\n  scopes: string[];\n};\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = {\n  data: Authorization[];\n} & DeprecatedAsyncView['state'];\n\nclass AccountAuthorizations extends DeprecatedAsyncView<Props, State> {\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    return [['data', '/api-authorizations/']];\n  }\n\n  getTitle() {\n    return 'Approved Applications';\n  }\n\n  handleRevoke = authorization => {\n    const oldData = this.state.data;\n\n    this.setState(\n      state => ({\n        data: state.data.filter(({id}) => id !== authorization.id),\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-authorizations/', {\n            method: 'DELETE',\n            data: {authorization: authorization.id},\n          });\n\n          addSuccessMessage(t('Saved changes'));\n        } catch (_err) {\n          this.setState({\n            data: oldData,\n          });\n          addErrorMessage(t('Unable to save changes, please try again'));\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {data} = this.state;\n    const isEmpty = data.length === 0;\n    return (\n      <div>\n        <SettingsPageHeader title=\"Authorized Applications\" />\n        <Description>\n          {tct('You can manage your own applications via the [link:API dashboard].', {\n            link: <Link to=\"/settings/account/api/\" />,\n          })}\n        </Description>\n\n        <Panel>\n          <PanelHeader>{t('Approved Applications')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't approved any third party applications.\")}\n              </EmptyMessage>\n            )}\n\n            {!isEmpty && (\n              <div>\n                {data.map(authorization => (\n                  <PanelItemCenter key={authorization.id}>\n                    <ApplicationDetails>\n                      <ApplicationName>{authorization.application.name}</ApplicationName>\n                      {authorization.homepageUrl && (\n                        <Url>\n                          <ExternalLink href={authorization.homepageUrl}>\n                            {authorization.homepageUrl}\n                          </ExternalLink>\n                        </Url>\n                      )}\n                      <Scopes>{authorization.scopes.join(', ')}</Scopes>\n                    </ApplicationDetails>\n                    <Button\n                      size=\"sm\"\n                      onClick={() => this.handleRevoke(authorization)}\n                      icon={<IconDelete />}\n                      aria-label={t('Delete')}\n                    />\n                  </PanelItemCenter>\n                ))}\n              </div>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default AccountAuthorizations;\n\nconst Description = styled('p')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  margin-bottom: ${space(4)};\n`;\n\nconst PanelItemCenter = styled(PanelItem)`\n  align-items: center;\n`;\n\nconst ApplicationDetails = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst ApplicationName = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n`;\n\n/**\n * Intentionally wrap <a> so that it does not take up full width and cause\n * hit box issues\n */\nconst Url = styled('div')`\n  margin-bottom: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n\nconst Scopes = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n"],"names":["getPadding","_ref","disablePadding","hasButtons","css","space","_styled","target","p","lightText","theme","gray300","gray400","fontSizeSmall","border","panelBorderRadius","backgroundSecondary","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","AccountAuthorizations","constructor","arguments","_defineProperty","authorization","oldData","state","data","setState","filter","id","async","api","requestPromise","method","addSuccessMessage","t","_err","addErrorMessage","getEndpoints","renderBody","isEmpty","length","_jsxs","SettingsPageHeader","Description","tct","link","Link","to","Panel","PanelHeader","PanelBody","EmptyMessage","map","PanelItemCenter","ApplicationDetails","ApplicationName","application","name","homepageUrl","Url","ExternalLink","href","Scopes","scopes","join","Button","size","onClick","handleRevoke","icon","IconDelete","fontSizeRelativeSmall","PanelItem","styles"],"sourceRoot":""}