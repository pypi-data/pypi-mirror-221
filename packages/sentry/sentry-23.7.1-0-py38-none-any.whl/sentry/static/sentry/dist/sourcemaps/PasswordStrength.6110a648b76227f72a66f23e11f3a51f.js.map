{"version":3,"file":"chunks/PasswordStrength.xxxxxxxxxxxxxxxxxxxx.js","mappings":"2sBAoCA,SAASA,EAAgBC,GAIf,IAJgB,MACxBC,EAAK,OACLC,EAAS,CAAC,YAAa,YAAa,OAAQ,SAAU,eAAc,OACpEC,EAAS,CAACC,EAAAA,GAAMC,OAAQD,EAAAA,GAAMC,OAAQD,EAAAA,GAAME,UAAWF,EAAAA,GAAMG,SAAUH,EAAAA,GAAMG,WACvEP,EACN,GAAc,KAAVC,EACF,OAAO,KAGT,MAAMO,EAASC,IAAOR,GAEtB,IAAKO,EACH,OAAO,KAGT,MAAM,MAACE,GAASF,EACVG,EAAUC,KAAKC,OAAQH,EAAQ,GAjCrB,EAiCuC,KAEjDI,GAASC,EAAAA,EAAAA,IAAG,cACFZ,EAAOO,GAAM,UAClBC,EAAO,SAGlB,OACEK,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPC,EAAAA,EAAAA,IAACC,EAAgB,CACfC,KAAK,cACL,gBAAeX,EACf,gBAAe,EACf,gBAAe,IAAIQ,UAEnBC,EAAAA,EAAAA,IAACG,EAAmB,CAACP,IAAKD,OAE5BK,EAAAA,EAAAA,IAACI,EAAa,CAAAL,UACXM,EAAAA,EAAAA,IAAI,wBAAyB,CAC5BC,WAAWN,EAAAA,EAAAA,IAACO,EAAS,CAAAR,SAAEhB,EAAOQ,WAKxC,CAxCSX,EAAgB4B,YAAA,mBA0CzB,MAAMP,GAAmBQ,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,cACtBxB,EAAAA,GAAM0B,QAAO,kDAMvBR,GAAsBM,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,CAAAG,KAAA,UAAAjB,OAAA,gBAInCS,GAAgBK,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,+BAEnBI,EAAAA,EAAAA,GAAM,KAAK,UAChB5B,EAAAA,GAAM6B,QAAO,KAGlBP,GAAYE,EAAAA,EAAAA,GAAO,SAAQ,CAAAC,OAAA,aAAfD,CAAgB,UACvBM,GAAKA,EAAE9B,MAAM+B,OAAK,KAG7B,IAOaC,EAAWC,IAAA,IAAC,MAACC,EAAK,QAAEC,GAAQF,EAAA,OACvCE,GACAD,GACAA,EAAME,iBACJ,QACAC,KAASC,KACPC,EAAAA,EAAAA,SAAOxB,EAAAA,EAAAA,IAACpB,EAAgB,CAACE,MAAOyC,EAAEb,OAAO5B,QAAWsC,EAAQ,IAE/D,C","sources":["webpack:///./app/components/passwordStrength.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport {render} from 'react-dom';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport throttle from 'lodash/throttle';\nimport zxcvbn from 'zxcvbn';\n\nimport {tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport theme from 'sentry/utils/theme';\n\n/**\n * NOTE: Do not import this component synchronously. The zxcvbn library is\n * relatively large. This component should be loaded async as a split chunk.\n */\n\n/**\n * The maximum score that zxcvbn reports\n */\nconst MAX_SCORE = 5;\n\ntype Props = {\n  /**\n   * The password value.\n   */\n  value: string;\n  /**\n   * The color to make the progress bar for each strength level. 5 levels.\n   */\n  colors?: [string, string, string, string, string];\n  /**\n   * A set of labels to display for each password strength level. 5 levels.\n   */\n  labels?: [string, string, string, string, string];\n};\n\nfunction PasswordStrength({\n  value,\n  labels = ['Very Weak', 'Very Weak', 'Weak', 'Strong', 'Very Strong'],\n  colors = [theme.red300, theme.red300, theme.yellow300, theme.green300, theme.green300],\n}: Props) {\n  if (value === '') {\n    return null;\n  }\n\n  const result = zxcvbn(value);\n\n  if (!result) {\n    return null;\n  }\n\n  const {score} = result;\n  const percent = Math.round(((score + 1) / MAX_SCORE) * 100);\n\n  const styles = css`\n    background: ${colors[score]};\n    width: ${percent}%;\n  `;\n\n  return (\n    <Fragment>\n      <StrengthProgress\n        role=\"progressbar\"\n        aria-valuenow={score}\n        aria-valuemin={0}\n        aria-valuemax={100}\n      >\n        <StrengthProgressBar css={styles} />\n      </StrengthProgress>\n      <StrengthLabel>\n        {tct('Strength: [textScore]', {\n          textScore: <ScoreText>{labels[score]}</ScoreText>,\n        })}\n      </StrengthLabel>\n    </Fragment>\n  );\n}\n\nconst StrengthProgress = styled('div')`\n  background: ${theme.gray200};\n  height: 8px;\n  border-radius: 2px;\n  overflow: hidden;\n`;\n\nconst StrengthProgressBar = styled('div')`\n  height: 100%;\n`;\n\nconst StrengthLabel = styled('div')`\n  font-size: 0.8em;\n  margin-top: ${space(0.25)};\n  color: ${theme.gray400};\n`;\n\nconst ScoreText = styled('strong')`\n  color: ${p => p.theme.black};\n`;\n\nexport default PasswordStrength;\n\n/**\n * This is a shim that allows the password strength component to be used\n * outside of our main react application. Mostly useful since all of our\n * registration pages aren't in the react app.\n */\nexport const attachTo = ({input, element}) =>\n  element &&\n  input &&\n  input.addEventListener(\n    'input',\n    throttle(e => {\n      render(<PasswordStrength value={e.target.value} />, element);\n    })\n  );\n"],"names":["PasswordStrength","_ref","value","labels","colors","theme","red300","yellow300","green300","result","zxcvbn","score","percent","Math","round","styles","css","_jsxs","Fragment","children","_jsx","StrengthProgress","role","StrengthProgressBar","StrengthLabel","tct","textScore","ScoreText","displayName","_styled","target","gray200","name","space","gray400","p","black","attachTo","_ref2","input","element","addEventListener","throttle","e","render"],"sourceRoot":""}