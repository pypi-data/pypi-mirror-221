{"version":3,"file":"chunks/app_views_monitors_create_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"uVAIA,SAASA,IACP,OAAOC,EAAAA,EAAAA,IAACC,EAAAA,EAAe,CAACC,YAHE,QAGgCC,YAAa,CAACC,KAAM,OAChF,CAFSL,EAAmBM,YAAA,sBAI5B,S,8mBCKA,SAASC,IACP,MAAOC,KAAMC,IAAWC,EAAAA,EAAAA,KAOxB,OACEC,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPF,EAAAA,EAAAA,IAACG,EAAAA,GAAa,CAAAD,SAAA,EACZF,EAAAA,EAAAA,IAACG,EAAAA,GAAoB,CAAAD,SAAA,EACnBZ,EAAAA,EAAAA,IAACc,EAAAA,EAAW,CACVC,OAAQ,CACN,CACEC,OAAOC,EAAAA,EAAAA,GAAE,SACTC,GAAK,kBAAiBV,YAExB,CACEQ,OAAOC,EAAAA,EAAAA,GAAE,oBAIfjB,EAAAA,EAAAA,IAACa,EAAAA,GAAY,CAAAD,UAAEK,EAAAA,EAAAA,GAAE,qBAEnBjB,EAAAA,EAAAA,IAACa,EAAAA,GAAoB,CAAAD,UACnBZ,EAAAA,EAAAA,IAACD,EAAAA,EAAmB,UAGxBC,EAAAA,EAAAA,IAACa,EAAAA,GAAW,CAAAD,UACVZ,EAAAA,EAAAA,IAACa,EAAAA,GAAW,CAACM,WAAS,EAAAP,UACpBZ,EAAAA,EAAAA,IAACoB,EAAAA,EAAW,CACVC,UAAU,OACVC,YAAc,kBAAiBd,cAC/Be,gBA/BV,SAAyBC,GACvB,MAAMC,GAAMC,EAAAA,EAAAA,GAAc,kBAAiBlB,WAAiBgB,EAAKjB,SACjEoB,EAAAA,eAAeC,KAAKH,EACtB,EA6BUI,aAAaZ,EAAAA,EAAAA,GAAE,gBAM3B,CAzCSX,EAAaD,YAAA,gBA2CtB,S","sources":["webpack:///./app/views/monitors/components/cronsFeedbackButton.tsx","webpack:///./app/views/monitors/create.tsx"],"sourcesContent":["import {FeatureFeedback} from 'sentry/components/featureFeedback';\n\nconst CRONS_FEEDBACK_NAME = 'crons';\n\nfunction CronsFeedbackButton() {\n  return <FeatureFeedback featureName={CRONS_FEEDBACK_NAME} buttonProps={{size: 'sm'}} />;\n}\n\nexport default CronsFeedbackButton;\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport {t} from 'sentry/locale';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\nimport CronsFeedbackButton from './components/cronsFeedbackButton';\nimport MonitorForm from './components/monitorForm';\nimport {Monitor} from './types';\n\nfunction CreateMonitor() {\n  const {slug: orgSlug} = useOrganization();\n\n  function onSubmitSuccess(data: Monitor) {\n    const url = normalizeUrl(`/organizations/${orgSlug}/crons/${data.slug}/`);\n    browserHistory.push(url);\n  }\n\n  return (\n    <Fragment>\n      <Layout.Header>\n        <Layout.HeaderContent>\n          <Breadcrumbs\n            crumbs={[\n              {\n                label: t('Crons'),\n                to: `/organizations/${orgSlug}/crons/`,\n              },\n              {\n                label: t('Add Monitor'),\n              },\n            ]}\n          />\n          <Layout.Title>{t('Add Monitor')}</Layout.Title>\n        </Layout.HeaderContent>\n        <Layout.HeaderActions>\n          <CronsFeedbackButton />\n        </Layout.HeaderActions>\n      </Layout.Header>\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          <MonitorForm\n            apiMethod=\"POST\"\n            apiEndpoint={`/organizations/${orgSlug}/monitors/`}\n            onSubmitSuccess={onSubmitSuccess}\n            submitLabel={t('Next')}\n          />\n        </Layout.Main>\n      </Layout.Body>\n    </Fragment>\n  );\n}\n\nexport default CreateMonitor;\n"],"names":["CronsFeedbackButton","_jsx","FeatureFeedback","featureName","buttonProps","size","displayName","CreateMonitor","slug","orgSlug","useOrganization","_jsxs","Fragment","children","Layout","Breadcrumbs","crumbs","label","t","to","fullWidth","MonitorForm","apiMethod","apiEndpoint","onSubmitSuccess","data","url","normalizeUrl","browserHistory","push","submitLabel"],"sourceRoot":""}