{"version":3,"file":"chunks/app_views_settings_organizationDeveloperSettings_sentryApplicationDashboard_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/lineChart.tsx","webpack:///./app/components/panels/panelFooter.tsx","webpack:///./app/components/panels/panelHeader.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard/requestLog.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard/index.tsx"],"sourcesContent":["import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport LineSeries from './series/lineSeries';\nimport BaseChart, {BaseChartProps} from './baseChart';\n\nexport interface LineChartSeries\n  extends Series,\n    Omit<LineSeriesOption, 'data' | 'name' | 'color' | 'id' | 'areaStyle'> {\n  dataArray?: LineSeriesOption['data'];\n}\n\nexport interface LineChartProps extends Omit<BaseChartProps, 'series'> {\n  series: LineChartSeries[];\n  additionalSeries?: LineSeriesOption[];\n  seriesOptions?: LineSeriesOption;\n}\n\nexport function LineChart({series, seriesOptions, ...props}: LineChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      series={series.map(({seriesName, data, dataArray, ...options}) =>\n        LineSeries({\n          ...seriesOptions,\n          ...options,\n          name: seriesName,\n          data: dataArray || data?.map(({value, name}) => [name, value]),\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n        })\n      )}\n    />\n  );\n}\n","import styled from '@emotion/styled';\n\nconst PanelFooter = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  color: ${p => p.theme.subText};\n  font-size: 14px;\n`;\n\nexport default PanelFooter;\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Do not add padding to left and right of the header\n   */\n  disablePadding?: boolean;\n  /**\n   * Usually we place controls at the right of a panel header, to make the\n   * spacing between the edges correct we will want less padding on the right.\n   * Use this when the panel has something such as buttons living there.\n   */\n  hasButtons?: boolean;\n  /**\n   * Use light text\n   */\n  lightText?: boolean;\n};\n\nconst getPadding = ({disablePadding, hasButtons}: Props) => css`\n  padding: ${hasButtons ? space(1) : space(2)} ${disablePadding ? 0 : space(2)};\n`;\n\nconst PanelHeader = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${p => (p.lightText ? p.theme.gray300 : p.theme.gray400)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: calc(${p => p.theme.panelBorderRadius} - 1px)\n    calc(${p => p.theme.panelBorderRadius} - 1px) 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  position: relative;\n  ${getPadding};\n`;\n\nexport default PanelHeader;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport memoize from 'lodash/memoize';\nimport moment from 'moment-timezone';\n\nimport {Button, StyledButton} from 'sentry/components/button';\nimport Checkbox from 'sentry/components/checkbox';\nimport {CompactSelect} from 'sentry/components/compactSelect';\nimport DateTime from 'sentry/components/dateTime';\nimport DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport PanelItem from 'sentry/components/panels/panelItem';\nimport Tag from 'sentry/components/tag';\nimport {IconChevron, IconFlag, IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {SentryApp, SentryAppSchemaIssueLink, SentryAppWebhookRequest} from 'sentry/types';\nimport {shouldUse24Hours} from 'sentry/utils/dates';\n\nconst ALL_EVENTS = t('All Events');\nconst MAX_PER_PAGE = 10;\nconst is24Hours = shouldUse24Hours();\n\nconst componentHasSelectUri = (issueLinkComponent: SentryAppSchemaIssueLink): boolean => {\n  const hasSelectUri = (fields: any[]): boolean =>\n    fields.some(field => field.type === 'select' && 'uri' in field);\n\n  const createHasSelectUri =\n    hasSelectUri(issueLinkComponent.create.required_fields) ||\n    hasSelectUri(issueLinkComponent.create.optional_fields || []);\n\n  const linkHasSelectUri =\n    hasSelectUri(issueLinkComponent.link.required_fields) ||\n    hasSelectUri(issueLinkComponent.link.optional_fields || []);\n\n  return createHasSelectUri || linkHasSelectUri;\n};\n\nconst getEventTypes = memoize((app: SentryApp) => {\n  // TODO(nola): ideally this would be kept in sync with EXTENDED_VALID_EVENTS on the backend\n\n  let issueLinkEvents: string[] = [];\n  const issueLinkComponent = (app.schema.elements || []).find(\n    element => element.type === 'issue-link'\n  );\n  if (issueLinkComponent) {\n    issueLinkEvents = ['external_issue.created', 'external_issue.linked'];\n    if (componentHasSelectUri(issueLinkComponent as SentryAppSchemaIssueLink)) {\n      issueLinkEvents.push('select_options.requested');\n    }\n  }\n\n  const events = [\n    ALL_EVENTS,\n    // Internal apps don't have installation webhooks\n    ...(app.status !== 'internal'\n      ? ['installation.created', 'installation.deleted']\n      : []),\n    ...(app.events.includes('error') ? ['error.created'] : []),\n    ...(app.events.includes('issue')\n      ? ['issue.created', 'issue.resolved', 'issue.ignored', 'issue.assigned']\n      : []),\n    ...(app.isAlertable\n      ? [\n          'event_alert.triggered',\n          'metric_alert.open',\n          'metric_alert.resolved',\n          'metric_alert.critical',\n          'metric_alert.warning',\n        ]\n      : []),\n    ...issueLinkEvents,\n  ];\n\n  return events;\n});\n\nfunction ResponseCode({code}: {code: number}) {\n  let type: React.ComponentProps<typeof Tag>['type'] = 'error';\n  if (code <= 399 && code >= 300) {\n    type = 'warning';\n  } else if (code <= 299 && code >= 100) {\n    type = 'success';\n  }\n\n  return (\n    <Tags>\n      <StyledTag type={type}>{code === 0 ? 'timeout' : code}</StyledTag>\n    </Tags>\n  );\n}\n\nfunction TimestampLink({date, link}: {date: moment.MomentInput; link?: string}) {\n  return link ? (\n    <ExternalLink href={link}>\n      <DateTime date={date} />\n      <StyledIconOpen size=\"xs\" />\n    </ExternalLink>\n  ) : (\n    <DateTime date={date} format={is24Hours ? 'MMM D, YYYY HH:mm:ss z' : 'll LTS z'} />\n  );\n}\n\ntype Props = DeprecatedAsyncComponent['props'] & {\n  app: SentryApp;\n};\n\ntype State = DeprecatedAsyncComponent['state'] & {\n  currentPage: number;\n  errorsOnly: boolean;\n  eventType: string;\n  requests: SentryAppWebhookRequest[];\n};\n\nexport default class RequestLog extends DeprecatedAsyncComponent<Props, State> {\n  shouldReload = true;\n\n  get hasNextPage() {\n    return (this.state.currentPage + 1) * MAX_PER_PAGE < this.state.requests.length;\n  }\n\n  get hasPrevPage() {\n    return this.state.currentPage > 0;\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncComponent['getEndpoints']> {\n    const {slug} = this.props.app;\n\n    const query: any = {};\n    if (this.state) {\n      if (this.state.eventType !== ALL_EVENTS) {\n        query.eventType = this.state.eventType;\n      }\n      if (this.state.errorsOnly) {\n        query.errorsOnly = true;\n      }\n    }\n\n    return [['requests', `/sentry-apps/${slug}/requests/`, {query}]];\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      requests: [],\n      eventType: ALL_EVENTS,\n      errorsOnly: false,\n      currentPage: 0,\n    };\n  }\n\n  handleChangeEventType = (eventType: string) => {\n    this.setState(\n      {\n        eventType,\n        currentPage: 0,\n      },\n      this.remountComponent\n    );\n  };\n\n  handleChangeErrorsOnly = () => {\n    this.setState(\n      {\n        errorsOnly: !this.state.errorsOnly,\n        currentPage: 0,\n      },\n      this.remountComponent\n    );\n  };\n\n  handleNextPage = () => {\n    this.setState({\n      currentPage: this.state.currentPage + 1,\n    });\n  };\n\n  handlePrevPage = () => {\n    this.setState({\n      currentPage: this.state.currentPage - 1,\n    });\n  };\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {requests, eventType, errorsOnly, currentPage} = this.state;\n    const {app} = this.props;\n\n    const currentRequests = requests.slice(\n      currentPage * MAX_PER_PAGE,\n      (currentPage + 1) * MAX_PER_PAGE\n    );\n\n    return (\n      <Fragment>\n        <h5>{t('Request Log')}</h5>\n\n        <div>\n          <p>\n            {t(\n              'This log shows the status of any outgoing webhook requests from Sentry to your integration.'\n            )}\n          </p>\n\n          <RequestLogFilters>\n            <CompactSelect\n              triggerLabel={eventType}\n              value={eventType}\n              options={getEventTypes(app).map(type => ({\n                value: type,\n                label: type,\n              }))}\n              onChange={opt => this.handleChangeEventType(opt?.value)}\n            />\n\n            <StyledErrorsOnlyButton onClick={this.handleChangeErrorsOnly}>\n              <ErrorsOnlyCheckbox>\n                <Checkbox checked={errorsOnly} onChange={() => {}} />\n                {t('Errors Only')}\n              </ErrorsOnlyCheckbox>\n            </StyledErrorsOnlyButton>\n          </RequestLogFilters>\n        </div>\n\n        <Panel>\n          <PanelHeader>\n            <TableLayout hasOrganization={app.status !== 'internal'}>\n              <div>{t('Time')}</div>\n              <div>{t('Status Code')}</div>\n              {app.status !== 'internal' && <div>{t('Organization')}</div>}\n              <div>{t('Event Type')}</div>\n              <div>{t('Webhook URL')}</div>\n            </TableLayout>\n          </PanelHeader>\n\n          {!this.state.loading ? (\n            <PanelBody>\n              {currentRequests.length > 0 ? (\n                currentRequests.map((request, idx) => (\n                  <PanelItem key={idx} data-test-id=\"request-item\">\n                    <TableLayout hasOrganization={app.status !== 'internal'}>\n                      <TimestampLink date={request.date} link={request.errorUrl} />\n                      <ResponseCode code={request.responseCode} />\n                      {app.status !== 'internal' && (\n                        <div>\n                          {request.organization ? request.organization.name : null}\n                        </div>\n                      )}\n                      <div>{request.eventType}</div>\n                      <OverflowBox>{request.webhookUrl}</OverflowBox>\n                    </TableLayout>\n                  </PanelItem>\n                ))\n              ) : (\n                <EmptyMessage icon={<IconFlag size=\"xl\" />}>\n                  {t('No requests found in the last 30 days.')}\n                </EmptyMessage>\n              )}\n            </PanelBody>\n          ) : (\n            <LoadingIndicator />\n          )}\n        </Panel>\n\n        <PaginationButtons>\n          <Button\n            icon={<IconChevron direction=\"left\" size=\"sm\" />}\n            onClick={this.handlePrevPage}\n            disabled={!this.hasPrevPage}\n            aria-label={t('Previous page')}\n          />\n          <Button\n            icon={<IconChevron direction=\"right\" size=\"sm\" />}\n            onClick={this.handleNextPage}\n            disabled={!this.hasNextPage}\n            aria-label={t('Next page')}\n          />\n        </PaginationButtons>\n      </Fragment>\n    );\n  }\n}\n\nconst TableLayout = styled('div')<{hasOrganization: boolean}>`\n  display: grid;\n  grid-template-columns: 1fr 0.5fr ${p => (p.hasOrganization ? '1fr' : '')} 1fr 1fr;\n  grid-column-gap: ${space(1.5)};\n  width: 100%;\n  align-items: center;\n`;\n\nconst OverflowBox = styled('div')`\n  word-break: break-word;\n`;\n\nconst PaginationButtons = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n\n  > :first-child {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  > :nth-child(2) {\n    margin-left: -1px;\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`;\n\nconst RequestLogFilters = styled('div')`\n  display: flex;\n  align-items: center;\n  padding-bottom: ${space(1)};\n\n  > :first-child ${StyledButton} {\n    border-radius: ${p => p.theme.borderRadiusLeft};\n  }\n`;\n\nconst ErrorsOnlyCheckbox = styled('div')`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n`;\n\nconst StyledErrorsOnlyButton = styled(Button)`\n  margin-left: -1px;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`;\n\nconst StyledIconOpen = styled(IconOpen)`\n  margin-left: 6px;\n  color: ${p => p.theme.subText};\n`;\n\nconst Tags = styled('div')`\n  margin: -${space(0.5)};\n`;\n\nconst StyledTag = styled(Tag)`\n  padding: ${space(0.5)};\n  display: inline-flex;\n`;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {BarChart} from 'sentry/components/charts/barChart';\nimport {LineChart, LineChartSeries} from 'sentry/components/charts/lineChart';\nimport DateTime from 'sentry/components/dateTime';\nimport Link from 'sentry/components/links/link';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelBody from 'sentry/components/panels/panelBody';\nimport PanelFooter from 'sentry/components/panels/panelFooter';\nimport PanelHeader from 'sentry/components/panels/panelHeader';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, SentryApp} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nimport RequestLog from './requestLog';\n\ntype Props = RouteComponentProps<{appSlug: string}, {}> & {\n  organization: Organization;\n};\n\ntype State = DeprecatedAsyncView['state'] & {\n  app: SentryApp;\n  interactions: {\n    componentInteractions: {\n      [key: string]: [number, number][];\n    };\n    views: [number, number][];\n  };\n  stats: {\n    installStats: [number, number][];\n    totalInstalls: number;\n    totalUninstalls: number;\n    uninstallStats: [number, number][];\n  };\n};\n\nclass SentryApplicationDashboard extends DeprecatedAsyncView<Props, State> {\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    const {appSlug} = this.props.params;\n\n    // Default time range for now: 90 days ago to now\n    const now = Math.floor(new Date().getTime() / 1000);\n    const ninety_days_ago = 3600 * 24 * 90;\n\n    return [\n      [\n        'stats',\n        `/sentry-apps/${appSlug}/stats/`,\n        {query: {since: now - ninety_days_ago, until: now}},\n      ],\n\n      [\n        'interactions',\n        `/sentry-apps/${appSlug}/interaction/`,\n        {query: {since: now - ninety_days_ago, until: now}},\n      ],\n      ['app', `/sentry-apps/${appSlug}/`],\n    ];\n  }\n\n  getTitle() {\n    return t('Integration Dashboard');\n  }\n\n  renderInstallData() {\n    const {app, stats} = this.state;\n    const {totalUninstalls, totalInstalls} = stats;\n    return (\n      <Fragment>\n        <h5>{t('Installation & Interaction Data')}</h5>\n        <Row>\n          {app.datePublished ? (\n            <StatsSection>\n              <StatsHeader>{t('Date published')}</StatsHeader>\n              <DateTime dateOnly date={app.datePublished} />\n            </StatsSection>\n          ) : null}\n          <StatsSection data-test-id=\"installs\">\n            <StatsHeader>{t('Total installs')}</StatsHeader>\n            <p>{totalInstalls}</p>\n          </StatsSection>\n          <StatsSection data-test-id=\"uninstalls\">\n            <StatsHeader>{t('Total uninstalls')}</StatsHeader>\n            <p>{totalUninstalls}</p>\n          </StatsSection>\n        </Row>\n        {this.renderInstallCharts()}\n      </Fragment>\n    );\n  }\n\n  renderInstallCharts() {\n    const {installStats, uninstallStats} = this.state.stats;\n\n    const installSeries = {\n      data: installStats.map(point => ({\n        name: point[0] * 1000,\n        value: point[1],\n      })),\n      seriesName: t('installed'),\n    };\n    const uninstallSeries = {\n      data: uninstallStats.map(point => ({\n        name: point[0] * 1000,\n        value: point[1],\n      })),\n      seriesName: t('uninstalled'),\n    };\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Installations/Uninstallations over Last 90 Days')}</PanelHeader>\n        <ChartWrapper>\n          <BarChart\n            series={[installSeries, uninstallSeries]}\n            height={150}\n            stacked\n            isGroupedByDate\n            legend={{\n              show: true,\n              orient: 'horizontal',\n              data: ['installed', 'uninstalled'],\n              itemWidth: 15,\n            }}\n            yAxis={{type: 'value', minInterval: 1, max: 'dataMax'}}\n            xAxis={{type: 'time'}}\n            grid={{left: space(4), right: space(4)}}\n          />\n        </ChartWrapper>\n      </Panel>\n    );\n  }\n\n  renderIntegrationViews() {\n    const {views} = this.state.interactions;\n    const {organization} = this.props;\n    const {appSlug} = this.props.params;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Integration Views')}</PanelHeader>\n        <PanelBody>\n          <InteractionsChart data={{Views: views}} />\n        </PanelBody>\n\n        <PanelFooter>\n          <StyledFooter>\n            {t('Integration views are measured through views on the ')}\n            <Link to={`/sentry-apps/${appSlug}/external-install/`}>\n              {t('external installation page')}\n            </Link>\n            {t(' and views on the Learn More/Install modal on the ')}\n            <Link to={`/settings/${organization.slug}/integrations/`}>\n              {t('integrations page')}\n            </Link>\n          </StyledFooter>\n        </PanelFooter>\n      </Panel>\n    );\n  }\n\n  renderComponentInteractions() {\n    const {componentInteractions} = this.state.interactions;\n    const componentInteractionsDetails = {\n      'stacktrace-link': t(\n        'Each link click or context menu open counts as one interaction'\n      ),\n      'issue-link': t('Each open of the issue link modal counts as one interaction'),\n    };\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Component Interactions')}</PanelHeader>\n\n        <PanelBody>\n          <InteractionsChart data={componentInteractions} />\n        </PanelBody>\n\n        <PanelFooter>\n          <StyledFooter>\n            {Object.keys(componentInteractions).map(\n              (component, idx) =>\n                componentInteractionsDetails[component] && (\n                  <Fragment key={idx}>\n                    <strong>{`${component}: `}</strong>\n                    {componentInteractionsDetails[component]}\n                    <br />\n                  </Fragment>\n                )\n            )}\n          </StyledFooter>\n        </PanelFooter>\n      </Panel>\n    );\n  }\n\n  renderBody() {\n    const {app} = this.state;\n\n    return (\n      <div>\n        <SettingsPageHeader title={`${t('Integration Dashboard')} - ${app.name}`} />\n        {app.status === 'published' && this.renderInstallData()}\n        {app.status === 'published' && this.renderIntegrationViews()}\n        {app.schema.elements && this.renderComponentInteractions()}\n        <RequestLog app={app} />\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(SentryApplicationDashboard);\n\ntype InteractionsChartProps = {\n  data: {\n    [key: string]: [number, number][];\n  };\n};\nfunction InteractionsChart({data}: InteractionsChartProps) {\n  const elementInteractionsSeries: LineChartSeries[] = Object.keys(data).map(\n    (key: string) => {\n      const seriesData = data[key].map(point => ({\n        value: point[1],\n        name: point[0] * 1000,\n      }));\n      return {\n        seriesName: key,\n        data: seriesData,\n      };\n    }\n  );\n\n  return (\n    <ChartWrapper>\n      <LineChart\n        isGroupedByDate\n        series={elementInteractionsSeries}\n        grid={{left: space(4), right: space(4)}}\n        legend={{\n          show: true,\n          orient: 'horizontal',\n          data: Object.keys(data),\n        }}\n      />\n    </ChartWrapper>\n  );\n}\n\nconst Row = styled('div')`\n  display: flex;\n`;\n\nconst StatsSection = styled('div')`\n  margin-right: ${space(4)};\n`;\nconst StatsHeader = styled('h6')`\n  margin-bottom: ${space(1)};\n  font-size: 12px;\n  text-transform: uppercase;\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledFooter = styled('div')`\n  padding: ${space(1.5)};\n`;\n\nconst ChartWrapper = styled('div')`\n  padding-top: ${space(3)};\n`;\n"],"names":["LineChart","_ref","series","seriesOptions","props","_jsx","BaseChart","map","_ref2","seriesName","data","dataArray","options","LineSeries","name","_ref3","value","animation","animationThreshold","animationDuration","displayName","_styled","target","p","theme","border","subText","getPadding","disablePadding","hasButtons","css","space","lightText","gray300","gray400","fontSizeSmall","panelBorderRadius","backgroundSecondary","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","SentryDocumentTitle","title","this","children","renderComponent","ALL_EVENTS","t","is24Hours","shouldUse24Hours","getEventTypes","memoize","app","issueLinkEvents","issueLinkComponent","schema","elements","find","element","type","hasSelectUri","fields","some","field","createHasSelectUri","create","required_fields","optional_fields","linkHasSelectUri","link","componentHasSelectUri","push","status","events","includes","isAlertable","ResponseCode","code","Tags","StyledTag","TimestampLink","date","_jsxs","ExternalLink","href","DateTime","StyledIconOpen","size","format","RequestLog","constructor","arguments","_defineProperty","eventType","setState","currentPage","remountComponent","errorsOnly","state","hasNextPage","requests","length","hasPrevPage","getEndpoints","slug","query","getDefaultState","super","renderLoading","renderBody","currentRequests","slice","Fragment","RequestLogFilters","CompactSelect","triggerLabel","label","onChange","opt","handleChangeEventType","StyledErrorsOnlyButton","onClick","handleChangeErrorsOnly","ErrorsOnlyCheckbox","Checkbox","checked","Panel","PanelHeader","TableLayout","hasOrganization","loading","LoadingIndicator","PanelBody","request","idx","PanelItem","errorUrl","responseCode","organization","OverflowBox","webhookUrl","EmptyMessage","icon","IconFlag","PaginationButtons","Button","IconChevron","direction","handlePrevPage","disabled","handleNextPage","styles","StyledButton","borderRadiusLeft","IconOpen","Tag","SentryApplicationDashboard","appSlug","params","now","Math","floor","Date","getTime","ninety_days_ago","since","until","renderInstallData","stats","totalUninstalls","totalInstalls","Row","datePublished","StatsSection","StatsHeader","dateOnly","renderInstallCharts","installStats","uninstallStats","installSeries","point","uninstallSeries","ChartWrapper","BarChart","height","stacked","isGroupedByDate","legend","show","orient","itemWidth","yAxis","minInterval","max","xAxis","grid","left","right","renderIntegrationViews","views","interactions","InteractionsChart","Views","PanelFooter","StyledFooter","Link","to","renderComponentInteractions","componentInteractions","componentInteractionsDetails","Object","keys","component","SettingsPageHeader","withOrganization","elementInteractionsSeries","key"],"sourceRoot":""}