{"version":3,"file":"chunks/vendors-node_modules_react-aria_slider_dist_import_mjs-node_modules_react-stately_slider_dist-6ced97.xxxxxxxxxxxxxxxxxxxx.js","mappings":"ypBA4BA,MAAMA,EAA4C,IAAIC,QACtD,SAASC,EAA0CC,EAAOC,GACtD,IAAIC,EAAKL,EAA0CM,IAAIH,GACvD,IAAKE,EAAI,MAAM,IAAIE,MAAM,wBACzB,MAAO,GAAGF,KAAMD,GACpB,CAOA,SAASI,EAAyCC,EAAON,EAAOO,GAC5D,IAAMC,WAAYA,EAAaC,WAAYA,IAAgB,EAAI,KAAiBH,GAC5EI,EAAmC,aAAtBJ,EAAMK,YACvB,IAAIC,EAEAf,EAA2CgB,IAAIb,EAA4C,QAApCY,EAAiBJ,EAAWN,UAAmC,IAAnBU,EAA4BA,EAAiBH,EAAWP,IAC/J,IAAMY,UAAWA,IAAe,EAAI,SAC9BC,kBAAmBA,EAAoBC,qBAAsBA,IAA0B,EAAI,QAKjG,MAAMC,GAA6B,EAAI,UAAe,MAChDC,GAAW,EAAI,UAAe,MACpCA,EAASC,QAAUnB,EACnB,MAAMoB,EAAyB,QAAdN,EACXO,GAAkB,EAAI,UAAe,OACnCC,UAAWA,IAAe,EAAI,MAAgB,CAClDC,cACIF,EAAgBF,QAAU,IAC9B,EACAK,QAAUC,OAAQA,EAASC,OAAQA,IAC/B,IAAMC,OAAQA,EAASC,MAAOA,GAAWrB,EAASY,QAAQU,wBACtDC,EAAOpB,EAAaiB,EAASC,EACF,MAA3BP,EAAgBF,UAAiBE,EAAgBF,QAAUD,EAASC,QAAQY,gBAAgBd,EAA2BE,SAAWW,GACtI,IAAIE,EAAQtB,EAAagB,EAASD,EAGlC,IAFIf,GAAcU,KAAUY,GAASA,GACrCX,EAAgBF,SAAWa,EACe,MAAtCf,EAA2BE,SAAmBZ,EAASY,QAAS,CAChE,MAAMc,GAAU,EAAI,MAAcZ,EAAgBF,QAAUW,EAAM,EAAG,GACrEZ,EAASC,QAAQe,gBAAgBjB,EAA2BE,QAASc,EACzE,CACJ,EACAE,YAC8C,MAAtClB,EAA2BE,UAC3BD,EAASC,QAAQiB,iBAAiBnB,EAA2BE,SAAS,GACtEF,EAA2BE,QAAU,KAE7C,IAEJ,IAAIkB,GAAiB,EAAI,eAAeC,GACpCC,EAAc,CAACC,EAAGtC,EAAIuC,EAASC,KAE/B,GAAInC,EAASY,UAAYb,EAAMqC,YAAc3C,EAAM4C,OAAOC,OAAM,CAACC,EAAGC,KAAK/C,EAAMgD,gBAAgBD,KAAK,CAChG,IAAMpB,OAAQA,EAASC,MAAOA,EAAQqB,IAAKA,EAAMC,KAAMA,GAAU3C,EAASY,QAAQU,wBAM9EI,IAFkBvB,EAAagC,EAAUD,IADvB/B,EAAauC,EAAMC,KAF9BxC,EAAaiB,EAASC,IAMf,QAAdd,GAAuBJ,KAAYuB,EAAU,EAAIA,GACrD,IAEIkB,EAFAC,EAAQpD,EAAMqD,gBAAgBpB,GAG9BqB,EAAQtD,EAAM4C,OAAOW,WAAWC,GAAIJ,EAAQI,EAAI,IACpD,GAAc,IAAVF,EAAaH,EAAeG,OAC3B,IAAe,IAAXA,EAAcH,EAAenD,EAAM4C,OAAOa,OAAS,MACvD,CACD,IAAIC,EAAW1D,EAAM4C,OAAOU,EAAQ,GAChCK,EAAa3D,EAAM4C,OAAOU,GAEiCH,EAA3DS,KAAKC,IAAIH,EAAWN,GAASQ,KAAKC,IAAIF,EAAaP,GAAuBE,EAAQ,EAClEA,CACxB,CAEIH,GAAgB,GAAKnD,EAAM8D,gBAAgBX,IAE3CX,EAAEuB,iBACF9C,EAA2BE,QAAUgC,EACrCnD,EAAMgE,gBAAgBb,GACtBd,EAAelB,QAAUjB,EACzBF,EAAMoC,iBAAiBnB,EAA2BE,SAAS,GAC3DnB,EAAMiE,cAAcd,EAAcC,GAClCrC,EAAkBmD,OAAQ,UAAWC,GAAW,GAChDpD,EAAkBmD,OAAQ,WAAYC,GAAW,GACjDpD,EAAkBmD,OAAQ,YAAaC,GAAW,IAC/ClD,EAA2BE,QAAU,IAChD,GAEAgD,EAAa3B,IACb,IAAI4B,EACAC,GACsC,QAAhCA,EAAe7B,EAAE8B,iBAAwC,IAAjBD,EAA0BA,EAA0D,QAA1CD,EAAoB5B,EAAE+B,sBAAkD,IAAtBH,OAA+B,EAASA,EAAkB,GAAGI,cAChMnC,EAAelB,UACoB,MAAtCF,EAA2BE,UAC3BnB,EAAMoC,iBAAiBnB,EAA2BE,SAAS,GAC3DF,EAA2BE,QAAU,MAEzCH,EAAqBkD,OAAQ,UAAWC,GAAW,GACnDnD,EAAqBkD,OAAQ,WAAYC,GAAW,GACpDnD,EAAqBkD,OAAQ,YAAaC,GAAW,GACzD,EAgBJ,MAdI,YAAa3D,GAAcA,EAAWiE,iBAK/BjE,EAAWiE,QAClBjE,EAAWkE,QAAU,KACjB,IAEAC,EACmH,QAAlHA,EAA2BC,SAASC,eAAmB9E,EAA2CC,EAAO,WAA8C,IAA7B2E,GAA+CA,EAAyBG,SACnM,EAAI,MAA+B,WAAW,GAG/C,CACHtE,WAAYA,EAIZuE,WAAY,CACRC,KAAM,WACHvE,GAEPwE,YAAY,EAAI,MAAmB,CAC/BC,YAAa1C,GACQ,IAAbA,EAAE2C,QAAgB3C,EAAE4C,QAAU5C,EAAE6C,SAAW7C,EAAE8C,SACjD/C,EAAYC,OAAGF,EAAWE,EAAEC,QAASD,EAAEE,QAC3C,EACA6C,cAAe/C,GACW,UAAlBA,EAAEgD,cAAyC,IAAbhD,EAAE2C,QAAgB3C,EAAE4C,QAAU5C,EAAE6C,SAAW7C,EAAE8C,UAC/E/C,EAAYC,EAAGA,EAAE8B,UAAW9B,EAAEC,QAASD,EAAEE,QAC7C,EACA+C,aAAcjD,GACVD,EAAYC,EAAGA,EAAE+B,eAAe,GAAGC,WAAYhC,EAAE+B,eAAe,GAAG9B,QAASD,EAAE+B,eAAe,GAAG7B,QACpG,EACAgD,MAAO,CACHC,SAAU,WACVC,YAAa,SAElBtE,GACHuE,YAAa,CACTpB,QAASzE,EAAM4C,OAAOkD,KAAI,CAAChD,EAAG7C,IAAYF,EAA2CC,EAAOC,KAAQ8F,KAAK,KACzG,YAAa,OAGzB,CAUA,SAASC,EAAyCC,EAAMjG,GACpD,IAAMC,MAAOA,EAAQ,EAAIiG,WAAYA,EAAaC,gBAAiBA,EAAkB5F,SAAUA,EAAW6F,SAAUA,EAAWzF,YAAaA,EAAcX,EAAMW,aAAiBsF,EAC7KtD,EAAasD,EAAKtD,YAAc3C,EAAM2C,WACtCjC,EAA6B,aAAhBC,GACXG,UAAWA,IAAe,EAAI,SAC9BC,kBAAmBA,EAAoBC,qBAAsBA,IAA0B,EAAI,QAC7FqF,EAAcxG,EAA2CM,IAAIH,GACjE,IAAIsG,EACJ,MAAQ9F,WAAYA,EAAaC,WAAYA,IAAgB,EAAI,KAAiB,IAC3EwF,EACH/F,GAAQH,EAA2CC,EAAOC,GAC1D,kBAAmB,GAAGoG,KAAgE,QAApDC,EAAuBL,EAAK,0BAAyD,IAAzBK,EAAkCA,EAAuB,KAAKC,SAE1JnD,EAAQpD,EAAM4C,OAAO3C,GACrBuG,GAAa,EAAI,gBAAoB,KACnCJ,EAASjF,UAAS,EAAI,MAA8BiF,EAASjF,QAAQ,GAC1E,CACCiF,IAEEK,EAAYzG,EAAM0G,eAAiBzG,GACzC,EAAI,cAAkB,KACdwG,GAAWD,GAAY,GAC5B,CACCC,EACAD,IAEJ,MAAMtF,GAAW,EAAI,UAAe,MACpCA,EAASC,QAAUnB,EACnB,IAAIoB,EAAyB,QAAdN,EACXO,GAAkB,EAAI,UAAe,OACnCsF,cAAeA,IAAmB,EAAI,MAAoB,CAC5DC,UAAWpE,GACP,IAAMqE,iBAAkBA,EAAmBC,iBAAkBA,EAAmBC,eAAgBA,EAAiBC,eAAgBA,EAAiB/C,cAAeA,EAAgB7B,iBAAkBA,EAAmB6E,SAAUA,GAAc/F,EAASC,QAEvP,GAAK,+BAA+B+F,KAAK1E,EAAE2E,KAA3C,CAQA,OAHA3E,EAAEuB,iBAEF3B,EAAiBnC,GAAO,GACjBuC,EAAE2E,KACL,IAAK,SACDH,EAAe/G,EAAOgH,GACtB,MACJ,IAAK,WACDF,EAAe9G,EAAOgH,GACtB,MACJ,IAAK,OACDhD,EAAchE,EAAO6G,EAAiB7G,IACtC,MACJ,IAAK,MACDgE,EAAchE,EAAO4G,EAAiB5G,IAG9CmC,EAAiBnC,GAAO,EAnBxB,MAFIuC,EAAE4E,qBAsBV,KAEE9F,UAAWA,IAAe,EAAI,MAAgB,CAChDC,cACIF,EAAgBF,QAAU,KAC1BD,EAASC,QAAQiB,iBAAiBnC,GAAO,EAC7C,EACAuB,QAAUC,OAAQA,EAASC,OAAQA,EAAS8D,YAAaA,EAAc6B,SAAUA,IAC7E,MAAQtF,gBAAiBA,EAAkBG,gBAAiBA,EAAkB6E,eAAgBA,EAAiBC,eAAgBA,EAAiBM,KAAMA,EAAOL,SAAUA,GAAc/F,EAASC,QAC9L,IAAMS,MAAOA,EAAQD,OAAQA,GAAYpB,EAASY,QAAQU,wBACtDC,EAAOpB,EAAaiB,EAASC,EAEjC,GAD+B,MAA3BP,EAAgBF,UAAiBE,EAAgBF,QAAUY,EAAgB9B,GAAS6B,GACpE,aAAhB0D,EACI/D,EAAS,GAAKL,GAAYK,EAAS,IAAML,GAAYM,EAAS,EAAGqF,EAAe9G,EAAOoH,EAAWJ,EAAWK,GAC5GN,EAAe/G,EAAOoH,EAAWJ,EAAWK,OAC9C,CACH,IAAItF,EAAQtB,EAAagB,EAASD,GAC9Bf,GAAcU,KAAUY,GAASA,GACrCX,EAAgBF,SAAWa,EAC3BE,EAAgBjC,GAAO,EAAI,MAAcoB,EAAgBF,QAAUW,EAAM,EAAG,GAChF,CACJ,EACAK,YACIjB,EAASC,QAAQiB,iBAAiBnC,GAAO,EAC7C,IAGJD,EAAMuH,iBAAiBtH,GAAQ0C,GAC/B,MAAQ6E,eAAgBA,IAAoB,EAAI,OAAqB,EAAI,MAAmBvB,EAAM,CAC9FwB,QAAS,IAAIzH,EAAMgE,gBAAgB/D,GACnCyH,OAAQ,IAAI1H,EAAMgE,qBAAgB1B,KAClC8D,GACJ,IAAI/D,GAAiB,EAAI,eAAeC,GACpCqF,EAAUzH,IACVsG,IACAnE,EAAelB,QAAUjB,EACzBF,EAAMoC,iBAAiBnC,GAAO,GAC9Bc,EAAkBmD,OAAQ,UAAW0D,GAAM,GAC3C7G,EAAkBmD,OAAQ,WAAY0D,GAAM,GAC5C7G,EAAkBmD,OAAQ,YAAa0D,GAAM,EAAM,EAEnDA,EAAQpF,IACR,IAAI4B,EACAC,GACsC,QAAhCA,EAAe7B,EAAE8B,iBAAwC,IAAjBD,EAA0BA,EAA0D,QAA1CD,EAAoB5B,EAAE+B,sBAAkD,IAAtBH,OAA+B,EAASA,EAAkB,GAAGI,cAChMnC,EAAelB,UACtBqF,IACAxG,EAAMoC,iBAAiBnC,GAAO,GAC9Be,EAAqBkD,OAAQ,UAAW0D,GAAM,GAC9C5G,EAAqBkD,OAAQ,WAAY0D,GAAM,GAC/C5G,EAAqBkD,OAAQ,YAAa0D,GAAM,GACpD,EAEAC,EAAgB7H,EAAM+B,gBAAgB9B,IACtCS,GAA4B,QAAdI,KAAqB+G,EAAgB,EAAIA,GAC3D,IAAIC,EAAgBnF,EAYf,CAAC,GAZ2B,EAAI,MAAmBgE,EAAerF,EAAW,CAC9E4D,YAAc1C,IACO,IAAbA,EAAE2C,QAAgB3C,EAAE4C,QAAU5C,EAAE6C,SAAW7C,EAAE8C,SACjDqC,GAAQ,EAEZpC,cAAgB/C,IACK,IAAbA,EAAE2C,QAAgB3C,EAAE4C,QAAU5C,EAAE6C,SAAW7C,EAAE8C,SACjDqC,EAAOnF,EAAE8B,UAAU,EAEvBmB,aAAejD,IACXmF,EAAOnF,EAAE+B,eAAe,GAAGC,WAAW,IAO9C,MAAO,CACHuD,YAAY,EAAI,MAAmBP,EAAgB/G,EAAY,CAC3DuH,KAAM,QACNC,SAAWtF,OAAiBL,EAAJ,EACxB4F,IAAKlI,EAAM8G,iBAAiB7G,GAC5BkI,IAAKnI,EAAM6G,iBAAiB5G,GAC5BqH,KAAMtH,EAAMsH,KACZlE,MAAOA,EACPgF,SAAUzF,EACV,mBAAoBhC,EACpB,iBAAkBX,EAAMqI,mBAAmBpI,GAC3C,gBAAiBiG,QAAc5D,EAC/B,eAAoC,YAApB6D,QAAiC7D,EACjD,oBAAqB2D,EAAK,qBAC1BqC,SAAW9F,IACPtB,EAASC,QAAQ8C,cAAchE,EAAOsI,WAAW/F,EAAEgG,OAAOpF,OAAO,IAGzEqF,WAAY,IACLX,EACHpC,MAAO,CACHC,SAAU,WACV,CAACjF,EAAa,MAAQ,QAA4B,IAAhBmH,EAAH,IAC/Ba,UAAW,wBACX9C,YAAa,SAGrBpF,WAAYA,EACZmI,WAAY3I,EAAMgD,gBAAgB/C,GAClC0C,WAAYA,EACZ8D,UAAWA,EAEnB,C,2LCnUA,MAAMmC,EAA0C,EAC1CC,EAA0C,IAC1CC,EAA2C,EACjD,SAASC,EAA0CzI,GAC/C,MAAQqC,WAAYA,GAAa,EAAQqG,SAAUA,EAAWJ,EAA0CK,SAAUA,EAAWJ,EAA0CK,gBAAiBC,EAAY7B,KAAMA,EAAOwB,EAA2CnI,YAAaA,EAAc,cAAkBL,EAEzS,IAAI2G,GAAW,EAAI,YAAgB,KAC/B,IAAImC,GAAgBH,EAAWD,GAAY,GAE3C,OADAI,GAAe,EAAI,MAAwBA,EAAc,EAAGA,EAAe9B,EAAMA,GAC1E1D,KAAKuE,IAAIiB,EAAc9B,EAAK,GACpC,CACCA,EACA2B,EACAD,IAEA5F,GAAQ,EAAI,YAAgB,IAAIiG,EAAmC/I,EAAM8C,QAAQ,CACjF9C,EAAM8C,QAEV,IAAIkG,EACJ,IAAIC,GAAe,EAAI,YAAgB,IAAiF,QAA5ED,EAAgBD,EAAmC/I,EAAMiJ,qBAA6C,IAAlBD,EAA2BA,EAAgB,CACnKN,IACD,CACH1I,EAAMiJ,aACNP,IAEAV,EAAWkB,EAAqClJ,EAAM8C,MAAO9C,EAAMiJ,aAAcjJ,EAAMgI,UACvFmB,EAAcD,EAAqClJ,EAAM8C,MAAO9C,EAAMiJ,aAAcjJ,EAAMmJ,aAC9F,MAAO7G,EAAQ8G,IAAa,EAAI,MAA2BtG,EAAOmG,EAAcjB,IACzEqB,EAAaC,IAAgB,EAAI,YAAiB,IAAIC,MAAMjH,EAAOa,QAAQqG,MAAK,IACjFC,GAAiB,EAAI,UAAe,IAAIF,MAAMjH,EAAOa,QAAQqG,MAAK,KACjEE,EAAcC,IAAmB,EAAI,iBAAiB3H,GACvD4H,GAAY,EAAI,UAAe,MACrCA,EAAU/I,QAAUyB,EACpB,MAAMuH,GAAiB,EAAI,UAAe,MAE1C,SAASC,EAAgBhH,GACrB,OAAQA,EAAQ4F,IAAaC,EAAWD,EAC5C,CACA,SAASlC,EAAiB7G,GACtB,OAAiB,IAAVA,EAAc+I,EAAWpG,EAAO3C,EAAQ,EACnD,CACA,SAAS4G,EAAiB5G,GACtB,OAAOA,IAAU2C,EAAOa,OAAS,EAAIwF,EAAWrG,EAAO3C,EAAQ,EACnE,CACA,SAAS6D,EAAgB7D,GACrB,OAAO8J,EAAe5I,QAAQlB,EAClC,CAIA,SAASoK,EAAYpK,EAAOmD,GACxB,GAAIT,IAAemB,EAAgB7D,GAAQ,OAC3C,MAAMqK,EAAUxD,EAAiB7G,GAC3BsK,EAAU1D,EAAiB5G,GAEjCmD,GAAQ,EAAI,MAAwBA,EAAOkH,EAASC,EAASjD,GAC7D4C,EAAU/I,QAAUqJ,EAAmCN,EAAU/I,QAASlB,EAAOmD,GACjFsG,EAAUQ,EAAU/I,QACxB,CASA,SAASsJ,EAAkBrH,GACvB,OAAO+F,EAAUuB,OAAOtH,EAC5B,CAOA,SAASC,EAAgBpB,GACrB,MAAM0I,EAAM1I,GAAWgH,EAAWD,GAAYA,EAC9C,OAAO,EAAI,MALf,SAAyB5F,GACrB,OAAOQ,KAAKgH,OAAOxH,EAAQ4F,GAAY1B,GAAQA,EAAO0B,CAC1D,CAG6B6B,CAAgBF,GAAM3B,EAAUC,EAC7D,CASA,OAtDAkB,EAAehJ,QAAUwI,EAsDlB,CACH/G,OAAQA,EACRkI,cAAgB7K,GAAQ2C,EAAO3C,GAC/BgE,cAAeoG,EACfnI,gBAtBJ,SAAyBjC,EAAOgC,GAC5BoI,EAAYpK,EAAOoD,EAAgBpB,GACvC,EAqBIe,gBAAkB/C,GAAQ0J,EAAY1J,GACtCmC,iBAnCJ,SAAwBnC,EAAO8K,GAC3B,GAAIpI,IAAemB,EAAgB7D,GAAQ,OAC3C,MAAM+K,EAAcb,EAAehJ,QAAQlB,GAC3CkK,EAAehJ,QAAUqJ,EAAmCL,EAAehJ,QAASlB,EAAO8K,GAC3FnB,EAAaO,EAAehJ,SAExBsI,GAAeuB,IAAgBb,EAAehJ,QAAQ8J,KAAKC,UAAUzB,EAAYS,EAAU/I,QACnG,EA6BIuF,aAAcsD,EACdhG,gBAAiBiG,EACjBlI,gBAAkB9B,GAAQmK,EAAgBxH,EAAO3C,IACjDmK,gBAAiBA,EACjB/B,mBAAqBpI,GAAQwK,EAAkB7H,EAAO3C,IACtDwK,kBAAmBA,EACnB3D,iBAAkBA,EAClBD,iBAAkBA,EAClBxD,gBAAiBA,EACjBS,gBAAiBA,EACjByD,iBA1DJ,SAA0BtH,EAAOkL,GAC7BpB,EAAe5I,QAAQlB,GAASkL,CACpC,EAyDInE,eA1BJ,SAAwB/G,EAAOmL,EAAW,GACtC,IAAIC,EAAIzH,KAAKuE,IAAIiD,EAAU9D,GAC3B+C,EAAYpK,GAAO,EAAI,MAAwB2C,EAAO3C,GAASoL,EAAGrC,EAAUC,EAAU3B,GAC1F,EAwBIP,eAvBJ,SAAwB9G,EAAOmL,EAAW,GACtC,IAAIC,EAAIzH,KAAKuE,IAAIiD,EAAU9D,GAC3B+C,EAAYpK,GAAO,EAAI,MAAwB2C,EAAO3C,GAASoL,EAAGrC,EAAUC,EAAU3B,GAC1F,EAqBIA,KAAMA,EACNL,SAAUA,EACVtG,YAAaA,EACbgC,WAAYA,EAEpB,CACA,SAAS6H,EAAmCc,EAAOrL,EAAOmD,GACtD,OAAIkI,EAAMrL,KAAWmD,EAAckI,EAC5B,IACAA,EAAMC,MAAM,EAAGtL,GAClBmD,KACGkI,EAAMC,MAAMtL,EAAQ,GAE/B,CACA,SAASoJ,EAAmCjG,GACxC,GAAa,MAATA,EACJ,OAAOyG,MAAM2B,QAAQpI,GAASA,EAAQ,CAClCA,EAER,CACA,SAASoG,EAAqCpG,EAAOmG,EAAcjB,GAC/D,OAAQmD,IACiB,iBAAVrI,GAA8C,iBAAjBmG,EAA2BjB,SAAoDA,EAASmD,EAAS,IACpInD,SAAoDA,EAASmD,EAAS,CAEnF,C","sources":["webpack:///../node_modules/@react-aria/slider/dist/import.mjs","webpack:///../node_modules/@react-stately/slider/dist/import.mjs"],"sourcesContent":["import {useGlobalListeners as $fA3fN$useGlobalListeners, clamp as $fA3fN$clamp, mergeProps as $fA3fN$mergeProps, focusWithoutScrolling as $fA3fN$focusWithoutScrolling} from \"@react-aria/utils\";\nimport {useRef as $fA3fN$useRef, useCallback as $fA3fN$useCallback, useEffect as $fA3fN$useEffect} from \"react\";\nimport {useMove as $fA3fN$useMove, setInteractionModality as $fA3fN$setInteractionModality, useKeyboard as $fA3fN$useKeyboard} from \"@react-aria/interactions\";\nimport {useLabel as $fA3fN$useLabel} from \"@react-aria/label\";\nimport {useLocale as $fA3fN$useLocale} from \"@react-aria/i18n\";\nimport {useFocusable as $fA3fN$useFocusable} from \"@react-aria/focus\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \nconst $aa519ee6cf463259$export$7a8d2b02c9371cbf = new WeakMap();\nfunction $aa519ee6cf463259$export$68e648cbec363a18(state, index) {\n    let id = $aa519ee6cf463259$export$7a8d2b02c9371cbf.get(state);\n    if (!id) throw new Error(\"Unknown slider state\");\n    return `${id}-${index}`;\n}\n\n\n\n\n\n\nfunction $bcca50147b47f54d$export$56b2c08e277f365(props, state, trackRef) {\n    let { labelProps: labelProps , fieldProps: fieldProps  } = (0, $fA3fN$useLabel)(props);\n    let isVertical = props.orientation === \"vertical\";\n    var _labelProps_id;\n    // Attach id of the label to the state so it can be accessed by useSliderThumb.\n    (0, $aa519ee6cf463259$export$7a8d2b02c9371cbf).set(state, (_labelProps_id = labelProps.id) !== null && _labelProps_id !== void 0 ? _labelProps_id : fieldProps.id);\n    let { direction: direction  } = (0, $fA3fN$useLocale)();\n    let { addGlobalListener: addGlobalListener , removeGlobalListener: removeGlobalListener  } = (0, $fA3fN$useGlobalListeners)();\n    // When the user clicks or drags the track, we want the motion to set and drag the\n    // closest thumb.  Hence we also need to install useMove() on the track element.\n    // Here, we keep track of which index is the \"closest\" to the drag start point.\n    // It is set onMouseDown/onTouchDown; see trackProps below.\n    const realTimeTrackDraggingIndex = (0, $fA3fN$useRef)(null);\n    const stateRef = (0, $fA3fN$useRef)(null);\n    stateRef.current = state;\n    const reverseX = direction === \"rtl\";\n    const currentPosition = (0, $fA3fN$useRef)(null);\n    const { moveProps: moveProps  } = (0, $fA3fN$useMove)({\n        onMoveStart () {\n            currentPosition.current = null;\n        },\n        onMove ({ deltaX: deltaX , deltaY: deltaY  }) {\n            let { height: height , width: width  } = trackRef.current.getBoundingClientRect();\n            let size = isVertical ? height : width;\n            if (currentPosition.current == null) currentPosition.current = stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current) * size;\n            let delta = isVertical ? deltaY : deltaX;\n            if (isVertical || reverseX) delta = -delta;\n            currentPosition.current += delta;\n            if (realTimeTrackDraggingIndex.current != null && trackRef.current) {\n                const percent = (0, $fA3fN$clamp)(currentPosition.current / size, 0, 1);\n                stateRef.current.setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n            }\n        },\n        onMoveEnd () {\n            if (realTimeTrackDraggingIndex.current != null) {\n                stateRef.current.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n                realTimeTrackDraggingIndex.current = null;\n            }\n        }\n    });\n    let currentPointer = (0, $fA3fN$useRef)(undefined);\n    let onDownTrack = (e, id, clientX, clientY)=>{\n        // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n        if (trackRef.current && !props.isDisabled && state.values.every((_, i)=>!state.isThumbDragging(i))) {\n            let { height: height , width: width , top: top , left: left  } = trackRef.current.getBoundingClientRect();\n            let size = isVertical ? height : width;\n            // Find the closest thumb\n            const trackPosition = isVertical ? top : left;\n            const clickPosition = isVertical ? clientY : clientX;\n            const offset = clickPosition - trackPosition;\n            let percent = offset / size;\n            if (direction === \"rtl\" || isVertical) percent = 1 - percent;\n            let value = state.getPercentValue(percent);\n            // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n            let closestThumb;\n            let split = state.values.findIndex((v)=>value - v < 0);\n            if (split === 0) closestThumb = split;\n            else if (split === -1) closestThumb = state.values.length - 1;\n            else {\n                let lastLeft = state.values[split - 1];\n                let firstRight = state.values[split];\n                // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n                if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) closestThumb = split - 1;\n                else closestThumb = split;\n            }\n            // Confirm that the found closest thumb is editable, not disabled, and move it\n            if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n                // Don't unfocus anything\n                e.preventDefault();\n                realTimeTrackDraggingIndex.current = closestThumb;\n                state.setFocusedThumb(closestThumb);\n                currentPointer.current = id;\n                state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n                state.setThumbValue(closestThumb, value);\n                addGlobalListener(window, \"mouseup\", onUpTrack, false);\n                addGlobalListener(window, \"touchend\", onUpTrack, false);\n                addGlobalListener(window, \"pointerup\", onUpTrack, false);\n            } else realTimeTrackDraggingIndex.current = null;\n        }\n    };\n    let onUpTrack = (e)=>{\n        var _e_changedTouches;\n        var _e_pointerId;\n        let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;\n        if (id === currentPointer.current) {\n            if (realTimeTrackDraggingIndex.current != null) {\n                state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n                realTimeTrackDraggingIndex.current = null;\n            }\n            removeGlobalListener(window, \"mouseup\", onUpTrack, false);\n            removeGlobalListener(window, \"touchend\", onUpTrack, false);\n            removeGlobalListener(window, \"pointerup\", onUpTrack, false);\n        }\n    };\n    if (\"htmlFor\" in labelProps && labelProps.htmlFor) {\n        // Ideally the `for` attribute should point to the first thumb, but VoiceOver on iOS\n        // causes this to override the `aria-labelledby` on the thumb. This causes the first\n        // thumb to only be announced as the slider label rather than its individual name as well.\n        // See https://bugs.webkit.org/show_bug.cgi?id=172464.\n        delete labelProps.htmlFor;\n        labelProps.onClick = ()=>{\n            var // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n            // so do it manually. In addition, make sure we show the focus ring.\n            _document_getElementById;\n            (_document_getElementById = document.getElementById((0, $aa519ee6cf463259$export$68e648cbec363a18)(state, 0))) === null || _document_getElementById === void 0 ? void 0 : _document_getElementById.focus();\n            (0, $fA3fN$setInteractionModality)(\"keyboard\");\n        };\n    }\n    return {\n        labelProps: labelProps,\n        // The root element of the Slider will have role=\"group\" to group together\n        // all the thumb inputs in the Slider.  The label of the Slider will\n        // be used to label the group.\n        groupProps: {\n            role: \"group\",\n            ...fieldProps\n        },\n        trackProps: (0, $fA3fN$mergeProps)({\n            onMouseDown (e) {\n                if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;\n                onDownTrack(e, undefined, e.clientX, e.clientY);\n            },\n            onPointerDown (e) {\n                if (e.pointerType === \"mouse\" && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) return;\n                onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n            },\n            onTouchStart (e) {\n                onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n            },\n            style: {\n                position: \"relative\",\n                touchAction: \"none\"\n            }\n        }, moveProps),\n        outputProps: {\n            htmlFor: state.values.map((_, index)=>(0, $aa519ee6cf463259$export$68e648cbec363a18)(state, index)).join(\" \"),\n            \"aria-live\": \"off\"\n        }\n    };\n}\n\n\n\n\n\n\n\n\n\nfunction $47b897dc8cdb026b$export$8d15029008292ae(opts, state) {\n    let { index: index = 0 , isRequired: isRequired , validationState: validationState , trackRef: trackRef , inputRef: inputRef , orientation: orientation = state.orientation  } = opts;\n    let isDisabled = opts.isDisabled || state.isDisabled;\n    let isVertical = orientation === \"vertical\";\n    let { direction: direction  } = (0, $fA3fN$useLocale)();\n    let { addGlobalListener: addGlobalListener , removeGlobalListener: removeGlobalListener  } = (0, $fA3fN$useGlobalListeners)();\n    let labelId = (0, $aa519ee6cf463259$export$7a8d2b02c9371cbf).get(state);\n    var _opts_arialabelledby;\n    const { labelProps: labelProps , fieldProps: fieldProps  } = (0, $fA3fN$useLabel)({\n        ...opts,\n        id: (0, $aa519ee6cf463259$export$68e648cbec363a18)(state, index),\n        \"aria-labelledby\": `${labelId} ${(_opts_arialabelledby = opts[\"aria-labelledby\"]) !== null && _opts_arialabelledby !== void 0 ? _opts_arialabelledby : \"\"}`.trim()\n    });\n    const value = state.values[index];\n    const focusInput = (0, $fA3fN$useCallback)(()=>{\n        if (inputRef.current) (0, $fA3fN$focusWithoutScrolling)(inputRef.current);\n    }, [\n        inputRef\n    ]);\n    const isFocused = state.focusedThumb === index;\n    (0, $fA3fN$useEffect)(()=>{\n        if (isFocused) focusInput();\n    }, [\n        isFocused,\n        focusInput\n    ]);\n    const stateRef = (0, $fA3fN$useRef)(null);\n    stateRef.current = state;\n    let reverseX = direction === \"rtl\";\n    let currentPosition = (0, $fA3fN$useRef)(null);\n    let { keyboardProps: keyboardProps  } = (0, $fA3fN$useKeyboard)({\n        onKeyDown (e) {\n            let { getThumbMaxValue: getThumbMaxValue , getThumbMinValue: getThumbMinValue , decrementThumb: decrementThumb , incrementThumb: incrementThumb , setThumbValue: setThumbValue , setThumbDragging: setThumbDragging , pageSize: pageSize  } = stateRef.current;\n            // these are the cases that useMove or useSlider don't handle\n            if (!/^(PageUp|PageDown|Home|End)$/.test(e.key)) {\n                e.continuePropagation();\n                return;\n            }\n            // same handling as useMove, stopPropagation to prevent useSlider from handling the event as well.\n            e.preventDefault();\n            // remember to set this so that onChangeEnd is fired\n            setThumbDragging(index, true);\n            switch(e.key){\n                case \"PageUp\":\n                    incrementThumb(index, pageSize);\n                    break;\n                case \"PageDown\":\n                    decrementThumb(index, pageSize);\n                    break;\n                case \"Home\":\n                    setThumbValue(index, getThumbMinValue(index));\n                    break;\n                case \"End\":\n                    setThumbValue(index, getThumbMaxValue(index));\n                    break;\n            }\n            setThumbDragging(index, false);\n        }\n    });\n    let { moveProps: moveProps  } = (0, $fA3fN$useMove)({\n        onMoveStart () {\n            currentPosition.current = null;\n            stateRef.current.setThumbDragging(index, true);\n        },\n        onMove ({ deltaX: deltaX , deltaY: deltaY , pointerType: pointerType , shiftKey: shiftKey  }) {\n            const { getThumbPercent: getThumbPercent , setThumbPercent: setThumbPercent , decrementThumb: decrementThumb , incrementThumb: incrementThumb , step: step , pageSize: pageSize  } = stateRef.current;\n            let { width: width , height: height  } = trackRef.current.getBoundingClientRect();\n            let size = isVertical ? height : width;\n            if (currentPosition.current == null) currentPosition.current = getThumbPercent(index) * size;\n            if (pointerType === \"keyboard\") {\n                if (deltaX > 0 && reverseX || deltaX < 0 && !reverseX || deltaY > 0) decrementThumb(index, shiftKey ? pageSize : step);\n                else incrementThumb(index, shiftKey ? pageSize : step);\n            } else {\n                let delta = isVertical ? deltaY : deltaX;\n                if (isVertical || reverseX) delta = -delta;\n                currentPosition.current += delta;\n                setThumbPercent(index, (0, $fA3fN$clamp)(currentPosition.current / size, 0, 1));\n            }\n        },\n        onMoveEnd () {\n            stateRef.current.setThumbDragging(index, false);\n        }\n    });\n    // Immediately register editability with the state\n    state.setThumbEditable(index, !isDisabled);\n    const { focusableProps: focusableProps  } = (0, $fA3fN$useFocusable)((0, $fA3fN$mergeProps)(opts, {\n        onFocus: ()=>state.setFocusedThumb(index),\n        onBlur: ()=>state.setFocusedThumb(undefined)\n    }), inputRef);\n    let currentPointer = (0, $fA3fN$useRef)(undefined);\n    let onDown = (id)=>{\n        focusInput();\n        currentPointer.current = id;\n        state.setThumbDragging(index, true);\n        addGlobalListener(window, \"mouseup\", onUp, false);\n        addGlobalListener(window, \"touchend\", onUp, false);\n        addGlobalListener(window, \"pointerup\", onUp, false);\n    };\n    let onUp = (e)=>{\n        var _e_changedTouches;\n        var _e_pointerId;\n        let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;\n        if (id === currentPointer.current) {\n            focusInput();\n            state.setThumbDragging(index, false);\n            removeGlobalListener(window, \"mouseup\", onUp, false);\n            removeGlobalListener(window, \"touchend\", onUp, false);\n            removeGlobalListener(window, \"pointerup\", onUp, false);\n        }\n    };\n    let thumbPosition = state.getThumbPercent(index);\n    if (isVertical || direction === \"rtl\") thumbPosition = 1 - thumbPosition;\n    let interactions = !isDisabled ? (0, $fA3fN$mergeProps)(keyboardProps, moveProps, {\n        onMouseDown: (e)=>{\n            if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;\n            onDown();\n        },\n        onPointerDown: (e)=>{\n            if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;\n            onDown(e.pointerId);\n        },\n        onTouchStart: (e)=>{\n            onDown(e.changedTouches[0].identifier);\n        }\n    }) : {};\n    // We install mouse handlers for the drag motion on the thumb div, but\n    // not the key handler for moving the thumb with the slider.  Instead,\n    // we focus the range input, and let the browser handle the keyboard\n    // interactions; we then listen to input's onChange to update state.\n    return {\n        inputProps: (0, $fA3fN$mergeProps)(focusableProps, fieldProps, {\n            type: \"range\",\n            tabIndex: !isDisabled ? 0 : undefined,\n            min: state.getThumbMinValue(index),\n            max: state.getThumbMaxValue(index),\n            step: state.step,\n            value: value,\n            disabled: isDisabled,\n            \"aria-orientation\": orientation,\n            \"aria-valuetext\": state.getThumbValueLabel(index),\n            \"aria-required\": isRequired || undefined,\n            \"aria-invalid\": validationState === \"invalid\" || undefined,\n            \"aria-errormessage\": opts[\"aria-errormessage\"],\n            onChange: (e)=>{\n                stateRef.current.setThumbValue(index, parseFloat(e.target.value));\n            }\n        }),\n        thumbProps: {\n            ...interactions,\n            style: {\n                position: \"absolute\",\n                [isVertical ? \"top\" : \"left\"]: `${thumbPosition * 100}%`,\n                transform: \"translate(-50%, -50%)\",\n                touchAction: \"none\"\n            }\n        },\n        labelProps: labelProps,\n        isDragging: state.isThumbDragging(index),\n        isDisabled: isDisabled,\n        isFocused: isFocused\n    };\n}\n\n\n\n\nexport {$bcca50147b47f54d$export$56b2c08e277f365 as useSlider, $47b897dc8cdb026b$export$8d15029008292ae as useSliderThumb};\n//# sourceMappingURL=module.js.map\n","import {snapValueToStep as $aTwux$snapValueToStep, clamp as $aTwux$clamp} from \"@react-aria/utils\";\nimport {useControlledState as $aTwux$useControlledState} from \"@react-stately/utils\";\nimport {useMemo as $aTwux$useMemo, useState as $aTwux$useState, useRef as $aTwux$useRef} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nconst $28f99e3e86e6ec45$var$DEFAULT_MIN_VALUE = 0;\nconst $28f99e3e86e6ec45$var$DEFAULT_MAX_VALUE = 100;\nconst $28f99e3e86e6ec45$var$DEFAULT_STEP_VALUE = 1;\nfunction $28f99e3e86e6ec45$export$e5fda3247f5d67f9(props) {\n    const { isDisabled: isDisabled = false , minValue: minValue = $28f99e3e86e6ec45$var$DEFAULT_MIN_VALUE , maxValue: maxValue = $28f99e3e86e6ec45$var$DEFAULT_MAX_VALUE , numberFormatter: formatter , step: step = $28f99e3e86e6ec45$var$DEFAULT_STEP_VALUE , orientation: orientation = \"horizontal\"  } = props;\n    // Page step should be at least equal to step and always a multiple of the step.\n    let pageSize = (0, $aTwux$useMemo)(()=>{\n        let calcPageSize = (maxValue - minValue) / 10;\n        calcPageSize = (0, $aTwux$snapValueToStep)(calcPageSize, 0, calcPageSize + step, step);\n        return Math.max(calcPageSize, step);\n    }, [\n        step,\n        maxValue,\n        minValue\n    ]);\n    let value = (0, $aTwux$useMemo)(()=>$28f99e3e86e6ec45$var$convertValue(props.value), [\n        props.value\n    ]);\n    var _convertValue;\n    let defaultValue = (0, $aTwux$useMemo)(()=>(_convertValue = $28f99e3e86e6ec45$var$convertValue(props.defaultValue)) !== null && _convertValue !== void 0 ? _convertValue : [\n            minValue\n        ], [\n        props.defaultValue,\n        minValue\n    ]);\n    let onChange = $28f99e3e86e6ec45$var$createOnChange(props.value, props.defaultValue, props.onChange);\n    let onChangeEnd = $28f99e3e86e6ec45$var$createOnChange(props.value, props.defaultValue, props.onChangeEnd);\n    const [values, setValues] = (0, $aTwux$useControlledState)(value, defaultValue, onChange);\n    const [isDraggings, setDraggings] = (0, $aTwux$useState)(new Array(values.length).fill(false));\n    const isEditablesRef = (0, $aTwux$useRef)(new Array(values.length).fill(true));\n    const [focusedIndex, setFocusedIndex] = (0, $aTwux$useState)(undefined);\n    const valuesRef = (0, $aTwux$useRef)(null);\n    valuesRef.current = values;\n    const isDraggingsRef = (0, $aTwux$useRef)(null);\n    isDraggingsRef.current = isDraggings;\n    function getValuePercent(value) {\n        return (value - minValue) / (maxValue - minValue);\n    }\n    function getThumbMinValue(index) {\n        return index === 0 ? minValue : values[index - 1];\n    }\n    function getThumbMaxValue(index) {\n        return index === values.length - 1 ? maxValue : values[index + 1];\n    }\n    function isThumbEditable(index) {\n        return isEditablesRef.current[index];\n    }\n    function setThumbEditable(index, editable) {\n        isEditablesRef.current[index] = editable;\n    }\n    function updateValue(index, value) {\n        if (isDisabled || !isThumbEditable(index)) return;\n        const thisMin = getThumbMinValue(index);\n        const thisMax = getThumbMaxValue(index);\n        // Round value to multiple of step, clamp value between min and max\n        value = (0, $aTwux$snapValueToStep)(value, thisMin, thisMax, step);\n        valuesRef.current = $28f99e3e86e6ec45$var$replaceIndex(valuesRef.current, index, value);\n        setValues(valuesRef.current);\n    }\n    function updateDragging(index, dragging) {\n        if (isDisabled || !isThumbEditable(index)) return;\n        const wasDragging = isDraggingsRef.current[index];\n        isDraggingsRef.current = $28f99e3e86e6ec45$var$replaceIndex(isDraggingsRef.current, index, dragging);\n        setDraggings(isDraggingsRef.current);\n        // Call onChangeEnd if no handles are dragging.\n        if (onChangeEnd && wasDragging && !isDraggingsRef.current.some(Boolean)) onChangeEnd(valuesRef.current);\n    }\n    function getFormattedValue(value) {\n        return formatter.format(value);\n    }\n    function setThumbPercent(index, percent) {\n        updateValue(index, getPercentValue(percent));\n    }\n    function getRoundedValue(value) {\n        return Math.round((value - minValue) / step) * step + minValue;\n    }\n    function getPercentValue(percent) {\n        const val = percent * (maxValue - minValue) + minValue;\n        return (0, $aTwux$clamp)(getRoundedValue(val), minValue, maxValue);\n    }\n    function incrementThumb(index, stepSize = 1) {\n        let s = Math.max(stepSize, step);\n        updateValue(index, (0, $aTwux$snapValueToStep)(values[index] + s, minValue, maxValue, step));\n    }\n    function decrementThumb(index, stepSize = 1) {\n        let s = Math.max(stepSize, step);\n        updateValue(index, (0, $aTwux$snapValueToStep)(values[index] - s, minValue, maxValue, step));\n    }\n    return {\n        values: values,\n        getThumbValue: (index)=>values[index],\n        setThumbValue: updateValue,\n        setThumbPercent: setThumbPercent,\n        isThumbDragging: (index)=>isDraggings[index],\n        setThumbDragging: updateDragging,\n        focusedThumb: focusedIndex,\n        setFocusedThumb: setFocusedIndex,\n        getThumbPercent: (index)=>getValuePercent(values[index]),\n        getValuePercent: getValuePercent,\n        getThumbValueLabel: (index)=>getFormattedValue(values[index]),\n        getFormattedValue: getFormattedValue,\n        getThumbMinValue: getThumbMinValue,\n        getThumbMaxValue: getThumbMaxValue,\n        getPercentValue: getPercentValue,\n        isThumbEditable: isThumbEditable,\n        setThumbEditable: setThumbEditable,\n        incrementThumb: incrementThumb,\n        decrementThumb: decrementThumb,\n        step: step,\n        pageSize: pageSize,\n        orientation: orientation,\n        isDisabled: isDisabled\n    };\n}\nfunction $28f99e3e86e6ec45$var$replaceIndex(array, index, value) {\n    if (array[index] === value) return array;\n    return [\n        ...array.slice(0, index),\n        value,\n        ...array.slice(index + 1)\n    ];\n}\nfunction $28f99e3e86e6ec45$var$convertValue(value) {\n    if (value == null) return undefined;\n    return Array.isArray(value) ? value : [\n        value\n    ];\n}\nfunction $28f99e3e86e6ec45$var$createOnChange(value, defaultValue, onChange) {\n    return (newValue)=>{\n        if (typeof value === \"number\" || typeof defaultValue === \"number\") onChange === null || onChange === void 0 ? void 0 : onChange(newValue[0]);\n        else onChange === null || onChange === void 0 ? void 0 : onChange(newValue);\n    };\n}\n\n\n\n\nexport {$28f99e3e86e6ec45$export$e5fda3247f5d67f9 as useSliderState};\n//# sourceMappingURL=module.js.map\n"],"names":["$aa519ee6cf463259$export$7a8d2b02c9371cbf","WeakMap","$aa519ee6cf463259$export$68e648cbec363a18","state","index","id","get","Error","$bcca50147b47f54d$export$56b2c08e277f365","props","trackRef","labelProps","fieldProps","isVertical","orientation","_labelProps_id","set","direction","addGlobalListener","removeGlobalListener","realTimeTrackDraggingIndex","stateRef","current","reverseX","currentPosition","moveProps","onMoveStart","onMove","deltaX","deltaY","height","width","getBoundingClientRect","size","getThumbPercent","delta","percent","setThumbPercent","onMoveEnd","setThumbDragging","currentPointer","undefined","onDownTrack","e","clientX","clientY","isDisabled","values","every","_","i","isThumbDragging","top","left","closestThumb","value","getPercentValue","split","findIndex","v","length","lastLeft","firstRight","Math","abs","isThumbEditable","preventDefault","setFocusedThumb","setThumbValue","window","onUpTrack","_e_changedTouches","_e_pointerId","pointerId","changedTouches","identifier","htmlFor","onClick","_document_getElementById","document","getElementById","focus","groupProps","role","trackProps","onMouseDown","button","altKey","ctrlKey","metaKey","onPointerDown","pointerType","onTouchStart","style","position","touchAction","outputProps","map","join","$47b897dc8cdb026b$export$8d15029008292ae","opts","isRequired","validationState","inputRef","labelId","_opts_arialabelledby","trim","focusInput","isFocused","focusedThumb","keyboardProps","onKeyDown","getThumbMaxValue","getThumbMinValue","decrementThumb","incrementThumb","pageSize","test","key","continuePropagation","shiftKey","step","setThumbEditable","focusableProps","onFocus","onBlur","onDown","onUp","thumbPosition","interactions","inputProps","type","tabIndex","min","max","disabled","getThumbValueLabel","onChange","parseFloat","target","thumbProps","transform","isDragging","$28f99e3e86e6ec45$var$DEFAULT_MIN_VALUE","$28f99e3e86e6ec45$var$DEFAULT_MAX_VALUE","$28f99e3e86e6ec45$var$DEFAULT_STEP_VALUE","$28f99e3e86e6ec45$export$e5fda3247f5d67f9","minValue","maxValue","numberFormatter","formatter","calcPageSize","$28f99e3e86e6ec45$var$convertValue","_convertValue","defaultValue","$28f99e3e86e6ec45$var$createOnChange","onChangeEnd","setValues","isDraggings","setDraggings","Array","fill","isEditablesRef","focusedIndex","setFocusedIndex","valuesRef","isDraggingsRef","getValuePercent","updateValue","thisMin","thisMax","$28f99e3e86e6ec45$var$replaceIndex","getFormattedValue","format","val","round","getRoundedValue","getThumbValue","dragging","wasDragging","some","Boolean","editable","stepSize","s","array","slice","isArray","newValue"],"sourceRoot":""}