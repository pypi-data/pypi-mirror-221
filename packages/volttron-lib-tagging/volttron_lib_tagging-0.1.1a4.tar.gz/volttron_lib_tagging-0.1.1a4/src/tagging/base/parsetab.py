
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEQNOTLIKEleftGTLTGELEleftPLUSMINUSleftTIMESDIVIDEMODrightUMINUSleftPARENAND DIVIDE DQUOTE_STRING EQ FPOINT GE GT ID LE LIKE LPAREN LT MINUS MOD NEQ NOT NUMBER OR PLUS RPAREN SQUOTE_STRING TIMESclause : bool_exprclause : errorbool_expr : IDbool_expr : ID EQ exprbool_expr : ID NEQ exprbool_expr : ID LIKE SQUOTE_STRINGbool_expr : ID LIKE DQUOTE_STRINGbool_expr : ID GT exprbool_expr : ID GE exprbool_expr : ID LT exprbool_expr : ID LE exprbool_expr : NOT bool_exprbool_expr : bool_expr OR bool_exprbool_expr : bool_expr AND bool_exprbool_expr : LPAREN bool_expr RPAREN %prec PARENexpr : expr MINUS exprexpr : expr PLUS exprexpr : expr TIMES exprexpr : expr DIVIDE exprexpr : expr MOD exprexpr : MINUS expr %prec UMINUSexpr : LPAREN expr RPAREN %prec PARENexpr : NUMBERexpr : FPOINTexpr : SQUOTE_STRINGexpr : DQUOTE_STRING'
    
_lr_action_items = {'error':([0,],[3,]),'ID':([0,5,6,7,8,],[4,4,4,4,4,]),'NOT':([0,5,6,7,8,],[5,5,5,5,5,]),'LPAREN':([0,5,6,7,8,9,10,12,13,14,15,21,22,35,36,37,38,39,],[6,6,6,6,6,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'$end':([1,2,3,4,16,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,40,42,43,44,45,46,47,],[0,-1,-2,-3,-12,-13,-14,-4,-23,-24,-25,-26,-5,-6,-7,-8,-9,-10,-11,-15,-21,-16,-17,-18,-19,-20,-22,]),'OR':([2,4,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,40,42,43,44,45,46,47,],[7,-3,-12,7,-13,-14,-4,-23,-24,-25,-26,-5,-6,-7,-8,-9,-10,-11,-15,-21,-16,-17,-18,-19,-20,-22,]),'AND':([2,4,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,40,42,43,44,45,46,47,],[8,-3,-12,8,8,-14,-4,-23,-24,-25,-26,-5,-6,-7,-8,-9,-10,-11,-15,-21,-16,-17,-18,-19,-20,-22,]),'RPAREN':([4,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,40,41,42,43,44,45,46,47,],[-3,-12,34,-13,-14,-4,-23,-24,-25,-26,-5,-6,-7,-8,-9,-10,-11,-15,-21,47,-16,-17,-18,-19,-20,-22,]),'EQ':([4,],[9,]),'NEQ':([4,],[10,]),'LIKE':([4,],[11,]),'GT':([4,],[12,]),'GE':([4,],[13,]),'LT':([4,],[14,]),'LE':([4,],[15,]),'MINUS':([9,10,12,13,14,15,20,21,22,23,24,25,26,27,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,],[21,21,21,21,21,21,35,21,21,-23,-24,-25,-26,35,35,35,35,35,21,21,21,21,21,-21,35,-16,-17,-18,-19,-20,-22,]),'NUMBER':([9,10,12,13,14,15,21,22,35,36,37,38,39,],[23,23,23,23,23,23,23,23,23,23,23,23,23,]),'FPOINT':([9,10,12,13,14,15,21,22,35,36,37,38,39,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'SQUOTE_STRING':([9,10,11,12,13,14,15,21,22,35,36,37,38,39,],[25,25,28,25,25,25,25,25,25,25,25,25,25,25,]),'DQUOTE_STRING':([9,10,11,12,13,14,15,21,22,35,36,37,38,39,],[26,26,29,26,26,26,26,26,26,26,26,26,26,26,]),'PLUS':([20,23,24,25,26,27,30,31,32,33,40,41,42,43,44,45,46,47,],[36,-23,-24,-25,-26,36,36,36,36,36,-21,36,-16,-17,-18,-19,-20,-22,]),'TIMES':([20,23,24,25,26,27,30,31,32,33,40,41,42,43,44,45,46,47,],[37,-23,-24,-25,-26,37,37,37,37,37,-21,37,37,37,-18,-19,-20,-22,]),'DIVIDE':([20,23,24,25,26,27,30,31,32,33,40,41,42,43,44,45,46,47,],[38,-23,-24,-25,-26,38,38,38,38,38,-21,38,38,38,-18,-19,-20,-22,]),'MOD':([20,23,24,25,26,27,30,31,32,33,40,41,42,43,44,45,46,47,],[39,-23,-24,-25,-26,39,39,39,39,39,-21,39,39,39,-18,-19,-20,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'clause':([0,],[1,]),'bool_expr':([0,5,6,7,8,],[2,16,17,18,19,]),'expr':([9,10,12,13,14,15,21,22,35,36,37,38,39,],[20,27,30,31,32,33,40,41,42,43,44,45,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> clause","S'",1,None,None,None),
  ('clause -> bool_expr','clause',1,'p_clause','base_tagging.py',853),
  ('clause -> error','clause',1,'p_clause_error','base_tagging.py',858),
  ('bool_expr -> ID','bool_expr',1,'p_bool_expr_id','base_tagging.py',864),
  ('bool_expr -> ID EQ expr','bool_expr',3,'p_bool_expr_eq','base_tagging.py',870),
  ('bool_expr -> ID NEQ expr','bool_expr',3,'p_bool_expr_neq','base_tagging.py',875),
  ('bool_expr -> ID LIKE SQUOTE_STRING','bool_expr',3,'p_bool_expr_like1','base_tagging.py',880),
  ('bool_expr -> ID LIKE DQUOTE_STRING','bool_expr',3,'p_bool_expr_like2','base_tagging.py',885),
  ('bool_expr -> ID GT expr','bool_expr',3,'p_bool_expr_gt','base_tagging.py',890),
  ('bool_expr -> ID GE expr','bool_expr',3,'p_bool_expr_ge','base_tagging.py',895),
  ('bool_expr -> ID LT expr','bool_expr',3,'p_bool_expr_lt','base_tagging.py',900),
  ('bool_expr -> ID LE expr','bool_expr',3,'p_bool_expr_le','base_tagging.py',905),
  ('bool_expr -> NOT bool_expr','bool_expr',2,'p_bool_expr_not','base_tagging.py',910),
  ('bool_expr -> bool_expr OR bool_expr','bool_expr',3,'p_bool_expr_or','base_tagging.py',915),
  ('bool_expr -> bool_expr AND bool_expr','bool_expr',3,'p_bool_expr_and','base_tagging.py',920),
  ('bool_expr -> LPAREN bool_expr RPAREN','bool_expr',3,'p_bool_expr_paren','base_tagging.py',925),
  ('expr -> expr MINUS expr','expr',3,'p_expr_minus','base_tagging.py',930),
  ('expr -> expr PLUS expr','expr',3,'p_expr_plus','base_tagging.py',935),
  ('expr -> expr TIMES expr','expr',3,'p_expr_times','base_tagging.py',940),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_div','base_tagging.py',945),
  ('expr -> expr MOD expr','expr',3,'p_expr_mod','base_tagging.py',950),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','base_tagging.py',955),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_paren','base_tagging.py',960),
  ('expr -> NUMBER','expr',1,'p_expr_number','base_tagging.py',965),
  ('expr -> FPOINT','expr',1,'p_expr_fp','base_tagging.py',970),
  ('expr -> SQUOTE_STRING','expr',1,'p_expr_single_quote_string','base_tagging.py',975),
  ('expr -> DQUOTE_STRING','expr',1,'p_expr_double_quote_string','base_tagging.py',980),
]
