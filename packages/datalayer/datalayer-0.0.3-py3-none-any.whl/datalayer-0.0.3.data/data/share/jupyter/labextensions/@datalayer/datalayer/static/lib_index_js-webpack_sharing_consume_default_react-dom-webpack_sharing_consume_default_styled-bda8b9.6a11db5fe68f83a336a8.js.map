{"version":3,"file":"lib_index_js-webpack_sharing_consume_default_react-dom-webpack_sharing_consume_default_styled-bda8b9.6a11db5fe68f83a336a8.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAC4H;AAC7B;AAC/F,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F;AACA,2MAA2M,0BAA0B,GAAG,SAAS,oFAAoF,MAAM,KAAK,YAAY,2LAA2L,0BAA0B,GAAG,qBAAqB;AACzkB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;ACPvC;AAC4H;AAC7B;AACW;AAC1G,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F,0BAA0B,qFAAiC;AAC3D;AACA,mDAAmD,kEAAkE;AACrH;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACT+C;AAC1C;AACmB;AACH;AACR;AACZ;AACI;AAC5C;AACA,0BAA0B,+CAAQ;AAClC,kCAAkC,+CAAQ;AAC1C,IAAI,gDAAS;AACb,QAAQ,oDAAU;AAClB;AACA;AACA,SAAS;AACT;AACA,4FAA4F,OAAO;AACnG,SAAS;AACT,KAAK;AACL,YAAY,sDAAI,CAAC,uDAAS,IAAI,UAAU,sDAAI,CAAC,qDAAa,IAAI,UAAU,sDAAI,CAAC,qDAAU,IAAI,UAAU,uDAAK,CAAC,qDAAG,IAAI,SAAS,eAAe,aAAa,sDAAI,CAAC,qDAAG,IAAI,UAAU,sDAAI,CAAC,8DAAY,IAAI,UAAU,sDAAI,CAAC,mEAAiB,IAAI,oCAAoC,sDAAI,CAAC,8DAAkB,IAAI,eAAe,oBAAoB,oBAAoB,YAAY,yBAAyB,GAAG,GAAG,GAAG,sDAAI,CAAC,qDAAG,IAAI,+BAA+B,sDAAI,CAAC,sDAAa,IAAI,kBAAkB,GAAG,IAAI,GAAG,GAAG,GAAG;AAC7e;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;ACrB6D;AACjD;AACrC;AACA,YAAY,UAAU;AACtB,YAAY,sDAAI,CAAC,uDAAS,IAAI,UAAU,uDAAK,CAAC,qDAAI,IAAI,kCAAkC,GAAG;AAC3F;AACA,iEAAe,GAAG,EAAC;;;;;;;;;;;;;;;;;;;ACN4B;AACS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kDAAkD;AACzD;AACA,qBAAqB,+EAA6B;AAClD,uBAAuB,8DAAW;AAClC;AACA;AACA;AACA,yBAAyB,8EAA4B;AACrD;AACA;AACA,kBAAkB,+EAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gFAA8B;AAChD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClC+D;AACQ;AACtB;AACG;AACb;AACE;AACa;AAC1B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAe;AAC9B,eAAe,yEAAgB,EAAE,2DAAS;AAC1C;AACA,gBAAgB,WAAW;AAC3B;AACA,kCAAkC,8DAAO;AACzC;AACA,oBAAoB,qDAAY;AAChC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oCAAoC,kDAAa;AACjD,mCAAmC,gEAAc,GAAG,SAAS;AAC7D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,QAAQ,oDAAU;AAClB;AACA;AACA,SAAS;AACT;AACA,kFAAkF,OAAO;AACzF,SAAS;AACT;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;ACvE0B;AACG;AACJ;AACxC,4BAA4B,6DAAW;AAC9C;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAI,CAAC,6DAAS,IAAI;AACjC;AACA;;;;;;;;;;;;;;;;;ACX+B;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,sBAAsB,gDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,+BAA+B,gDAAmB;AACrD;AACA,GAAG,8BAA8B,gDAAmB;AACpD;AACA;AACA,GAAG,gBAAgB,gDAAmB;AACtC;AACA;AACA,GAAG,gBAAgB,gDAAmB;AACtC;AACA;AACA,GAAG;AACH;AACA,mBAAmB,6CAAgB;AACnC,iEAAe,UAAU;;;;;;;;;;;;;;;;;ACrCsE;AAC/F,YAA6F;;AAE7F;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,6FAAc,MAAM","sources":["webpack://@datalayer/core/./style/base.css","webpack://@datalayer/core/./style/index.css","webpack://@datalayer/core/./lib/components/Datalayer.js","webpack://@datalayer/core/./lib/components/DatalayerTab1.js","webpack://@datalayer/core/./lib/handler.js","webpack://@datalayer/core/./lib/index.js","webpack://@datalayer/core/./lib/widget.js","webpack://@datalayer/core/../icons/react/data1/esm/DatalayerGreenIcon.js","webpack://@datalayer/core/./style/index.css?f019"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n    See the JupyterLab Developer Guide for useful CSS Patterns:\\n\\n    https://jupyterlab.readthedocs.io/en/stable/developer/css.html\\n*/\\n\\n.dla-Container {\\n    overflow-y: visible;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/base.css\"],\"names\":[],\"mappings\":\"AAAA;;;;CAIC;;AAED;IACI,mBAAmB;AACvB\",\"sourcesContent\":[\"/*\\n    See the JupyterLab Developer Guide for useful CSS Patterns:\\n\\n    https://jupyterlab.readthedocs.io/en/stable/developer/css.html\\n*/\\n\\n.dla-Container {\\n    overflow-y: visible;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../node_modules/css-loader/dist/cjs.js!./base.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { ThemeProvider, BaseStyles, Box } from '@primer/react';\nimport { DatalayerGreenIcon } from '@datalayer/icons-react';\nimport { UnderlineNav } from '@primer/react/drafts';\nimport { requestAPI } from '../handler';\nimport DatalayerTab1 from './DatalayerTab1';\nconst Datalayer = () => {\n    const [tab, setTab] = useState(1);\n    const [version, setVersion] = useState('');\n    useEffect(() => {\n        requestAPI('get_config')\n            .then(data => {\n            setVersion(data.version);\n        })\n            .catch(reason => {\n            console.error(`The Jupyter Server datalayer extension appears to be missing.\\n${reason}`);\n        });\n    });\n    return (_jsx(_Fragment, { children: _jsx(ThemeProvider, { children: _jsx(BaseStyles, { children: _jsxs(Box, { style: { maxWidth: 700 }, children: [_jsx(Box, { children: _jsx(UnderlineNav, { children: _jsx(UnderlineNav.Item, { \"aria-current\": \"page\", icon: () => _jsx(DatalayerGreenIcon, { colored: true }), onSelect: e => { e.preventDefault(); setTab(1); }, children: \"Datalayer\" }) }) }), _jsx(Box, { m: 3, children: (tab === 1) && _jsx(DatalayerTab1, { version: version }) })] }) }) }) }));\n};\nexport default Datalayer;\n","import { jsxs as _jsxs, Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Text } from '@primer/react';\nconst Tab = (props) => {\n    const { version } = props;\n    return (_jsx(_Fragment, { children: _jsxs(Text, { children: [\"Version: \", version] }) }));\n};\nexport default Tab;\n","import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, 'datalayer', // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    let data = await response.text();\n    if (data.length > 0) {\n        try {\n            data = JSON.parse(data);\n        }\n        catch (error) {\n            console.log('Not a JSON response body.', response);\n        }\n    }\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message || data);\n    }\n    return data;\n}\n","import { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { MainAreaWidget, ICommandPalette } from '@jupyterlab/apputils';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { requestAPI } from './handler';\nimport { CounterWidget } from './widget';\nimport datalayerSvg from '../style/svg/datalayer.svg';\nimport '../style/index.css';\n/**\n * The command IDs used by the plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.create = 'create-datalayer-widget';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * Initialization data for the @datalayer/datalayer extension.\n */\nconst plugin = {\n    id: '@datalayer/datalayer:plugin',\n    autoStart: true,\n    requires: [ICommandPalette],\n    optional: [ISettingRegistry, ILauncher],\n    activate: (app, palette, settingRegistry, launcher) => {\n        const { commands } = app;\n        const command = CommandIDs.create;\n        const datalayerIcon = new LabIcon({\n            name: 'datalayer:icon',\n            svgstr: datalayerSvg\n        });\n        commands.addCommand(command, {\n            caption: 'Show Datalayer',\n            label: 'Datalayer',\n            icon: (args) => datalayerIcon,\n            execute: () => {\n                const content = new CounterWidget();\n                const widget = new MainAreaWidget({ content });\n                widget.title.label = 'Datalayer';\n                widget.title.icon = datalayerIcon;\n                app.shell.add(widget, 'main');\n            }\n        });\n        const category = 'Datalayer';\n        palette.addItem({ command, category });\n        if (launcher) {\n            launcher.add({\n                command,\n                category,\n                rank: 1\n            });\n        }\n        console.log('JupyterLab extension @datalayer/datalayer is activated!');\n        if (settingRegistry) {\n            settingRegistry\n                .load(plugin.id)\n                .then(settings => {\n                console.log('@datalayer/datalayer settings loaded:', settings.composite);\n            })\n                .catch(reason => {\n                console.error('Failed to load settings for @datalayer/datalayer.', reason);\n            });\n        }\n        requestAPI('get_config')\n            .then(data => {\n            console.log(data);\n        })\n            .catch(reason => {\n            console.error(`The Jupyter Server extension appears to be missing.\\n${reason}`);\n        });\n    }\n};\nexport default plugin;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport Datalayer from './components/Datalayer';\nexport class CounterWidget extends ReactWidget {\n    constructor() {\n        super();\n        this.addClass('dla-Container');\n    }\n    render() {\n        return _jsx(Datalayer, {});\n    }\n}\n","import * as React from \"react\";\n\nconst sizeMap = {\n  \"small\": 16,\n  \"medium\": 32,\n  \"large\": 64\n};\n\nfunction DatalayerGreenIcon({\n  title,\n  titleId,\n  size,\n  colored,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: colored ? 'none' : (['#fff', '#fffff', 'white', '#FFF', '#FFFFFF'].includes('none') ? 'white' : 'currentColor'),\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 20 20\",\n    width: size ? typeof size === \"string\" ? sizeMap[size] : size : \"16px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fill: colored ? '#2ECC71' : (['#fff', '#fffff', 'white', '#FFF', '#FFFFFF'].includes('#2ECC71') ? 'white' : 'currentColor'),\n    d: \"M0 0h20v4H0zm0 0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: colored ? '#1ABC9C' : (['#fff', '#fffff', 'white', '#FFF', '#FFFFFF'].includes('#1ABC9C') ? 'white' : 'currentColor'),\n    d: \"M0 8h20v4H0zm0 0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: colored ? '#16A085' : (['#fff', '#fffff', 'white', '#FFF', '#FFFFFF'].includes('#16A085') ? 'white' : 'currentColor'),\n    d: \"M0 16h20v4H0zm0 0\"\n  }));\n}\nconst ForwardRef = React.forwardRef(DatalayerGreenIcon);\nexport default ForwardRef;","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}