[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling >= 1.11.0",
  "pip >= 22.0.0"
]

[project.scripts]
fablerer = "fabler.__main__:main"
fabler-web = "fabler.server:serve"


[project]
name            = "fabler"
version         = "0.0.6"
description     = "Multimodal AI Story Teller, built with Stable Diffusion, GPT, and neural text-to-speech."
readme          = "README.md"
license         = "MIT"
requires-python = ">=3.8"

authors = [
  { name = "Christopher Woodall", email = "woodall.christopher@gmail.com" },
]

keywords = [
  "GPT",
  "TTS",
  "transformer",
  "multimodal AI",
  "language-model",
  "stable diffusion",
  "neural text-to-speech",
]

classifiers = [
  "Development Status :: 1 - Planning",
  "Environment :: Console",
  "Environment :: GPU",
  "Environment :: Web Environment",
  "Framework :: Flask",
  "Framework :: Hatch",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
  "accelerate[test_trackers]",
  "diffusers",
  "flask",
  "nltk",
  "tensorboard",
  "transformers",
  "TTS",
  "pyyaml",
]


[project.urls]
GitHub = "https://github.com/christopherwoodall/fabler"


[project.optional-dependencies]
developer = [
  "hatch",            # Build tool
  "pre-commit",       # Git hooks
  "black",            # Code formatting
  "isort",            # Code formatting
  "flake8",           # Linting
  "mypy",             # Type checking
  "pydantic",         # Type checking
  "types-PyYAML",     # Type checking
]

staging = [
  # See haystack/nodes/retriever/_embedding_encoder.py, _SentenceTransformersEmbeddingEncoder
  "sentence-transformers>=2.2.0",

]


[tool.hatch.build]
ignore-vcs   = false
reproducible = true
directory    = "dist"
include = [
  ".git",
  ".github",
  ".gitignore",
  "fabler",
  "utils",
  "data/",
  "LICENSE",
  "Makefile",
  "pyproject.toml",
  "scene.yaml",
]
exclude = [ ]

[tool.hatch.metadata]
allow-direct-references = true


# Tools
[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ["py39"]


[tool.bandit]
recursive = true
targets = [ "fabler" ]
skips   = [
  "B101",  # Ignore defensive `assert`s (especially useful for mypy)
  "B404",  # Ignore warnings about importing subprocess
  "B603",  # Ignore warnings about calling subprocess.Popen without shell=True
  "B607",  # Ignore warnings about calling subprocess.Popen without a full path to executable
]


[tool.isort]
profile = "black"
force_sort_within_sections = true


[tool.mypy]
disallow_untyped_defs = false
disallow_incomplete_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_return_any = false
warn_no_return = false
warn_unused_ignores = true
warn_unused_configs = true
plugins = [
  "pydantic.mypy",
]