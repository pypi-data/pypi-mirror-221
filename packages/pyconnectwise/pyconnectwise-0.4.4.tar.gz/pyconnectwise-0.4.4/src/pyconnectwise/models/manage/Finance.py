# generated by datamodel-codegen:
#   filename:  All.json

from __future__ import annotations

from pydantic import BaseModel, ConfigDict, Field

from . import CurrencyCodeReference


class Currency(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    id: int | None = None
    currency_identifier: str = Field(..., alias='currencyIdentifier')
    """
     Max length: 10;
    """
    name: str
    """
     Max length: 50;
    """
    symbol: str | None = None
    """
     Max length: 10;
    """
    display_id_flag: bool | None = Field(default=None, alias='displayIdFlag')
    display_symbol_flag: bool | None = Field(default=None, alias='displaySymbolFlag')
    currency_code: CurrencyCodeReference | None = Field(
        default=None, alias='currencyCode'
    )
    thousands_separator: str | None = Field(default=None, alias='thousandsSeparator')
    """
     Max length: 1;
    """
    decimal_separator: str | None = Field(default=None, alias='decimalSeparator')
    """
     Max length: 1;
    """
    negative_parentheses_flag: bool | None = Field(
        default=None, alias='negativeParenthesesFlag'
    )
    right_align: bool | None = Field(default=None, alias='rightAlign')
    number_of_decimals: int | None = Field(default=None, alias='numberOfDecimals')
    report_format: str | None = Field(default=None, alias='reportFormat')
    field_info: dict[str, str] | None = Field(default=None, alias='_info')
