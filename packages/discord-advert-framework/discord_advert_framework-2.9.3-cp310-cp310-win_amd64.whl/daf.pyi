# This file was generated by Nuitka and describes the types of the
# created shared library.

# At this time it lists only the imports made and can be used by the
# tools that bundle libraries, including Nuitka itself. For instance
# standalone mode usage of the created library will need it.

# In the future, this will also contain type information for values
# in the module, so IDEs will use this. Therefore please include it
# when you make software releases of the extension module that it
# describes.

import _discord
import client
import core
import dtypes
import guild
import message
import logging
import web
import convert
import remote
import pathlib
import misc
import logging.tracing
import typeguard
import asyncio
import copy
import aiohttp_socks
import contextlib
import enum
import inspect
import decimal
import array
import datetime
import aiohttp
import shutil
import pickle
import urllib.parse
import yt_dlp
import re
import _logging
import sql
import tracing
import json
import csv
import mgr
import tables
import sqlalchemy
import sqlalchemy.ext.asyncio
import sqlalchemy.engine
import sqlalchemy.exc
import sqlalchemy.orm
import aiosqlite
import threading
import enum_tools.documentation
import base
import text_based
import voice_based
import dataclasses
import random
import itertools
import weakref
import aiohttp.web
import ssl
import undetected_chromedriver
import selenium.webdriver.chrome.options
import selenium.webdriver.remote.webelement
import selenium.webdriver.common.by
import selenium.webdriver.common.keys
import selenium.webdriver.common.action_chains
import selenium.webdriver.support.wait
import selenium.webdriver.support.expected_conditions
import selenium.common.exceptions

# This is not Python source even if it looks so. Make it clear for
# now. This was decided by PEP 484 designers.
__name__ = ...

