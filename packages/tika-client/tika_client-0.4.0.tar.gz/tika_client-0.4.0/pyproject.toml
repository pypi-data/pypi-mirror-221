[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tika-client"
dynamic = ["version"]
description = 'A modern REST client for Apache Tika server'
readme = "README.md"
requires-python = ">=3.8"
license = "GPL-3.0-only"
keywords = []
authors = [
  { name = "Trenton H", email = "797416+stumpylog@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
  "Environment :: Web Environment",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy"
]
dependencies = ["httpx ~= 0.24"]

[project.urls]
Documentation = "https://github.com/stumpylog/tika-rest-client#readme"
Issues = "https://github.com/stumpylog/tika-rest-client/issues"
Source = "https://github.com/stumpylog/tika-rest-client"

[tool.hatch.version]
path = "src/tika_client/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "pytest-sugar",
  "pytest-cov",
  "pytest-xdist",
  "pytest-httpx",
  "python-magic",
]

[tool.hatch.envs.default.scripts]
version = "python3 --version"
test = "pytest {args:tests}"
cov-clear = "coverage erase"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov-html = "coverage html"
cov-json = "coverage json"
cov = [
  "version",
  "cov-clear",
  "test-cov",
  "cov-report",
  "cov-json"
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
  "httpx",
]

[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/tika_client}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py38"]
line-length = 120

[tool.ruff]
# https://beta.ruff.rs/docs/settings/
fix = true
format = "grouped"
target-version = "py38"
line-length = 120
# https://beta.ruff.rs/docs/rules/
extend-select = [
  "A",
  "ARG",
  "B",
  "C",
	"COM",
  "DTZ",
  "E",
  "EM",
	"EXE",
  "F",
  "FBT",
  "I",
  "ICN",
	"INP",
  "ISC",
  "N",
	"PIE",
	"PTH",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "PT",
  "Q",
	"RSE",
  "RUF",
  "S",
	"SIM",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]

[tool.ruff.isort]
force-single-line = true
known-first-party = ["tika_client"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004",
                "S101",
                "TID252",
                # Allow more complex pytest.raises
                "PT012",
                "DTZ001"
                ]

[tool.coverage.run]
source_pkgs = ["tika_client", "tests"]
branch = true
parallel = true
omit = [
  "src/tika_client/__about__.py",
]

[tool.coverage.paths]
tika_client = ["src/tika_client", "*/tika-client/src/tika_client"]
tests = ["tests", "*/tika-client/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
#disallow_any_expr = true
#disallow_untyped_defs = true
#disallow_incomplete_defs = true
check_untyped_defs = true
strict_optional = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
warn_unused_configs = true
