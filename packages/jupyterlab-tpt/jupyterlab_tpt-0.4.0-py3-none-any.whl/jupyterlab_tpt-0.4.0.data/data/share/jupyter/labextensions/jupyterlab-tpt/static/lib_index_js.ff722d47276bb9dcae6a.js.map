{"version":3,"file":"lib_index_js.ff722d47276bb9dcae6a.js","mappings":"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","sources":["webpack://jupyterlab-tpt/./src/index.ts"],"sourcesContent":["/*\n * for attaching keybindings later on, see\n * https://towardsdatascience.com/how-to-customize-jupyterlab-keyboard-shortcuts-72321f73753d\n */\n\n/* eslint-disable prettier/prettier */\n\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application'\n\nimport { ICommandPalette } from '@jupyterlab/apputils'\n\nimport {\n  INotebookTracker,\n  Notebook,\n  NotebookActions,\n} from '@jupyterlab/notebook'\n\nimport {\n  CodeCell,\n  MarkdownCell,\n  Cell,\n} from '@jupyterlab/cells'\n\nimport { md_get, md_set, md_unset, md_insert, md_remove, md_clean } from 'jupyterlab-celltagsclasses'\n\nimport { Scope, apply_on_cells } from 'jupyterlab-celltagsclasses'\n\n/*\nin order to have consistent behaviour between\nclassic notebook (with the hide-input extension enabled)\nand jupyter book, we manage consistently\n* the metadata.hide_input attribute\n* the 'hide-input' tag\n*/\nconst _set_hide = (cell: Cell, hidden: boolean, input_output: string) => {\n  if (hidden) {\n    md_set(cell, `hide_${input_output}`, true)\n    md_insert(cell, 'tags', `hide-${input_output}`)\n  } else {\n    md_unset(cell, `hide_${input_output}`)\n    md_remove(cell, 'tags', `hide-${input_output}`)\n  }\n}\nconst _toggle_hide = (cell: Cell, input_output: string) => {\n  if (md_get(cell, `tags.hide-${input_output}`)) {\n    _set_hide(cell, false, input_output)\n  } else {\n    _set_hide(cell, true, input_output)\n  }\n}\n\nconst set_hide_input = (cell: Cell, hidden: boolean) => _set_hide(cell, hidden, 'input')\nconst set_hide_output = (cell: Cell, hidden: boolean) => _set_hide(cell, hidden, 'output')\nconst toggle_hide_input = (cell: Cell) => _toggle_hide(cell, 'input')\nconst toggle_hide_output = (cell: Cell) => _toggle_hide(cell, 'output')\n\n\n// this is specific to the web course, where we use a toolset with functions\n// that have this in their name\nconst NEEDLE = 'tools.sample_from'\n\nconst set_hide_input_needle = (cell: Cell, hidden: boolean) => {\n  // ignore text cells\n  if (cell instanceof CodeCell) {\n    // need to access the cell model\n    const model = cell.model\n    if (model.sharedModel.getSource().toLowerCase().indexOf(NEEDLE) !== -1) {\n      set_hide_input(cell, hidden)\n    }\n  }\n}\n\n// use depth=0 to remove\nconst make_text_and_insert_section = (notebook: Notebook, depth: number) => {\n\n  // console.log(\"make_text_and_insert_section\", depth)\n  NotebookActions.changeCellType(notebook, 'markdown')\n  const activeCell = notebook?.activeCell\n  if (activeCell === undefined) { return }\n  const model = activeCell?.model\n  if (model === undefined) { return }\n  // remove starting #'s if any\n  for (let i = 4; i > 0; i--) {\n    model.sharedModel.setSource(model.sharedModel.getSource().replace('#'.repeat(i) + ' ', ''))\n  }\n  if (depth === 0) { return }\n  model.sharedModel.setSource(`${'#'.repeat(depth)} ${model.sharedModel.getSource()}`)\n}\n\nconst clean_cell_metadata = (cell: Cell) => {\n  md_clean(cell, '')\n  console.log(\"Cleaning metadata for cell\", cell)\n}\n\n\n/**\n * Initialization data for the jupyterlab-tpt extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab-tpt:plugin',\n  autoStart: true,\n  requires: [ICommandPalette, INotebookTracker],\n  activate: (app: JupyterFrontEnd, palette: ICommandPalette, notebookTracker: INotebookTracker) => {\n    console.log('extension jupyterlab-tpt is activating')\n    // console.log('ICommandPalette', palette)\n    // console.log('INotebookTracker', notebookTracker)\n\n    // the addCommand would accept the following\n    // isEnabled: () => true,\n    // isVisible: () => true,\n    // iconClass: 'some-css-icon-class',\n    // also we could pass args to execute, but in the hide-input case\n    // it does not work well as we need distinct labels depending on the args\n\n    // https://lumino.readthedocs.io/en/1.x/api/commands/interfaces/commandregistry.ikeybindingoptions.html\n    // The supported modifiers are: Accel, Alt, Cmd, Ctrl, and Shift. The Accel\n    // modifier is translated to Cmd on Mac and Ctrl on all other platforms. The\n    // Cmd modifier is ignored on non-Mac platforms.\n    // Alt is option on mac\n\n    let command\n\n    // Option-Command-9 = toggle (hide-input) on all selected cells\n    // Ctrl-Alt-9 = show (wrt hide-input) on all selected cells\n    command = 'convenience:hide-input'\n    app.commands.addCommand(command, {\n      label: 'hide input for all selected cells',\n      execute: () => apply_on_cells(notebookTracker, Scope.Multiple, (cell) => set_hide_input(cell, true))\n    })\n    palette.addItem({ command, category: 'Convenience' })\n\n    command = 'convenience:show-input'\n    app.commands.addCommand(command, {\n      label: 'show input for all selected cells',\n      execute: () => apply_on_cells(notebookTracker, Scope.Multiple, (cell) => set_hide_input(cell, false))\n    })\n    palette.addItem({ command, category: 'Convenience' })\n    app.commands.addKeyBinding({ command, keys: ['Ctrl Alt 9'], selector: '.jp-Notebook' })\n\n    command = 'convenience:toggle-show-input'\n    app.commands.addCommand(command, {\n      label: 'toggle show input for all selected cells',\n      execute: () => apply_on_cells(notebookTracker, Scope.Multiple, (cell) => toggle_hide_input(cell))\n    })\n    palette.addItem({ command, category: 'Convenience' })\n    app.commands.addKeyBinding({ command, keys: ['Alt Cmd 9'], selector: '.jp-Notebook' })\n\n    command = 'convenience:hide-output'\n    app.commands.addCommand(command, {\n      label: 'hide output for all selected cells',\n      execute: () => apply_on_cells(notebookTracker, Scope.Multiple, (cell) => set_hide_output(cell, true))\n    })\n    palette.addItem({ command, category: 'Convenience' })\n\n    command = 'convenience:show-output'\n    app.commands.addCommand(command, {\n      label: 'show output for all selected cells',\n      execute: () => apply_on_cells(notebookTracker, Scope.Multiple, (cell) => set_hide_output(cell, false))\n    })\n    palette.addItem({ command, category: 'Convenience' })\n    app.commands.addKeyBinding({ command, keys: ['Ctrl Alt 0'], selector: '.jp-Notebook' })\n\n    command = 'convenience:toggle-show-output'\n    app.commands.addCommand(command, {\n      label: 'toggle show output for all selected cells',\n      execute: () => apply_on_cells(notebookTracker, Scope.Multiple, (cell) => toggle_hide_output(cell))\n    })\n    palette.addItem({ command, category: 'Convenience' })\n    app.commands.addKeyBinding({ command, keys: ['Alt Cmd 0'], selector: '.jp-Notebook' })\n\n\n    command = 'convenience:hide-input-all-samples'\n    app.commands.addCommand(command, {\n      label: `hide input for all code cells that contain ${NEEDLE}`,\n      execute: () => apply_on_cells(notebookTracker, Scope.All, (cell) => set_hide_input_needle(cell, true))\n    })\n    palette.addItem({ command, category: 'Convenience' })\n    app.commands.addKeyBinding({ command, keys: ['Alt Cmd 8'], selector: '.jp-Notebook' })\n\n    command = 'convenience:show-input-all-samples'\n    app.commands.addCommand(command, {\n      label: `show input for all code cells that contain ${NEEDLE}`,\n      execute: () => apply_on_cells(notebookTracker, Scope.All, (cell) => set_hide_input_needle(cell, false))\n    })\n    palette.addItem({ command, category: 'Convenience' })\n    app.commands.addKeyBinding({ command, keys: ['Ctrl Alt 8'], selector: '.jp-Notebook' })\n\n\n    command = 'convenience:metadata-clean'\n    app.commands.addCommand(command, {\n      label: `clean metadata for all selected cells`,\n      execute: () => apply_on_cells(notebookTracker, Scope.Multiple, clean_cell_metadata)\n    })\n    palette.addItem({ command, category: 'Convenience' })\n    app.commands.addKeyBinding({ command, keys: ['Alt Cmd 7'], selector: '.jp-Notebook' })\n\n\n    // Ctrl-0 to Ctrl-4 to set markdown sections\n    for (let depth = 0; depth < 5; depth++) {\n\n      command = `convenience:section-level-${depth}`\n      app.commands.addCommand(command, {\n        label: `active cell becomes section level ${depth}`,\n        execute: () => {\n          const notebook = notebookTracker.currentWidget?.content\n          if (notebook === undefined) { return }\n          make_text_and_insert_section(notebook, depth)\n        }\n      })\n      palette.addItem({ command, category: 'Convenience' })\n      app.commands.addKeyBinding({ command, keys: [`Ctrl ${depth}`], selector: '.jp-Notebook' })\n    }\n\n    // render-all-cells - unrender-all-cells (markdown actually)\n\n    const unrender_markdown = (cell: Cell) => {\n      if (cell.model.type !== 'markdown') { return }\n      (cell as MarkdownCell).rendered = false\n    }\n    command = 'notebook:unrender-all-markdown'\n    app.commands.addCommand(command, {\n      label: 'unrender all markdown cells',\n      execute: () => apply_on_cells(notebookTracker, Scope.All, unrender_markdown)\n    })\n    palette.addItem({ command, category: 'Convenience' })\n    // control-e means end of ine if in edit mode\n    app.commands.addKeyBinding({ command, keys: ['Ctrl E'], selector: '.jp-Notebook.jp-mod-commandMode' })\n\n    app.commands.addKeyBinding({ command: 'notebook:render-all-markdown', keys: ['Ctrl W'], selector: '.jp-Notebook' })\n\n    // this is actually lowercase u and d, would need an explicit Shift otherwise\n    app.commands.addKeyBinding({ command: 'notebook:move-cell-up', keys: ['U'], selector: '.jp-Notebook.jp-mod-commandMode' })\n    app.commands.addKeyBinding({ command: 'notebook:move-cell-down', keys: ['D'], selector: '.jp-Notebook.jp-mod-commandMode' })\n\n  }\n}\n\nexport default plugin\n"],"names":[],"sourceRoot":""}