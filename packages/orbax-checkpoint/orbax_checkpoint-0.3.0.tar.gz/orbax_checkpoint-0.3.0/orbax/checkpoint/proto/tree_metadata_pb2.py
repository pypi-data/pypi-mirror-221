# Copyright 2023 The Orbax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tree_metadata.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x13tree_metadata.proto\x12\x10orbax.checkpoint"+\n\rValueMetadata\x12\x11\n\x04type\x18\x01'
    b' \x01(\tH\x00\x88\x01\x01\x42\x07\n\x05_type"\xac\x03\n\x0cTreeMetadata\x12>\n\tstructure\x18\x01'
    b' \x03(\x0b\x32+.orbax.checkpoint.TreeMetadata.KeyValuePair\x1a\xdb\x02\n\x0cKeyValuePair\x12<\n\x03key\x18\x01'
    b' \x03(\x0b\x32/.orbax.checkpoint.TreeMetadata.KeyValuePair.Key\x12\x33\n\x05value\x18\x02'
    b' \x01(\x0b\x32\x1f.orbax.checkpoint.ValueMetadataH\x00\x88\x01\x01\x1a\xcd\x01\n\x03Key\x12\x11\n\x04name\x18\x01'
    b' \x01(\tH\x00\x88\x01\x01\x12J\n\x04type\x18\x02'
    b' \x01(\x0e\x32\x37.orbax.checkpoint.TreeMetadata.KeyValuePair.Key.KeyTypeH\x01\x88\x01\x01"U\n\x07KeyType\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\x0c\n\x08SEQUENCE\x10\x01\x12\x08\n\x04\x44ICT\x10\x02\x12\x0c\n\x08GET_ATTR\x10\x03\x12\x13\n\x0f\x46LATTENED_INDEX\x10\x04\x42\x07\n\x05_nameB\x07\n\x05_typeB\x08\n\x06_valueb\x06proto3'
)

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(
    DESCRIPTOR, 'tree_metadata_pb2', globals()
)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _VALUEMETADATA._serialized_start = 41
  _VALUEMETADATA._serialized_end = 84
  _TREEMETADATA._serialized_start = 87
  _TREEMETADATA._serialized_end = 515
  _TREEMETADATA_KEYVALUEPAIR._serialized_start = 168
  _TREEMETADATA_KEYVALUEPAIR._serialized_end = 515
  _TREEMETADATA_KEYVALUEPAIR_KEY._serialized_start = 300
  _TREEMETADATA_KEYVALUEPAIR_KEY._serialized_end = 505
  _TREEMETADATA_KEYVALUEPAIR_KEY_KEYTYPE._serialized_start = 402
  _TREEMETADATA_KEYVALUEPAIR_KEY_KEYTYPE._serialized_end = 487
# @@protoc_insertion_point(module_scope)
